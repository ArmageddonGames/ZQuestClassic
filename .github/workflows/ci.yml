name: CI

on:
  push:
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        include:
          - runs-on: windows-2022
            arch: x64
          - runs-on: windows-2022
            arch: win32
          - runs-on: macos-12
            arch: intel
      fail-fast: false
    # See https://github.com/community/community/discussions/40777
    # uses: ./.github/workflows/test.yml
    uses: ArmageddonGames/ZQuestClassic/.github/workflows/test.yml@main
    with:
      runs-on: ${{ matrix.runs-on }}
      arch: ${{ matrix.arch }}

  compile-web:
    runs-on: macos-12

    steps:
      - name: git clone
        uses: actions/checkout@v2

      - uses: mymindstorm/setup-emsdk@v11
        with:
          version: "3.1.24"
          actions-cache-folder: "emsdk-cache"
      - run: brew install ninja ccache
      - name: Install Bison
        run: |
          wget http://ftp.gnu.org/gnu/bison/bison-3.6.tar.gz
          tar -zxvf bison-3.6.tar.gz
          cd bison-3.6
          ./configure
          make
          sudo make install

      # Setup build cache via ccache.
      - name: ccache cache files
        uses: actions/cache@v3
        with:
          path: .ccache
          key: web-ccache-${{ github.run_id }}
          restore-keys: web-ccache-
      - run: ccache -z

      - name: Install Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - run: |
          git clone https://github.com/psi29a/unsf.git
          cd unsf
          cmake -S . -B build .
          cmake --build build
          echo "UNSF=$PWD/build/unsf-static" >> $GITHUB_ENV

      - run: cp src/metadata/*.h.sig src/metadata/sigs/
      - run: bash build_emscripten.sh
        env:
          ZC_EMCC_CMAKE_EXTRA_FLAGS: -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
      - run: ccache -s
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: emscripten cmake
          path: |
            ${{ github.workspace }}/build_emscripten/CMakeFiles/CMakeOutput.log
            ${{ github.workspace }}/build_emscripten/CMakeFiles/CMakeError.log
