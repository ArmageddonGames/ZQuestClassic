name: Release

on:
  schedule:
    # Once a week at midnight EST on saturday.
    - cron: '0 4 * * 6'
  workflow_dispatch: {}

jobs:
  check_date:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2
      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  release:
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}

    # Prevent forks from running this job.
    # if: (github.event_name == 'schedule' && github.repository == 'ArmageddonGames/ZeldaClassic') || (github.event_name != 'schedule')
    runs-on: windows-2019

    steps:
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: win32

    - name: git clone
      uses: actions/checkout@v2

    - name: Install Dependencies
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install .github/dependencies.config -y

    - run: cp src/metadata/*.h.sig src/metadata/sigs/
    - run: cmake . -A win32
    - run: cmake --build . --config Release
    - run: echo y | ./buildpack.bat
      working-directory: output/_auto

    - name: Get current time
      uses: josStorer/get-current-time@v2
      id: current-time
      with:
        format: YYYY-MM-DD
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: 2.55 Nightly ${{ steps.current-time.outputs.formattedTime }}
        tag_name: nightly-${{ steps.current-time.outputs.formattedTime }}
        files: output/_auto/buildpack.zip
        prerelease: true
        fail_on_unmatched_files: true
        generate_release_notes: true
