Compiling 'armos.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Generating object code
Pass 6: Assembling
Success!
Compile finished with exit code '0' (success)

PUSHR d0; void run(int) Params
PUSHR REFFFC; void run(int) Body Start
PUSHARGSR d2,0.0003
SETR d4,SP
SETV d2,0
STORED d2,2
SETV d2,0
STORED d2,1
SETV d2,0
STORED d2,0
PUSHR d4
PUSHV 0.0018; UsrFunc[NPC Ghost_InitAutoGhost(FFC, int)] Return Addr
LOADD d2,3; UsrFunc[NPC Ghost_InitAutoGhost(FFC, int)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 4501; UsrFunc[NPC Ghost_InitAutoGhost(FFC, int)] Call
POP d4
STORED d2,2
PUSHR d4
PUSHV 0.0024; UsrFunc[void Ghost_SetFlag(int)] Return Addr
PUSHV 89; UsrFunc[void Ghost_SetFlag(int)] Params
GOTO 3369; UsrFunc[void Ghost_SetFlag(int)] Call
PEEK d4
PUSHV 0.0028; UsrFunc[void Ghost_SetFlag(int)] Return Addr
PUSHV 3; UsrFunc[void Ghost_SetFlag(int)] Params
GOTO 3369; UsrFunc[void Ghost_SetFlag(int)] Call
PEEK d4
PUSHV 0.0032; UsrFunc[void Ghost_SetFlag(int)] Return Addr
PUSHV 16384; UsrFunc[void Ghost_SetFlag(int)] Params
GOTO 3369; UsrFunc[void Ghost_SetFlag(int)] Call
POP d4
LOADD d2,2; InlineFunc[void Game->PlaySound(int)] Params
PUSHR d2
SETV d2,0
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCDD
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
PUSHR d4
PUSHV 0.0048; UsrFunc[void SpawnAnimation(FFC, NPC)] Return Addr
LOADD d2,3; UsrFunc[void SpawnAnimation(FFC, NPC)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
GOTO 6126; UsrFunc[void SpawnAnimation(FFC, NPC)] Call
POP d4
LOADD d2,2
PUSHR d2
POP REFNPC
SETR d2,NPCSTEP
DIVV d2,100
STORED d2,1
LOADD d2,2
PUSHR d2
SETV d2,1
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCDD
STORED d2,0
SETR d2,gd4
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 72
SETR d2,gd6
COMPAREV d2,0
SETLESSI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 80
SETV d2,1.5000
SETR gd6,d2
LOADD d2,0; InlineFunc[void Game->PlaySound(int)] Params
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
PUSHR d4
PUSHV 0.0086; UsrFunc[void Ghost_MoveTowardLink(int, int)] Return Addr
LOADD d2,1; UsrFunc[void Ghost_MoveTowardLink(int, int)] Params
PUSHR d2
PUSHV 3
GOTO 4675; UsrFunc[void Ghost_MoveTowardLink(int, int)] Call
PEEK d4
PUSHV 0.0094; UsrFunc[bool Ghost_Waitframe(FFC, NPC, bool, bool)] Return Addr
LOADD d2,3; UsrFunc[bool Ghost_Waitframe(FFC, NPC, bool, bool)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
PUSHARGSV 1,0.0002
GOTO 4779; UsrFunc[bool Ghost_Waitframe(FFC, NPC, bool, bool)] Call
POP d4
GOTO 63
POPARGS d5,0.0005
QUIT; void run(int) Body End
SETR d4,SP; Func[int Angle(int, int, int, int)] Body Start
LOADD d2,1; InlineFunc[int ArcTan(int, int)] Params AND InlineFunc[int RadtoDeg(int)] Params
PUSHR d2
LOADD d2,3
POP d3
SUBR d3,d2
PUSHR d3
LOADD d2,0
PUSHR d2
LOADD d2,2
POP d3
SUBR d3,d2
SETR d1,d3
POP d0; InlineFunc[int ArcTan(int, int)] Body Start
ARCTANR d2; InlineFunc[int ArcTan(int, int)] Body End
SETR d3,d2
RADTODEG d2,d3; InlineFunc[int RadtoDeg(int)] Body
GOTO 116
POPARGS d5,0.0004
RETURN; Func[int Angle(int, int, int, int)] Body End
SETR d4,SP; Func[int AngleDir8(int)] Body Start
LOADD d2,0
COMPAREV d2,157.5000
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 130
LOADD d2,0
COMPAREV d2,112.5000
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 136
SETV d2,6
GOTO 240
LOADD d2,0
COMPAREV d2,112.5000
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 147
LOADD d2,0
COMPAREV d2,67.5000
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 153
SETV d2,1
GOTO 240
LOADD d2,0
COMPAREV d2,67.5000
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 164
LOADD d2,0
COMPAREV d2,22.5000
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 170
SETV d2,7
GOTO 240
LOADD d2,0
COMPAREV d2,22.5000
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 181
LOADD d2,0
COMPAREV d2,-22.5000
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 187
SETV d2,3
GOTO 240
LOADD d2,0
COMPAREV d2,-22.5000
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 198
LOADD d2,0
COMPAREV d2,-67.5000
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 204
SETV d2,5
GOTO 240
LOADD d2,0
COMPAREV d2,-67.5000
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 215
LOADD d2,0
COMPAREV d2,-112.5000
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 221
SETV d2,0
GOTO 240
LOADD d2,0
COMPAREV d2,-112.5000
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 232
LOADD d2,0
COMPAREV d2,-157.5000
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 238
SETV d2,4
GOTO 240
SETV d2,2
GOTO 240
POPARGS d5,0.0001
RETURN; Func[int AngleDir8(int)] Body End
SETR d4,SP; Func[int Clamp(int, int, int)] Body Start
LOADD d2,2
PUSHR d2
LOADD d2,1
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 256
LOADD d2,1
STORED d2,2
GOTO 268
LOADD d2,2
PUSHR d2
LOADD d2,0
POP d3
COMPARER d3,d2
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 268
LOADD d2,0
STORED d2,2
LOADD d2,2
GOTO 270
POPARGS d5,0.0003
RETURN; Func[int Clamp(int, int, int)] Body End
SETR d4,SP; Func[bool ClockIsActive()] Body Start
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,6
COMPAREV d2,0
SETFALSEI d2
RETURN; Func[bool ClockIsActive()] Body End
SETR d4,SP; Func[int ComboAt(int, int)] Body Start
PUSHR d4
PUSHV 0.0288; UsrFunc[int VBound(int, int, int)] Return Addr
LOADD d2,1; UsrFunc[int VBound(int, int, int)] Params
PUSHR d2
PUSHV 255
PUSHV 0
GOTO 309; UsrFunc[int VBound(int, int, int)] Call
POP d4
STORED d2,1
PUSHR d4
PUSHV 0.0297; UsrFunc[int VBound(int, int, int)] Return Addr
LOADD d2,0; UsrFunc[int VBound(int, int, int)] Params
PUSHR d2
PUSHV 175
PUSHV 0
GOTO 309; UsrFunc[int VBound(int, int, int)] Call
POP d4
STORED d2,0
LOADD d2,0
ANDV d2,240
PUSHR d2
LOADD d2,1
RSHIFTV d2,4
POP d3
ADDR d2,d3
GOTO 307
POPARGS d5,0.0002
RETURN; Func[int ComboAt(int, int)] Body End
SETR d4,SP; Func[int VBound(int, int, int)] Body Start
LOADD d2,2
PUSHR d2
LOADD d2,0
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 323
LOADD d2,0
STORED d2,2
GOTO 335
LOADD d2,2
PUSHR d2
LOADD d2,1
POP d3
COMPARER d3,d2
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 335
LOADD d2,1
STORED d2,2
LOADD d2,2
GOTO 337
POPARGS d5,0.0003
RETURN; Func[int VBound(int, int, int)] Body End
PUSHR d2; Func[bool IsWater(int)] Body Start
SETR d4,SP
LOADD d2,1
PUSHR d2
POP d0
SETR d2,COMBOTD
STORED d2,0
LOADD d2,0
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 353
SETV d2,1
GOTO 384
LOADD d2,0
COMPAREV d2,18
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 360
SETV d2,1
GOTO 384
LOADD d2,0
COMPAREV d2,19
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 367
SETV d2,1
GOTO 384
LOADD d2,0
COMPAREV d2,86
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 376
LOADD d2,0
COMPAREV d2,91
SETLESSI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 382
SETV d2,1
GOTO 384
SETV d2,0
GOTO 384
POPARGS d5,0.0002
RETURN; Func[bool IsWater(int)] Body End
SETR d4,SP; Func[bool __IsPit(int)] Body Start
PUSHR d4
PUSHV 0.0392; UsrFunc[bool IsPit(int)] Return Addr
LOADD d2,0; UsrFunc[bool IsPit(int)] Params
PUSHR d2
GOTO 6070; UsrFunc[bool IsPit(int)] Call
POP d4
GOTO 394
POPARGS d5,0.0001
RETURN; Func[bool __IsPit(int)] Body End
SETR d4,SP; Func[bool Ghost_CanMove(int, int, int)] Body Start
PUSHR d4
PUSHV 0.0412; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Return Addr
LOADD d2,2; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Params
PUSHR d2
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
SETR d2,gd4
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
PUSHR d2
GOTO 416; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Call
POP d4
GOTO 414
POPARGS d5,0.0003
RETURN; Func[bool Ghost_CanMove(int, int, int)] Body End
SETR d4,SP; Func[bool Ghost_CanMove(int, int, int, bool)] Body Start
LOADD d2,2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 424
SETV d2,1
GOTO 480
LOADD d2,3
COMPAREV d2,4
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 432
LOADD d2,2
MULTV d2,0.7071
STORED d2,2
PUSHR d4
PUSHV 0.0437; UsrFunc[int __NormalizeDir(int)] Return Addr
LOADD d2,3; UsrFunc[int __NormalizeDir(int)] Params
PUSHR d2
GOTO 482; UsrFunc[int __NormalizeDir(int)] Call
POP d4
STORED d2,3
LOADD d2,2
COMPAREV d2,8
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 467
PUSHR d4
PUSHV 0.0458; UsrFunc[bool __Ghost_CanMoveSingle(int, int, int, bool)] Return Addr
LOADD d2,3; UsrFunc[bool __Ghost_CanMoveSingle(int, int, int, bool)] Params
PUSHR d2
LOADD d2,2
SUBV d2,8
PUSHR d2
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
GOTO 558; UsrFunc[bool __Ghost_CanMoveSingle(int, int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 463
SETV d2,0
GOTO 480
LOADD d2,2
SUBV d2,8
STORED d2,2
GOTO 439
PUSHR d4
PUSHV 0.0478; UsrFunc[bool __Ghost_CanMoveSingle(int, int, int, bool)] Return Addr
LOADD d2,3; UsrFunc[bool __Ghost_CanMoveSingle(int, int, int, bool)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
GOTO 558; UsrFunc[bool __Ghost_CanMoveSingle(int, int, int, bool)] Call
POP d4
GOTO 480
POPARGS d5,0.0004
RETURN; Func[bool Ghost_CanMove(int, int, int, bool)] Body End
SETR d4,SP; Func[int __NormalizeDir(int)] Body Start
LOADD d2,0
COMPAREV d2,0
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 492
LOADD d2,0
COMPAREV d2,7
SETLESSI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 498
LOADD d2,0
GOTO 556
LOADD d2,0
COMPAREV d2,8
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 505
SETV d2,0
GOTO 556
LOADD d2,0
COMPAREV d2,9
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 512
SETV d2,5
GOTO 556
LOADD d2,0
COMPAREV d2,10
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 519
SETV d2,3
GOTO 556
LOADD d2,0
COMPAREV d2,11
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 526
SETV d2,7
GOTO 556
LOADD d2,0
COMPAREV d2,12
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 533
SETV d2,1
GOTO 556
LOADD d2,0
COMPAREV d2,13
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 540
SETV d2,6
GOTO 556
LOADD d2,0
COMPAREV d2,14
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 547
SETV d2,2
GOTO 556
LOADD d2,0
COMPAREV d2,15
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 554
SETV d2,4
GOTO 556
SETV d2,0
GOTO 556
POPARGS d5,0.0001
RETURN; Func[int __NormalizeDir(int)] Body End
PUSHARGSR d2,0.0006; Func[bool __Ghost_CanMoveSingle(int, int, int, bool)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,5
SETV d2,0
STORED d2,4
SETV d2,0
STORED d2,3
SETV d2,0
STORED d2,2
SETV d2,0
STORED d2,1
LOADD d2,9
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 697
SETR d2,gd14
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd14
POP d3
MULTR d2,d3
PUSHR d2
SETR d2,gd24
RSHIFTV d2,8
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
SETR d2,gd24
ANDV d2,255
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,3
SETR d2,gd2
PUSHR d2
SETR d2,gd23
RSHIFTV d2,8
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,8
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,4
SETR d2,gd3
PUSHR d2
SETR d2,gd24
RSHIFTV d2,8
POP d3
ADDR d2,d3
STORED d2,2
LOADD d2,3
DIVV d2,8
SUBV d2,1
STORED d2,1
SETV d2,1
STORED d2,5
LOADD d2,5
PUSHR d2
LOADD d2,1
POP d3
COMPARER d3,d2
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 653
PUSHR d4
PUSHV 0.0642; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,4; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,5
MULTV d2,8
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 647
SETV d2,0
GOTO 1378
LOADD d2,5
PUSHR d2
ADDV d2,1
STORED d2,5
POP d2
GOTO 620
PUSHR d4
PUSHV 0.0666; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,4; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,7
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 671
SETV d2,0
GOTO 1378
PUSHR d4
PUSHV 0.0690; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,4; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,7
POP d3
SUBR d3,d2
SETR d2,d3
SUBV d2,1
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 695
SETV d2,0
GOTO 1378
SETV d2,1
GOTO 1378
LOADD d2,9
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 835
SETR d2,gd14
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd14
POP d3
MULTR d2,d3
PUSHR d2
SETR d2,gd24
RSHIFTV d2,8
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
SETR d2,gd24
ANDV d2,255
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,3
SETR d2,gd2
PUSHR d2
SETR d2,gd13
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd13
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
SETR d2,gd23
ANDV d2,255
POP d3
SUBR d3,d2
SETR d2,d3
SUBV d2,1
PUSHR d2
LOADD d2,8
POP d3
ADDR d2,d3
STORED d2,4
SETR d2,gd3
PUSHR d2
SETR d2,gd24
RSHIFTV d2,8
POP d3
ADDR d2,d3
STORED d2,2
LOADD d2,3
DIVV d2,8
SUBV d2,1
STORED d2,1
SETV d2,1
STORED d2,5
LOADD d2,5
PUSHR d2
LOADD d2,1
POP d3
COMPARER d3,d2
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 791
PUSHR d4
PUSHV 0.0780; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,4; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,5
MULTV d2,8
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 785
SETV d2,0
GOTO 1378
LOADD d2,5
PUSHR d2
ADDV d2,1
STORED d2,5
POP d2
GOTO 758
PUSHR d4
PUSHV 0.0804; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,4; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,7
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 809
SETV d2,0
GOTO 1378
PUSHR d4
PUSHV 0.0828; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,4; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,7
POP d3
SUBR d3,d2
SETR d2,d3
SUBV d2,1
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 833
SETV d2,0
GOTO 1378
SETV d2,1
GOTO 1378
LOADD d2,9
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 982
PUSHR d4
PUSHV 0.0843; UsrFunc[bool IsSideview()] Return Addr
GOTO 4728; UsrFunc[bool IsSideview()] Call
POP d4
COMPAREV d2,0
GOTOTRUE 854
PUSHR d4
PUSHV 0.0850; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 32; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 860
SETV d2,0
GOTO 1378
SETR d2,gd13
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd13
POP d3
MULTR d2,d3
PUSHR d2
SETR d2,gd23
RSHIFTV d2,8
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
SETR d2,gd23
ANDV d2,255
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,3
SETR d2,gd3
PUSHR d2
SETR d2,gd24
RSHIFTV d2,8
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,8
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,4
SETR d2,gd2
PUSHR d2
SETR d2,gd23
RSHIFTV d2,8
POP d3
ADDR d2,d3
STORED d2,2
LOADD d2,3
DIVV d2,8
SUBV d2,1
STORED d2,1
SETV d2,1
STORED d2,5
LOADD d2,5
PUSHR d2
LOADD d2,1
POP d3
COMPARER d3,d2
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 938
PUSHR d4
PUSHV 0.0927; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,2; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,5
MULTV d2,8
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,4
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 932
SETV d2,0
GOTO 1378
LOADD d2,5
PUSHR d2
ADDV d2,1
STORED d2,5
POP d2
GOTO 905
PUSHR d4
PUSHV 0.0951; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,2; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,7
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,4
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 956
SETV d2,0
GOTO 1378
PUSHR d4
PUSHV 0.0975; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,2; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,7
POP d3
SUBR d3,d2
SETR d2,d3
SUBV d2,1
PUSHR d2
LOADD d2,4
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 980
SETV d2,0
GOTO 1378
SETV d2,1
GOTO 1378
LOADD d2,9
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1120
SETR d2,gd13
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd13
POP d3
MULTR d2,d3
PUSHR d2
SETR d2,gd23
RSHIFTV d2,8
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
SETR d2,gd23
ANDV d2,255
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,3
SETR d2,gd3
PUSHR d2
SETR d2,gd14
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd14
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
SETR d2,gd24
ANDV d2,255
POP d3
SUBR d3,d2
SETR d2,d3
SUBV d2,1
PUSHR d2
LOADD d2,8
POP d3
ADDR d2,d3
STORED d2,4
SETR d2,gd2
PUSHR d2
SETR d2,gd23
RSHIFTV d2,8
POP d3
ADDR d2,d3
STORED d2,2
LOADD d2,3
DIVV d2,8
SUBV d2,1
STORED d2,1
SETV d2,1
STORED d2,5
LOADD d2,5
PUSHR d2
LOADD d2,1
POP d3
COMPARER d3,d2
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 1076
PUSHR d4
PUSHV 0.1065; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,2; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,5
MULTV d2,8
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,4
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 1070
SETV d2,0
GOTO 1378
LOADD d2,5
PUSHR d2
ADDV d2,1
STORED d2,5
POP d2
GOTO 1043
PUSHR d4
PUSHV 0.1089; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,2; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,7
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,4
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 1094
SETV d2,0
GOTO 1378
PUSHR d4
PUSHV 0.1113; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Return Addr
LOADD d2,2; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Params
PUSHR d2
LOADD d2,3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,7
POP d3
SUBR d3,d2
SETR d2,d3
SUBV d2,1
PUSHR d2
LOADD d2,4
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 1380; UsrFunc[bool Ghost_CanMovePixel(int, int, bool)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 1118
SETV d2,0
GOTO 1378
SETV d2,1
GOTO 1378
LOADD d2,9
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1184
SETV d2,0
STORED d2,0
SETR d2,gd2
PUSHR d2
LOADD d2,8
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd2,d2
PUSHR d4
PUSHV 0.1144; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Return Addr
PUSHV 0; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Params
LOADD d2,8
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 416; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Call
POP d4
STORED d2,0
SETR d2,gd2
PUSHR d2
LOADD d2,8
POP d3
ADDR d2,d3
SETR gd2,d2
LOADD d2,0
COMPAREV d2,0
GOTOFALSE 1157
SETV d2,0
GOTO 1378
SETR d2,gd3
PUSHR d2
LOADD d2,8
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd3,d2
PUSHR d4
PUSHV 0.1174; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Return Addr
PUSHV 2; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Params
LOADD d2,8
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 416; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Call
POP d4
STORED d2,0
SETR d2,gd3
PUSHR d2
LOADD d2,8
POP d3
ADDR d2,d3
SETR gd3,d2
LOADD d2,0
GOTO 1378
LOADD d2,9
COMPAREV d2,5
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1248
SETV d2,0
STORED d2,0
SETR d2,gd2
PUSHR d2
LOADD d2,8
POP d3
ADDR d2,d3
SETR gd2,d2
PUSHR d4
PUSHV 0.1207; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Return Addr
PUSHV 0; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Params
LOADD d2,8
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 416; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Call
POP d4
STORED d2,0
SETR d2,gd2
PUSHR d2
LOADD d2,8
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd2,d2
LOADD d2,0
COMPAREV d2,0
GOTOFALSE 1221
SETV d2,0
GOTO 1378
SETR d2,gd3
PUSHR d2
LOADD d2,8
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd3,d2
PUSHR d4
PUSHV 0.1238; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Return Addr
PUSHV 3; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Params
LOADD d2,8
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 416; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Call
POP d4
STORED d2,0
SETR d2,gd3
PUSHR d2
LOADD d2,8
POP d3
ADDR d2,d3
SETR gd3,d2
LOADD d2,0
GOTO 1378
LOADD d2,9
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1312
SETV d2,0
STORED d2,0
SETR d2,gd2
PUSHR d2
LOADD d2,8
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd2,d2
PUSHR d4
PUSHV 0.1272; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Return Addr
PUSHV 1; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Params
LOADD d2,8
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 416; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Call
POP d4
STORED d2,0
SETR d2,gd2
PUSHR d2
LOADD d2,8
POP d3
ADDR d2,d3
SETR gd2,d2
LOADD d2,0
COMPAREV d2,0
GOTOFALSE 1285
SETV d2,0
GOTO 1378
SETR d2,gd3
PUSHR d2
LOADD d2,8
POP d3
ADDR d2,d3
SETR gd3,d2
PUSHR d4
PUSHV 0.1301; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Return Addr
PUSHV 2; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Params
LOADD d2,8
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 416; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Call
POP d4
STORED d2,0
SETR d2,gd3
PUSHR d2
LOADD d2,8
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd3,d2
LOADD d2,0
GOTO 1378
LOADD d2,9
COMPAREV d2,7
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1376
SETV d2,0
STORED d2,0
SETR d2,gd2
PUSHR d2
LOADD d2,8
POP d3
ADDR d2,d3
SETR gd2,d2
PUSHR d4
PUSHV 0.1335; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Return Addr
PUSHV 1; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Params
LOADD d2,8
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 416; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Call
POP d4
STORED d2,0
SETR d2,gd2
PUSHR d2
LOADD d2,8
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd2,d2
LOADD d2,0
COMPAREV d2,0
GOTOFALSE 1349
SETV d2,0
GOTO 1378
SETR d2,gd3
PUSHR d2
LOADD d2,8
POP d3
ADDR d2,d3
SETR gd3,d2
PUSHR d4
PUSHV 0.1365; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Return Addr
PUSHV 3; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Params
LOADD d2,8
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,6
PUSHR d2
GOTO 416; UsrFunc[bool Ghost_CanMove(int, int, int, bool)] Call
POP d4
STORED d2,0
SETR d2,gd3
PUSHR d2
LOADD d2,8
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd3,d2
LOADD d2,0
GOTO 1378
SETV d2,0
GOTO 1378
POPARGS d5,0.0010
RETURN; Func[bool __Ghost_CanMoveSingle(int, int, int, bool)] Body End
PUSHR d2; Func[bool Ghost_CanMovePixel(int, int, bool)] Body Start
SETR d4,SP
LOADD d2,3
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 1396
LOADD d2,3
COMPAREV d2,255
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 1406
LOADD d2,2
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 1416
LOADD d2,2
COMPAREV d2,175
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1425
PUSHR d4
PUSHV 0.1423; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 8192; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
GOTO 1634
PUSHR d4
PUSHV 0.1432; UsrFunc[int ComboAt(int, int)] Return Addr
LOADD d2,3; UsrFunc[int ComboAt(int, int)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
GOTO 280; UsrFunc[int ComboAt(int, int)] Call
POP d4
STORED d2,0
PUSHR d4
PUSHV 0.1438; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 65537; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 1533
LOADD d2,0
PUSHR d2
POP d0
SETR d2,COMBOTD
COMPAREV d2,110
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1451
SETV d2,0
GOTO 1634
LOADD d2,0
PUSHR d2
POP d0
SETR d2,COMBOFD
COMPAREV d2,96
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1461
SETV d2,0
GOTO 1634
LOADD d2,0
PUSHR d2
POP d0
SETR d2,COMBOID
COMPAREV d2,96
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1471
SETV d2,0
GOTO 1634
PUSHR d4
PUSHV 0.1475; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 65536; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1489
LOADD d2,0
PUSHR d2
POP d0
SETR d2,COMBOTD
COMPAREV d2,44
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1488
SETV d2,0
GOTO 1634
GOTO 1533
LOADD d2,1
COMPAREV d2,0
GOTOTRUE 1503
LOADD d2,0
PUSHR d2
POP d0
SETR d2,COMBOTD
COMPAREV d2,54
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1502
SETV d2,0
GOTO 1634
GOTO 1533
LOADD d2,0
PUSHR d2
POP d0
SETR d2,COMBOTD
COMPAREV d2,128
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1513
SETV d2,0
GOTO 1634
LOADD d2,0
PUSHR d2
POP d0
SETR d2,COMBOFD
COMPAREV d2,97
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1523
SETV d2,0
GOTO 1634
LOADD d2,0
PUSHR d2
POP d0
SETR d2,COMBOID
COMPAREV d2,97
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1533
SETV d2,0
GOTO 1634
PUSHR d4
PUSHV 0.1537; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 65539; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1547
PUSHR d4
PUSHV 0.1545; UsrFunc[bool IsWater(int)] Return Addr
LOADD d2,0; UsrFunc[bool IsWater(int)] Params
PUSHR d2
GOTO 339; UsrFunc[bool IsWater(int)] Call
POP d4
GOTO 1634
PUSHR d4
PUSHV 0.1551; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 65538; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1572
PUSHR d4
PUSHV 0.1559; UsrFunc[bool IsWater(int)] Return Addr
LOADD d2,0; UsrFunc[bool IsWater(int)] Params
PUSHR d2
GOTO 339; UsrFunc[bool IsWater(int)] Call
POP d4
COMPAREV d2,0.0001
GOTOMORE 1570
LOADD d2,0
PUSHR d2
POP d0
SETR d2,COMBOTD
COMPAREV d2,58
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
GOTO 1634
PUSHR d4
PUSHV 0.1577; UsrFunc[bool IsWater(int)] Return Addr
LOADD d2,0; UsrFunc[bool IsWater(int)] Params
PUSHR d2
GOTO 339; UsrFunc[bool IsWater(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1586
PUSHR d4
PUSHV 0.1584; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 2048; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
GOTO 1634
PUSHR d4
PUSHV 0.1591; UsrFunc[bool __IsPit(int)] Return Addr
LOADD d2,0; UsrFunc[bool __IsPit(int)] Params
PUSHR d2
GOTO 386; UsrFunc[bool __IsPit(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1600
PUSHR d4
PUSHV 0.1598; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 4096; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
GOTO 1634
PUSHR d4
PUSHV 0.1604; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 1024; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1609
SETV d2,1
GOTO 1634
PUSHR d4
PUSHV 0.1613; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 32768; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1625
PUSHR d4
PUSHV 0.1623; UsrFunc[bool __FullTileWalkable(int, int)] Return Addr
LOADD d2,3; UsrFunc[bool __FullTileWalkable(int, int)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
GOTO 1668; UsrFunc[bool __FullTileWalkable(int, int)] Call
POP d4
GOTO 1634
LOADD d2,3; InlineFunc[bool Screen->isSolid(int, int)] Params
PUSHR d2
LOADD d2,2
SETR d1,d2
POP d0; InlineFunc[bool Screen->isSolid(int, int)] Body Start
ISSOLID d2; InlineFunc[bool Screen->isSolid(int, int)] Body End
COMPAREV d2,0
SETTRUEI d2
GOTO 1634
POPARGS d5,0.0004
RETURN; Func[bool Ghost_CanMovePixel(int, int, bool)] Body End
SETR d4,SP; Func[bool Ghost_FlagIsSet(int)] Body Start
LOADD d2,0
ANDV d2,65536
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1655
SETR d2,gd17
PUSHR d2
LOADD d2,0
ANDV d2,65535
SETV d3,1
LSHIFTR d3,d2
SETR d2,d3
POP d3
ANDR d2,d3
COMPAREV d2,0
SETFALSEI d2
GOTO 1666
SETR d2,gd16
PUSHR d2
LOADD d2,0
POP d3
ANDR d2,d3
PUSHR d2
LOADD d2,0
POP d3
COMPARER d3,d2
SETTRUEI d2
GOTO 1666
POPARGS d5,0.0001
RETURN; Func[bool Ghost_FlagIsSet(int)] Body End
SETR d4,SP; Func[bool __FullTileWalkable(int, int)] Body Start
LOADD d2,1
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 1683
LOADD d2,0
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 1691
LOADD d2,1
COMPAREV d2,256
SETMOREI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 1699
LOADD d2,0
COMPAREV d2,176
SETMOREI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1708
PUSHR d4
PUSHV 0.1706; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 8192; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
GOTO 1773
LOADD d2,1
PUSHR d2
LOADD d2,1
MODV d2,16
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,1
LOADD d2,0
PUSHR d2
LOADD d2,0
MODV d2,16
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,0
LOADD d2,1; InlineFunc[bool Screen->isSolid(int, int)] Params
PUSHR d2
LOADD d2,0
SETR d1,d2
POP d0; InlineFunc[bool Screen->isSolid(int, int)] Body Start
ISSOLID d2; InlineFunc[bool Screen->isSolid(int, int)] Body End
COMPAREV d2,0.0001
GOTOMORE 1741
LOADD d2,1; InlineFunc[bool Screen->isSolid(int, int)] Params
ADDV d2,8
PUSHR d2
LOADD d2,0
SETR d1,d2
POP d0; InlineFunc[bool Screen->isSolid(int, int)] Body Start
ISSOLID d2; InlineFunc[bool Screen->isSolid(int, int)] Body End
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 1753
LOADD d2,1; InlineFunc[bool Screen->isSolid(int, int)] Params
PUSHR d2
LOADD d2,0
ADDV d2,8
SETR d1,d2
POP d0; InlineFunc[bool Screen->isSolid(int, int)] Body Start
ISSOLID d2; InlineFunc[bool Screen->isSolid(int, int)] Body End
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 1766
LOADD d2,1; InlineFunc[bool Screen->isSolid(int, int)] Params
ADDV d2,8
PUSHR d2
LOADD d2,0
ADDV d2,8
SETR d1,d2
POP d0; InlineFunc[bool Screen->isSolid(int, int)] Body Start
ISSOLID d2; InlineFunc[bool Screen->isSolid(int, int)] Body End
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1771
SETV d2,0
GOTO 1773
SETV d2,1
GOTO 1773
POPARGS d5,0.0002
RETURN; Func[bool __FullTileWalkable(int, int)] Body End
PUSHARGSR d2,0.0004; Func[bool Ghost_CheckFreeze(FFC, NPC)] Body Start
SETR d4,SP
PUSHR d4
PUSHV 0.1781; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 16; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1789
PUSHR d4
PUSHV 0.1787; UsrFunc[bool ClockIsActive()] Return Addr
GOTO 272; UsrFunc[bool ClockIsActive()] Call
POP d4
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 1813
PUSHR d4
PUSHV 0.1797; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 8; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1809
LOADD d2,4
PUSHR d2
POP REFNPC
SETR d2,NPCSTUN
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 2062
LOADD d2,5
PUSHR d2
POP REFFFC
SETR d2,XD
STORED d2,3
LOADD d2,5
PUSHR d2
POP REFFFC
SETR d2,YD
STORED d2,2
LOADD d2,5
PUSHR d2
POP REFFFC
SETR d2,XD2
STORED d2,1
LOADD d2,5
PUSHR d2
POP REFFFC
SETR d2,YD2
STORED d2,0
SETV d2,0
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR XD,d2
SETV d2,0
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR YD,d2
SETV d2,0
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR XD2,d2
SETV d2,0
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR YD2,d2
SETR d2,gd18
ORV d2,2
SETR gd18,d2
PUSHR d4
PUSHV 0.1879; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 16; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1887
PUSHR d4
PUSHV 0.1885; UsrFunc[bool ClockIsActive()] Return Addr
GOTO 272; UsrFunc[bool ClockIsActive()] Call
POP d4
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 1911
PUSHR d4
PUSHV 0.1895; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 8; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1907
LOADD d2,4
PUSHR d2
POP REFNPC
SETR d2,NPCSTUN
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 2026
PUSHR d4
PUSHV 0.1921; UsrFunc[void __Ghost_UpdateFlashing(FFC, NPC)] Return Addr
LOADD d2,5; UsrFunc[void __Ghost_UpdateFlashing(FFC, NPC)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 2066; UsrFunc[void __Ghost_UpdateFlashing(FFC, NPC)] Call
PEEK d4
PUSHV 0.1926; UsrFunc[void __Ghost_DrawShadow(NPC)] Return Addr
LOADD d2,4; UsrFunc[void __Ghost_DrawShadow(NPC)] Params
PUSHR d2
GOTO 2154; UsrFunc[void __Ghost_DrawShadow(NPC)] Call
PEEK d4
PUSHV 0.1933; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Return Addr
LOADD d2,5; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 2341; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Call
POP d4
LOADD d2,4; InlineFunc[bool NPC->isValid()] Params
ISVALIDNPC d2; InlineFunc[bool NPC->isValid()] Body
COMPAREV d2,0
GOTOFALSE 1941
SETV d2,0
GOTO 2064
GOTO 1951
LOADD d2,4
PUSHR d2
POP REFNPC
SETR d2,NPCHP
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 1951
SETV d2,0
GOTO 2064
PUSHR d4
PUSHV 0.1958; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Return Addr
LOADD d2,5; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 2761; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Call
PEEK d4
PUSHV 0.1962; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 512; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 1983
SETR d2,gd11
PUSHR d2
PUSHR d4
PUSHV 0.1971; UsrFunc[int __NormalizeDir(int)] Return Addr
PUSHR gd5; UsrFunc[int __NormalizeDir(int)] Params
GOTO 482; UsrFunc[int __NormalizeDir(int)] Call
POP d4
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
GOTO 2017
PUSHR d4
PUSHV 0.1987; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 256; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 2008
SETR d2,gd11
PUSHR d2
PUSHR d4
PUSHV 0.1996; UsrFunc[int __NormalizeDir(int)] Return Addr
PUSHR gd5; UsrFunc[int __NormalizeDir(int)] Params
GOTO 482; UsrFunc[int __NormalizeDir(int)] Call
POP d4
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
GOTO 2017
SETR d2,gd11
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
PUSHR d4
PUSHV 0.2024; UsrFunc[void Ghost_CheckHit(FFC, NPC)] Return Addr
LOADD d2,5; UsrFunc[void Ghost_CheckHit(FFC, NPC)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 2897; UsrFunc[void Ghost_CheckHit(FFC, NPC)] Call
POP d4
GOTO 1875
LOADD d2,3
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR XD,d2
LOADD d2,2
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR YD,d2
LOADD d2,1
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR XD2,d2
LOADD d2,0
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR YD2,d2
SETV d2,1
GOTO 2064
POPARGS d5,0.0006
RETURN; Func[bool Ghost_CheckFreeze(FFC, NPC)] Body End
PUSHR d2; Func[void __Ghost_UpdateFlashing(FFC, NPC)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,0
SETR d2,gd21
COMPAREV d2,1
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 2087
SETR d2,gd21
PUSHR d2
SUBV d2,1
SETR gd21,d2
POP d2
SETR d2,gd21
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2087
SETV d2,1
STORED d2,0
SETR d2,gd18
ANDV d2,8
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2152
SETR d2,gd21
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLI d2
COMPAREV d2,0
GOTOTRUE 2116
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,1
RSHIFTV d2,1
SUBV2 9,d2
PUSHR d2
LOADD d2,2
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR CSET,d2
GOTO 2152
LOADD d2,1
PUSHR d2
POP REFNPC
SETR d2,NPCMFLAGS
ANDV d2,64
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 2140
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,1
ANDV d2,3
ADDV d2,6
PUSHR d2
LOADD d2,2
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR CSET,d2
GOTO 2152
LOADD d2,0
COMPAREV d2,0
GOTOTRUE 2152
SETR d2,gd12
PUSHR d2
LOADD d2,2
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR CSET,d2
POPARGS d5,0.0003
RETURN; Func[void __Ghost_UpdateFlashing(FFC, NPC)] Body End
PUSHARGSR d2,0.0004; Func[void __Ghost_DrawShadow(NPC)] Body Start
SETR d4,SP
SETR d2,gd4
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2162
GOTO 2339
PUSHR d4
PUSHV 0.2166; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 16384; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
CASTBOOLI d2
COMPAREV d2,0.0001
GOTOMORE 2178
LOADD d2,4
PUSHR d2
POP REFNPC
SETR d2,NPCEXTEND
COMPAREV d2,4
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 2189
LOADD d2,4
PUSHR d2
POP REFNPC
SETR d2,NPCTYPE
COMPAREV d2,40
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOFALSE 2193
GOTO 2339
SETV d2,0
STORED d2,3
SETV d2,0
STORED d2,2
SETV d2,0
STORED d2,1
SETV d2,0
STORED d2,0
SETR d2,gd13
COMPAREV d2,3
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 2215
SETR d2,gd14
COMPAREV d2,3
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
CASTBOOLI d2
COMPAREV d2,0
GOTOTRUE 2266
SETR d2,gd2
PUSHR d2
SETR d2,gd13
SUBV d2,1
MULTV d2,8
SETV d2,8
PUSHR d2
SETR d2,gd13
SUBV d2,1
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
STORED d2,3
SETR d2,gd3
PUSHR d2
SETR d2,gd14
SUBV d2,1
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd14
SUBV d2,1
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
STORED d2,2
SETV d2,1
STORED d2,0
PUSHR d4
PUSHV 0.2253; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 65540; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 2259
SETV d2,27400
STORED d2,1
GOTO 2265
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,2
ADDV d2,27400
STORED d2,1
GOTO 2321
SETR d2,gd2
PUSHR d2
SETR d2,gd13
SUBV d2,2
MULTV d2,8
SETV d2,8
PUSHR d2
SETR d2,gd13
SUBV d2,2
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
STORED d2,3
SETR d2,gd3
PUSHR d2
SETR d2,gd14
SUBV d2,2
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd14
SUBV d2,2
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
STORED d2,2
SETV d2,2
STORED d2,0
PUSHR d4
PUSHV 0.2300; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 65540; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 2306
SETV d2,27392
STORED d2,1
GOTO 2321
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,4
MULTV d2,2
SETV d2,2
PUSHR d2
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,4
POP d3
MULTR d2,d3
ADDV d2,27392
STORED d2,1
PUSHV 1; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params
LOADD d2,3
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 7
PUSHARGSV -1,0.0002
PUSHARGSV 0,0.0004
PUSHV 1
PUSHV 64
DRAWTILE; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0015; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS d5,0.0005
RETURN; Func[void __Ghost_DrawShadow(NPC)] Body End
PUSHARGSR d2,0.0004; Func[void Ghost_WaitframeLight(FFC, NPC)] Body Start
SETR d4,SP
ALLOCATEMEMV d2,24
STORED d2,2
SETR d0,d2
PUSHR d0
SETR d2,gd2
POP d0
WRITEPODARRAYVR 0,d2
PUSHR d0
SETR d2,gd3
POP d0
WRITEPODARRAYVR 1,d2
PUSHR d0
SETR d2,gd4
POP d0
WRITEPODARRAYVR 2,d2
PUSHR d0
SETR d2,gd6
POP d0
WRITEPODARRAYVR 3,d2
PUSHR d0
SETR d2,gd7
POP d0
WRITEPODARRAYVR 4,d2
PUSHR d0
SETR d2,gd8
POP d0
WRITEPODARRAYVR 5,d2
PUSHR d0
SETR d2,gd9
POP d0
WRITEPODARRAYVR 6,d2
PUSHR d0
SETR d2,gd10
POP d0
WRITEPODARRAYVR 7,d2
PUSHR d0
SETR d2,gd19
POP d0
WRITEPODARRAYVR 8,d2
PUSHR d0
SETR d2,gd20
POP d0
WRITEPODARRAYVR 9,d2
PUSHR d0
SETR d2,gd12
POP d0
WRITEPODARRAYVR 10,d2
PUSHR d0
SETR d2,gd5
POP d0
WRITEPODARRAYVR 11,d2
PUSHR d0
SETR d2,gd11
POP d0
WRITEPODARRAYVR 12,d2
PUSHR d0
SETR d2,gd13
POP d0
WRITEPODARRAYVR 13,d2
PUSHR d0
SETR d2,gd14
POP d0
WRITEPODARRAYVR 14,d2
PUSHR d0
SETR d2,gd16
POP d0
WRITEPODARRAYVR 15,d2
PUSHR d0
SETR d2,gd17
POP d0
WRITEPODARRAYVR 16,d2
PUSHR d0
SETR d2,gd18
POP d0
WRITEPODARRAYVR 17,d2
PUSHR d0
SETR d2,gd21
POP d0
WRITEPODARRAYVR 18,d2
PUSHR d0
SETR d2,gd22
POP d0
WRITEPODARRAYVR 19,d2
PUSHR d0
SETR d2,gd15
POP d0
WRITEPODARRAYVR 20,d2
PUSHR d0
SETR d2,gd23
POP d0
WRITEPODARRAYVR 21,d2
PUSHR d0
SETR d2,gd24
POP d0
WRITEPODARRAYVR 22,d2
ALLOCATEMEMV d2,21
STORED d2,1
SETR d2,gd26
PUSHR d2
POP d0
READPODARRAYV d2,0
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2478
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,21
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2478
SETR d2,gd26
PUSHR d2
LOADD d2,0
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,1
PUSHR d2
LOADD d2,0
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 2452
LOADD d2,4; InlineFunc[bool NPC->isValid()] Params
ISVALIDNPC d2; InlineFunc[bool NPC->isValid()] Body
COMPAREV d2,0
GOTOTRUE 2495
LOADD d2,2
ORV d2,65536
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
SETV d2,15
PUSHR d2
POP d0
POP d2
POP REFNPC
SETR NPCMISCD,d2
LOADD d2,4; InlineFunc[bool NPC->isValid()] Params
ISVALIDNPC d2; InlineFunc[bool NPC->isValid()] Body
COMPAREV d2,0
GOTOTRUE 2563
SETR d2,gd26
PUSHR d2
POP d0
READPODARRAYV d2,0
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2536
ALLOCATEMEMV d2,34
STORED d2,0
PUSHR d4
PUSHV 0.2520; UsrFunc[void __SetUpDrawingArray(FFC, NPC, int)] Return Addr
LOADD d2,5; UsrFunc[void __SetUpDrawingArray(FFC, NPC, int)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
LOADD d2,0
PUSHR d2
GOTO 5752; UsrFunc[void __SetUpDrawingArray(FFC, NPC, int)] Call
POP d4
LOADD d2,0
PUSHR d2
LOADD d2,2
SETR d0,d2
POP d2
WRITEPODARRAYVR 23,d2
PUSHR d4
PUSHV 0.2532; UsrFunc[void __HideFFCAndWait(FFC)] Return Addr
LOADD d2,5; UsrFunc[void __HideFFCAndWait(FFC)] Params
PUSHR d2
GOTO 6042; UsrFunc[void __HideFFCAndWait(FFC)] Call
POP d4
LOADD d3,0
DEALLOCATEMEMR d3
GOTO 2562
ALLOCATEMEMV d2,10
STORED d2,0
PUSHR d4
PUSHV 0.2547; UsrFunc[void __SetUpDrawingArray(FFC, NPC, int)] Return Addr
LOADD d2,5; UsrFunc[void __SetUpDrawingArray(FFC, NPC, int)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
LOADD d2,0
PUSHR d2
GOTO 5752; UsrFunc[void __SetUpDrawingArray(FFC, NPC, int)] Call
POP d4
LOADD d2,0
PUSHR d2
LOADD d2,2
SETR d0,d2
POP d2
WRITEPODARRAYVR 23,d2
PUSHR d4
PUSHV 0.2559; UsrFunc[void __HideFFCAndWait(FFC)] Return Addr
LOADD d2,5; UsrFunc[void __HideFFCAndWait(FFC)] Params
PUSHR d2
GOTO 6042; UsrFunc[void __HideFFCAndWait(FFC)] Call
POP d4
LOADD d3,0
DEALLOCATEMEMR d3
GOTO 2569
PUSHR d4
PUSHV 0.2568; UsrFunc[void __HideFFCAndWait(FFC)] Return Addr
LOADD d2,5; UsrFunc[void __HideFFCAndWait(FFC)] Params
PUSHR d2
GOTO 6042; UsrFunc[void __HideFFCAndWait(FFC)] Call
POP d4
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,0
SETR gd2,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,1
SETR gd3,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,2
SETR gd4,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,3
SETR gd6,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,4
SETR gd7,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,5
SETR gd8,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,6
SETR gd9,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,7
SETR gd10,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,8
SETR gd19,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,9
SETR gd20,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,10
SETR gd12,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,11
SETR gd5,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,12
SETR gd11,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,13
SETR gd13,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,14
SETR gd14,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,15
SETR gd16,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,16
SETR gd17,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,17
SETR gd18,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,18
SETR gd21,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,19
SETR gd22,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,20
SETR gd15,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,21
SETR gd23,d2
LOADD d2,2
PUSHR d2
POP d0
READPODARRAYV d2,22
SETR gd24,d2
LOADD d2,1
PUSHR d2
POP d0
READPODARRAYV d2,0
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2723
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,21
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2722
LOADD d2,1
PUSHR d2
LOADD d2,0
POP d0
READPODARRAYR d2,d2
PUSHR d2
SETR d2,gd26
PUSHR d2
LOADD d2,0
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 2696
GOTO 2729
SETV d2,0
PUSHR d2
SETR d2,gd26
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 2739
GOTO 2495
LOADD d2,4; InlineFunc[bool NPC->isValid()] Params
ISVALIDNPC d2; InlineFunc[bool NPC->isValid()] Body
COMPAREV d2,0
GOTOTRUE 2755
SETV d2,65536
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
SETV d2,15
PUSHR d2
POP d0
POP d2
POP REFNPC
SETR NPCMISCD,d2
LOADD d3,1
DEALLOCATEMEMR d3
LOADD d3,2
DEALLOCATEMEMR d3
POPARGS d5,0.0006
RETURN; Func[void Ghost_WaitframeLight(FFC, NPC)] Body End
SETR d4,SP; Func[void Ghost_SetPosition(FFC, NPC)] Body Start
LOADD d2,0; InlineFunc[bool NPC->isValid()] Params
ISVALIDNPC d2; InlineFunc[bool NPC->isValid()] Body
COMPAREV d2,0
GOTOFALSE 2767
GOTO 2895
PUSHR d4
PUSHV 0.2771; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 16384; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
SETTRUEI d2
CASTBOOLI d2
COMPAREV d2,0
GOTOTRUE 2805
SETR d2,gd2
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCX,d2
SETR d2,gd3
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCY,d2
SETR d2,gd4
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCZ,d2
GOTO 2837
SETR d2,gd2
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCX,d2
SETR d2,gd3
PUSHR d2
SETR d2,gd4
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCY,d2
SETV d2,0
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCZ,d2
PUSHR d4
PUSHV 0.2851; UsrFunc[int Clamp(int, int, int)] Return Addr
SETR d2,gd2; UsrFunc[int Clamp(int, int, int)] Params
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFNPC
SETR d2,NPCXOFS
POP d3
ADDR d2,d3
PUSHR d2
PUSHV -64
PUSHV 256
GOTO 242; UsrFunc[int Clamp(int, int, int)] Call
POP d4
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR X,d2
PUSHR d4
PUSHV 0.2886; UsrFunc[int Clamp(int, int, int)] Return Addr
SETR d2,gd3; UsrFunc[int Clamp(int, int, int)] Params
PUSHR d2
SETR d2,gd4
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFNPC
SETR d2,NPCYOFS
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFNPC
SETR d2,NPCZOFS
POP d3
SUBR d3,d2
PUSHR d3
PUSHV -64
PUSHV 176
GOTO 242; UsrFunc[int Clamp(int, int, int)] Call
POP d4
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR Y,d2
POPARGS d5,0.0002
RETURN; Func[void Ghost_SetPosition(FFC, NPC)] Body End
PUSHARGSR d2,0.0005; Func[void Ghost_CheckHit(FFC, NPC)] Body Start
SETR d4,SP
LOADD d2,5
PUSHR d2
POP REFNPC
SETR d2,NPCHP
PUSHR d2
SETR d2,gd15
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3117
SETR d2,gd18
ORV d2,1
SETR gd18,d2
LOADD d2,5
PUSHR d2
POP REFNPC
SETR d2,NPCHP
SETR gd15,d2
SETR d2,gd21
COMPAREV d2,32
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2929
SETV d2,32
SETR gd21,d2
PUSHR d4
PUSHV 0.2933; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 1; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 3117
SETR d2,LINKX
PUSHR d2
SETR d2,gd2
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,4
SETR d2,LINKY
PUSHR d2
SETR d2,gd3
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,3
LOADD d2,4; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
PUSHR d2
SETR d2,gd13
ADDV d2,1
MULTV d2,16
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2975
LOADD d2,3; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
PUSHR d2
SETR d2,gd14
ADDV d2,1
MULTV d2,16
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3014
SETR d2,LINKDIR
ANDV d2,2
PUSHR d2
SETR d2,gd5
ANDV d2,2
POP d3
COMPARER d3,d2
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 2996
SETR d2,gd5
COMPAREV d2,3
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 3006
PUSHR d4
PUSHV 0.3003; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 3; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3013
SETR d2,LINKDIR
LSHIFTV d2,12
ORV d2,16
SETR gd22,d2
GOTO 3117
LOADD d2,4; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
PUSHR d2
LOADD d2,3; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3072
SETR d2,gd5
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 3036
SETR d2,gd5
COMPAREV d2,1
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 3046
SETR d2,gd5
COMPAREV d2,3
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 3056
PUSHR d4
PUSHV 0.3053; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 3; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3071
LOADD d2,3
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3069
SETV d2,16
SETR gd22,d2
GOTO 3071
SETV d2,4112
SETR gd22,d2
GOTO 3117
SETR d2,gd5
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 3082
SETR d2,gd5
COMPAREV d2,3
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 3092
SETR d2,gd5
COMPAREV d2,3
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 3102
PUSHR d4
PUSHV 0.3099; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 3; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3117
LOADD d2,4
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3115
SETV d2,8208
SETR gd22,d2
GOTO 3117
SETV d2,12304
SETR gd22,d2
SETR d2,gd22
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3359
SETR d2,gd22
RSHIFTV d2,12
STORED d2,4
SETR d2,gd22
ANDV d2,4095
STORED d2,3
SETV d2,4
STORED d2,2
PUSHR d4
PUSHV 0.3134; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 5; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 3140
LOADD d2,2
DIVV d2,2
STORED d2,2
PUSHR d4
PUSHV 0.3148; UsrFunc[bool Ghost_CanMove(int, int, int)] Return Addr
LOADD d2,4; UsrFunc[bool Ghost_CanMove(int, int, int)] Params
PUSHR d2
LOADD d2,2
PUSHR d2
PUSHV 2
GOTO 396; UsrFunc[bool Ghost_CanMove(int, int, int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 3257
SETV d2,0
STORED d2,1
SETV d2,0
STORED d2,0
LOADD d2,3
PUSHR d2
SUBV d2,1
STORED d2,3
POP d2
LOADD d2,3
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3175
LOADD d2,4
LSHIFTV d2,12
PUSHR d2
LOADD d2,3
POP d3
ORR d2,d3
SETR gd22,d2
GOTO 3177
SETV d2,0
SETR gd22,d2
LOADD d2,4
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3186
LOADD d2,2
SUBV2 0,d2
STORED d2,0
GOTO 3205
LOADD d2,4
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3194
LOADD d2,2
STORED d2,0
GOTO 3205
LOADD d2,4
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3203
LOADD d2,2
SUBV2 0,d2
STORED d2,1
GOTO 3205
LOADD d2,2
STORED d2,1
LOADD d2,1
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3231
SETR d2,gd2
PUSHR d2
LOADD d2,1
POP d3
ADDR d2,d3
SETR gd2,d2
SETR d2,gd19
PUSHR d2
LOADD d2,1
POP d3
ADDR d2,d3
SETR gd19,d2
PUSHR d4
PUSHV 0.3229; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Return Addr
LOADD d2,6; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Params
PUSHR d2
LOADD d2,5
PUSHR d2
GOTO 2761; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Call
POP d4
GOTO 3256
LOADD d2,0
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3256
SETR d2,gd3
PUSHR d2
LOADD d2,0
POP d3
ADDR d2,d3
SETR gd3,d2
SETR d2,gd20
PUSHR d2
LOADD d2,0
POP d3
ADDR d2,d3
SETR gd20,d2
PUSHR d4
PUSHV 0.3255; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Return Addr
LOADD d2,6; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Params
PUSHR d2
LOADD d2,5
PUSHR d2
GOTO 2761; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Call
POP d4
GOTO 3359
SETV d2,-1
STORED d2,1
SETV d2,-1
STORED d2,0
SETV d2,0
SETR gd22,d2
SETR d2,gd18
ORV d2,16
SETR gd18,d2
LOADD d2,4
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3277
SETR d2,gd3; InlineFunc[untyped Floor(untyped)] Params
DIVV d2,8
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
MULTV d2,8
STORED d2,0
GOTO 3306
LOADD d2,4
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3289
SETR d2,gd3; InlineFunc[untyped Ceiling(untyped)] Params
LSHIFTV d2,0
DIVV d2,8
CEILING d2; InlineFunc[untyped Ceiling(untyped)] Body
MULTV d2,8
STORED d2,0
GOTO 3306
LOADD d2,4
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3300
SETR d2,gd2; InlineFunc[untyped Floor(untyped)] Params
DIVV d2,8
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
MULTV d2,8
STORED d2,1
GOTO 3306
SETR d2,gd2; InlineFunc[untyped Ceiling(untyped)] Params
LSHIFTV d2,0
DIVV d2,8
CEILING d2; InlineFunc[untyped Ceiling(untyped)] Body
MULTV d2,8
STORED d2,1
LOADD d2,1
COMPAREV d2,-1
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3333
SETR d2,gd19
PUSHR d2
LOADD d2,1
PUSHR d2
SETR d2,gd2
POP d3
SUBR d3,d2
SETR d2,d3
POP d3
ADDR d2,d3
SETR gd19,d2
LOADD d2,1
SETR gd2,d2
PUSHR d4
PUSHV 0.3331; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Return Addr
LOADD d2,6; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Params
PUSHR d2
LOADD d2,5
PUSHR d2
GOTO 2761; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Call
POP d4
GOTO 3359
LOADD d2,0
COMPAREV d2,-1
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3359
SETR d2,gd20
PUSHR d2
LOADD d2,0
PUSHR d2
SETR d2,gd3
POP d3
SUBR d3,d2
SETR d2,d3
POP d3
ADDR d2,d3
SETR gd20,d2
LOADD d2,0
SETR gd3,d2
PUSHR d4
PUSHV 0.3358; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Return Addr
LOADD d2,6; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Params
PUSHR d2
LOADD d2,5
PUSHR d2
GOTO 2761; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Call
POP d4
POPARGS d5,0.0007
RETURN; Func[void Ghost_CheckHit(FFC, NPC)] Body End
SETR d4,SP; Func[void Ghost_ClearCombos()] Body Start
SETV d2,0
PUSHR d2
SETR d2,gd26
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
RETURN; Func[void Ghost_ClearCombos()] Body End
SETR d4,SP; Func[void Ghost_SetFlag(int)] Body Start
LOADD d2,0
ANDV d2,65536
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3387
SETR d2,gd17
PUSHR d2
LOADD d2,0
ANDV d2,65535
SETV d3,1
LSHIFTR d3,d2
SETR d2,d3
POP d3
ORR d2,d3
SETR gd17,d2
GOTO 3393
SETR d2,gd16
PUSHR d2
LOADD d2,0
POP d3
ORR d2,d3
SETR gd16,d2
POPARGS d5,0.0001
RETURN; Func[void Ghost_SetFlag(int)] Body End
SETR d4,SP; Func[void Ghost_UnsetFlag(int)] Body Start
LOADD d2,0
ANDV d2,65536
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3413
SETR d2,gd17
PUSHR d2
LOADD d2,0
ANDV d2,65535
SETV d3,-2
LSHIFTR d3,d2
SETR d2,d3
POP d3
ANDR d2,d3
SETR gd17,d2
GOTO 3420
SETR d2,gd16
PUSHR d2
LOADD d2,0
BITNOT d2
POP d3
ANDR d2,d3
SETR gd16,d2
POPARGS d5,0.0001
RETURN; Func[void Ghost_UnsetFlag(int)] Body End
PUSHARGSR d2,0.0004; Func[void Ghost_MoveXY(int, int, int)] Body Start
SETR d4,SP
LOADD d2,5
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3436
PUSHR d4
PUSHV 0.3434; UsrFunc[bool IsSideview()] Return Addr
GOTO 4728; UsrFunc[bool IsSideview()] Call
POP d4
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3448
PUSHR d4
PUSHV 0.3444; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 32; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3454
SETV d2,0
STORED d2,5
LOADD d2,6; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
COMPAREV d2,8
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 3470
LOADD d2,5; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
COMPAREV d2,8
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3545
LOADD d2,6; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
PUSHR d2
LOADD d2,5; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
POP d3
COMPARER d3,d2
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3514
LOADD d2,6
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3502
PUSHR d4
PUSHV 0.3497; UsrFunc[void Ghost_MoveXY(int, int, int)] Return Addr
PUSHV 8; UsrFunc[void Ghost_MoveXY(int, int, int)] Params
PUSHV 0
LOADD d2,4
PUSHR d2
GOTO 3422; UsrFunc[void Ghost_MoveXY(int, int, int)] Call
POP d4
LOADD d2,6
SUBV d2,8
STORED d2,6
GOTO 3513
PUSHR d4
PUSHV 0.3509; UsrFunc[void Ghost_MoveXY(int, int, int)] Return Addr
PUSHV -8; UsrFunc[void Ghost_MoveXY(int, int, int)] Params
PUSHV 0
LOADD d2,4
PUSHR d2
GOTO 3422; UsrFunc[void Ghost_MoveXY(int, int, int)] Call
POP d4
LOADD d2,6
ADDV d2,8
STORED d2,6
GOTO 3544
LOADD d2,5
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3533
PUSHR d4
PUSHV 0.3528; UsrFunc[void Ghost_MoveXY(int, int, int)] Return Addr
PUSHV 0; UsrFunc[void Ghost_MoveXY(int, int, int)] Params
PUSHV 8
LOADD d2,4
PUSHR d2
GOTO 3422; UsrFunc[void Ghost_MoveXY(int, int, int)] Call
POP d4
LOADD d2,5
SUBV d2,8
STORED d2,5
GOTO 3544
PUSHR d4
PUSHV 0.3540; UsrFunc[void Ghost_MoveXY(int, int, int)] Return Addr
PUSHV 0; UsrFunc[void Ghost_MoveXY(int, int, int)] Params
PUSHV -8
LOADD d2,4
PUSHR d2
GOTO 3422; UsrFunc[void Ghost_MoveXY(int, int, int)] Call
POP d4
LOADD d2,5
ADDV d2,8
STORED d2,5
GOTO 3454
SETV d2,0
STORED d2,3
SETV d2,0
STORED d2,2
SETV d2,0
STORED d2,1
SETV d2,0
STORED d2,0
LOADD d2,6
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3627
SETR d2,gd23
RSHIFTV d2,8
STORED d2,2
SETR d2,gd2
PUSHR d2
LOADD d2,2
POP d3
ADDR d2,d3
STORED d2,3
LOADD d2,3; InlineFunc[untyped Floor(untyped)] Params
DIVV d2,8
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
STORED d2,1
LOADD d2,3; InlineFunc[untyped Floor(untyped)] Params
PUSHR d2
LOADD d2,6
POP d3
ADDR d2,d3
DIVV d2,8
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
STORED d2,0
LOADD d2,1
PUSHR d2
LOADD d2,0
POP d3
COMPARER d3,d2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3596
LOADD d2,3
PUSHR d2
LOADD d2,6
POP d3
ADDR d2,d3
STORED d2,3
GOTO 3619
PUSHR d4
PUSHV 0.3605; UsrFunc[bool Ghost_CanMove(int, int, int)] Return Addr
PUSHV 2; UsrFunc[bool Ghost_CanMove(int, int, int)] Params
LOADD d2,6
SUBV2 0,d2
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 396; UsrFunc[bool Ghost_CanMove(int, int, int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 3615
LOADD d2,3
PUSHR d2
LOADD d2,6
POP d3
ADDR d2,d3
STORED d2,3
GOTO 3619
LOADD d2,3
RSHIFTV d2,3
LSHIFTV d2,3
STORED d2,3
LOADD d2,3
PUSHR d2
LOADD d2,2
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd2,d2
GOTO 3713
LOADD d2,6
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3713
SETR d2,gd13
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd13
POP d3
MULTR d2,d3
PUSHR d2
SETR d2,gd23
ANDV d2,255
POP d3
SUBR d3,d2
SETR d2,d3
SUBV d2,1
STORED d2,2
SETR d2,gd2
PUSHR d2
LOADD d2,2
POP d3
ADDR d2,d3
STORED d2,3
LOADD d2,3; InlineFunc[untyped Floor(untyped)] Params
DIVV d2,8
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
STORED d2,1
LOADD d2,3; InlineFunc[untyped Floor(untyped)] Params
PUSHR d2
LOADD d2,6
POP d3
ADDR d2,d3
DIVV d2,8
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
STORED d2,0
LOADD d2,1
PUSHR d2
LOADD d2,0
POP d3
COMPARER d3,d2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3682
LOADD d2,3
PUSHR d2
LOADD d2,6
POP d3
ADDR d2,d3
STORED d2,3
GOTO 3706
PUSHR d4
PUSHV 0.3690; UsrFunc[bool Ghost_CanMove(int, int, int)] Return Addr
PUSHV 3; UsrFunc[bool Ghost_CanMove(int, int, int)] Params
LOADD d2,6
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 396; UsrFunc[bool Ghost_CanMove(int, int, int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 3700
LOADD d2,3
PUSHR d2
LOADD d2,6
POP d3
ADDR d2,d3
STORED d2,3
GOTO 3706
LOADD d2,3
ADDV d2,7
RSHIFTV d2,3
LSHIFTV d2,3
SUBV d2,1
STORED d2,3
LOADD d2,3
PUSHR d2
LOADD d2,2
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd2,d2
LOADD d2,5
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3787
SETR d2,gd24
RSHIFTV d2,8
STORED d2,2
SETR d2,gd3
PUSHR d2
LOADD d2,2
POP d3
ADDR d2,d3
STORED d2,3
LOADD d2,3; InlineFunc[untyped Floor(untyped)] Params
DIVV d2,8
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
STORED d2,1
LOADD d2,3; InlineFunc[untyped Floor(untyped)] Params
PUSHR d2
LOADD d2,5
POP d3
ADDR d2,d3
DIVV d2,8
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
STORED d2,0
LOADD d2,1
PUSHR d2
LOADD d2,0
POP d3
COMPARER d3,d2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3756
LOADD d2,3
PUSHR d2
LOADD d2,5
POP d3
ADDR d2,d3
STORED d2,3
GOTO 3779
PUSHR d4
PUSHV 0.3765; UsrFunc[bool Ghost_CanMove(int, int, int)] Return Addr
PUSHV 0; UsrFunc[bool Ghost_CanMove(int, int, int)] Params
LOADD d2,5
SUBV2 0,d2
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 396; UsrFunc[bool Ghost_CanMove(int, int, int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 3775
LOADD d2,3
PUSHR d2
LOADD d2,5
POP d3
ADDR d2,d3
STORED d2,3
GOTO 3779
LOADD d2,3
RSHIFTV d2,3
LSHIFTV d2,3
STORED d2,3
LOADD d2,3
PUSHR d2
LOADD d2,2
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd3,d2
GOTO 3873
LOADD d2,5
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3873
SETR d2,gd14
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd14
POP d3
MULTR d2,d3
PUSHR d2
SETR d2,gd24
ANDV d2,255
POP d3
SUBR d3,d2
SETR d2,d3
SUBV d2,1
STORED d2,2
SETR d2,gd3
PUSHR d2
LOADD d2,2
POP d3
ADDR d2,d3
STORED d2,3
LOADD d2,3; InlineFunc[untyped Floor(untyped)] Params
DIVV d2,8
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
STORED d2,1
LOADD d2,3; InlineFunc[untyped Floor(untyped)] Params
PUSHR d2
LOADD d2,5
POP d3
ADDR d2,d3
DIVV d2,8
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
STORED d2,0
LOADD d2,1
PUSHR d2
LOADD d2,0
POP d3
COMPARER d3,d2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3842
LOADD d2,3
PUSHR d2
LOADD d2,5
POP d3
ADDR d2,d3
STORED d2,3
GOTO 3866
PUSHR d4
PUSHV 0.3850; UsrFunc[bool Ghost_CanMove(int, int, int)] Return Addr
PUSHV 1; UsrFunc[bool Ghost_CanMove(int, int, int)] Params
LOADD d2,5
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 396; UsrFunc[bool Ghost_CanMove(int, int, int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 3860
LOADD d2,3
PUSHR d2
LOADD d2,5
POP d3
ADDR d2,d3
STORED d2,3
GOTO 3866
LOADD d2,3
ADDV d2,7
RSHIFTV d2,3
LSHIFTV d2,3
SUBV d2,1
STORED d2,3
LOADD d2,3
PUSHR d2
LOADD d2,2
POP d3
SUBR d3,d2
SETR d2,d3
SETR gd3,d2
PUSHR d4
PUSHV 0.3877; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 64; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 3885
SETR d2,gd18
ANDV d2,4
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3956
PUSHR d4
PUSHV 0.3893; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 512; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 3915
PUSHR d4
PUSHV 0.3912; UsrFunc[int AngleDir8(int)] Return Addr
PUSHR d4; UsrFunc[int AngleDir8(int)] Params
PUSHV 0.3908; UsrFunc[int WrapAngle(int)] Return Addr
LOADD d2,6; InlineFunc[int ArcTan(int, int)] Params AND UsrFunc[int WrapAngle(int)] Params
PUSHR d2
LOADD d2,5
SETR d1,d2
POP d0; InlineFunc[int ArcTan(int, int)] Body Start
ARCTANR d2; InlineFunc[int ArcTan(int, int)] Body End
PUSHR d2
GOTO 4748; UsrFunc[int WrapAngle(int)] Call
POP d4
MULTV d2,57.2958
PUSHR d2
GOTO 118; UsrFunc[int AngleDir8(int)] Call
POP d4
SETR gd5,d2
GOTO 3952
LOADD d2,6; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
PUSHR d2
LOADD d2,5; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3940
LOADD d2,5
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3937
SETV d2,0
SETR gd5,d2
GOTO 3939
SETV d2,1
SETR gd5,d2
GOTO 3952
LOADD d2,6
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3950
SETV d2,2
SETR gd5,d2
GOTO 3952
SETV d2,3
SETR gd5,d2
SETR d2,gd2
SETR gd19,d2
SETR d2,gd3
SETR gd20,d2
POPARGS d5,0.0007
RETURN; Func[void Ghost_MoveXY(int, int, int)] Body End
PUSHR d2; Func[void __GhCleanUp(FFC)] Body Start
SETR d4,SP
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR X,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR Y,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR XD,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR YD,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR XD2,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR YD2,d2
SETV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR FFTWIDTH,d2
SETV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR FFTHEIGHT,d2
SETV d2,16
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR FFCWIDTH,d2
SETV d2,16
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR FFCHEIGHT,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DELAY,d2
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,11
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4095
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
LOADD d2,0
PUSHR d2
POP d0
POP d2
POP REFFFC
SETR FFFLAGSD,d2
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 4070
POPARGS d5,0.0002
RETURN; Func[void __GhCleanUp(FFC)] Body End
SETR d4,SP; Func[void Ghost_ForceDir(int)] Body Start
LOADD d2,0
SETR gd5,d2
SETR d2,gd18
ORV d2,4
SETR gd18,d2
POPARGS d5,0.0001
RETURN; Func[void Ghost_ForceDir(int)] Body End
PUSHARGSR d2,0.0002; Func[void Ghost_Move(int, int, int)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,1
SETV d2,0
STORED d2,0
LOADD d2,4
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4120
LOADD d2,3
SUBV2 0,d2
STORED d2,0
GOTO 4198
LOADD d2,4
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4128
LOADD d2,3
STORED d2,0
GOTO 4198
LOADD d2,4
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4137
LOADD d2,3
SUBV2 0,d2
STORED d2,1
GOTO 4198
LOADD d2,4
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4145
LOADD d2,3
STORED d2,1
GOTO 4198
LOADD d2,4
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4159
LOADD d2,3
SUBV2 0,d2
MULTV d2,0.7071
STORED d2,1
LOADD d2,3
SUBV2 0,d2
MULTV d2,0.7071
STORED d2,0
GOTO 4198
LOADD d2,4
COMPAREV d2,5
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4172
LOADD d2,3
MULTV d2,0.7071
STORED d2,1
LOADD d2,3
SUBV2 0,d2
MULTV d2,0.7071
STORED d2,0
GOTO 4198
LOADD d2,4
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4185
LOADD d2,3
SUBV2 0,d2
MULTV d2,0.7071
STORED d2,1
LOADD d2,3
MULTV d2,0.7071
STORED d2,0
GOTO 4198
LOADD d2,4
COMPAREV d2,7
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4197
LOADD d2,3
MULTV d2,0.7071
STORED d2,1
LOADD d2,3
MULTV d2,0.7071
STORED d2,0
GOTO 4198
GOTO 4208
PUSHR d4
PUSHV 0.4207; UsrFunc[void Ghost_MoveXY(int, int, int)] Return Addr
LOADD d2,1; UsrFunc[void Ghost_MoveXY(int, int, int)] Params
PUSHR d2
LOADD d2,0
PUSHR d2
LOADD d2,2
PUSHR d2
GOTO 3422; UsrFunc[void Ghost_MoveXY(int, int, int)] Call
POP d4
POPARGS d5,0.0005
RETURN; Func[void Ghost_Move(int, int, int)] Body End
SETR d4,SP; Func[void __Ghost_InitInternal(FFC, NPC, bool, int, int)] Body Start
LOADD d2,1
COMPAREV d2,-1
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 4221
LOADD d2,1
COMPAREV d2,-2
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 4226
SETV d2,1
STORED d2,1
LOADD d2,1
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
LOADD d2,1
SETR gd11,d2
LOADD d2,0
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR CSET,d2
LOADD d2,0
SETR gd12,d2
LOADD d2,2
COMPAREV d2,0
GOTOTRUE 4272
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCX
SETR gd2,d2
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCY
SETR gd3,d2
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCZ
SETR gd4,d2
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCJUMP
SETR gd6,d2
GOTO 4304
LOADD d2,4
PUSHR d2
POP REFFFC
SETR d2,X
SETR gd2,d2
LOADD d2,4
PUSHR d2
POP REFFFC
SETR d2,Y
SETR gd3,d2
SETV d2,0
SETR gd4,d2
SETV d2,0
SETR gd6,d2
SETV d2,0
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCZ,d2
SETV d2,0
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCJUMP,d2
PUSHR d4
PUSHV 0.4311; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Return Addr
LOADD d2,4; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Params
PUSHR d2
LOADD d2,3
PUSHR d2
GOTO 2761; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Call
POP d4
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCDIR
SETR gd5,d2
SETV d2,0
SETR gd7,d2
SETV d2,0
SETR gd8,d2
SETV d2,0
SETR gd9,d2
SETV d2,0
SETR gd10,d2
SETR d2,gd2
SETR gd19,d2
SETR d2,gd3
SETR gd20,d2
LOADD d2,4
PUSHR d2
POP REFFFC
SETR d2,FFTWIDTH
SETR gd13,d2
LOADD d2,4
PUSHR d2
POP REFFFC
SETR d2,FFTHEIGHT
SETR gd14,d2
SETV d2,0
SETR gd23,d2
SETV d2,0
SETR gd24,d2
LOADD d2,1
COMPAREV d2,1
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4423
SETV d2,3
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCEXTEND,d2
SETV d2,65456
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCOTILE,d2
SETV d2,65456
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCTILE,d2
SETR d2,gd13
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCTXSZ,d2
SETR d2,gd14
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCTYSZ,d2
SETR d2,gd13
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd13
POP d3
MULTR d2,d3
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCHXSZ,d2
SETR d2,gd14
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd14
POP d3
MULTR d2,d3
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCHYSZ,d2
SETV d2,0
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCXOFS,d2
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCMFLAGS
ANDV d2,32
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4454
SETV d2,1
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
SETV d2,7
PUSHR d2
POP d0
POP d2
POP REFFFC
SETR FFFLAGSD,d2
GOTO 4466
SETV d2,0
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
SETV d2,7
PUSHR d2
POP d0
POP d2
POP REFFFC
SETR FFFLAGSD,d2
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCHP
SETR gd15,d2
SETV d2,0
SETR gd16,d2
SETV d2,0
SETR gd17,d2
SETV d2,0
SETR gd21,d2
SETV d2,0
SETR gd22,d2
SETV d2,0
SETR gd18,d2
SETV d2,0
PUSHR d2
SETR d2,gd26
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
SETV d2,65536
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
SETV d2,15
PUSHR d2
POP d0
POP d2
POP REFNPC
SETR NPCMISCD,d2
POPARGS d5,0.0005
RETURN; Func[void __Ghost_InitInternal(FFC, NPC, bool, int, int)] Body End
PUSHARGSR d2,0.0009; Func[NPC Ghost_InitAutoGhost(FFC, int)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,8
SETV d2,0
STORED d2,7
SETR d2,NPCCOUNT; InlineFunc[int Screen->NumNPCs()] Body
STORED d2,6
LOADD d2,6
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4651
LOADD d2,6; InlineFunc[NPC Screen->LoadNPC(int)] Params
SUBV d2,1; InlineFunc[NPC Screen->LoadNPC(int)] Body Start
LOADNPCR d2
SETR d2,REFNPC; InlineFunc[NPC Screen->LoadNPC(int)] Body End
STORED d2,8
LOADD d2,8
PUSHR d2
POP REFNPC
SETR d2,NPCID
PUSHR d2
LOADD d2,9
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4536
SETV d2,0
STORED d2,7
GOTO 4647
GOTO 4538
SETV d2,1
STORED d2,7
LOADD d2,8
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCMISCD
ANDV d2,65536
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4553
SETV d2,0
STORED d2,7
GOTO 4647
LOADD d2,7
COMPAREV d2,0
GOTOTRUE 4602
PUSHR d4
PUSHV 0.4577; UsrFunc[void __Ghost_InitInternal(FFC, NPC, bool, int, int)] Return Addr
LOADD d2,10; UsrFunc[void __Ghost_InitInternal(FFC, NPC, bool, int, int)] Params
PUSHR d2
LOADD d2,8
PUSHR d2
PUSHV 1
LOADD d2,8
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCMISCD
ANDV d2,65535
PUSHR d2
LOADD d2,8
PUSHR d2
POP REFNPC
PUSHR NPCCSET
GOTO 4210; UsrFunc[void __Ghost_InitInternal(FFC, NPC, bool, int, int)] Call
POP d4
LOADD d2,8
PUSHR d2
POP REFNPC
SETR d2,NPCMFLAGS
ANDV d2,256
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4599
SETV d2,1
PUSHR d2
LOADD d2,10
POP d3
PUSHR d2
PUSHR d3
SETV d2,1
PUSHR d2
POP d0
POP d2
POP REFFFC
SETR FFFLAGSD,d2
LOADD d2,8
GOTO 4651
GOTO 4647
ALLOCATEMEMV d2,60
STORED d2,4
WRITEPODSTRING d2,"ghost.zh: AutoGhost initialization failed - enemy missing.\n"
ALLOCATEMEMV d2,30
STORED d2,2
WRITEPODSTRING d2,"  DMap %d, screen %X\n"
ALLOCATEMEMV d2,30
STORED d2,0
WRITEPODSTRING d2,"  Script %d, enemy ID %d\n"
LOADD d2,4; InlineFunc[void printf(char32)] Params
PUSHR d2
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOADD d2,2; InlineFunc[void printf(char32)] Params
PUSHR d2
PUSHVARGR CURDMAP
PUSHVARGR CURDSCR
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOADD d2,0; InlineFunc[void printf(char32)] Params
PUSHR d2
LOADD d2,10
PUSHR d2
POP REFFFC
PUSHVARGR FFSCRIPT
LOADD d2,9
PUSHVARGR d2
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
SETV d2,0
PUSHR d2
LOADD d2,10
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
QUIT; InlineFunc[void Quit()] Body
LOADD d3,0
DEALLOCATEMEMR d3
LOADD d3,2
DEALLOCATEMEMR d3
LOADD d3,4
DEALLOCATEMEMR d3
LOADD d2,6
SUBV d2,1
STORED d2,6
GOTO 4509
POPARGS d5,0.0011
RETURN; Func[NPC Ghost_InitAutoGhost(FFC, int)] Body End
SETR d4,SP; Func[int VectorX(int, int)] Body Start
LOADD d2,0; InlineFunc[int Cos(int)] Params
SETR d3,d2
COSR d2,d3; InlineFunc[int Cos(int)] Body
PUSHR d2
LOADD d2,1
POP d3
MULTR d2,d3
GOTO 4662
POPARGS d5,0.0002
RETURN; Func[int VectorX(int, int)] Body End
SETR d4,SP; Func[int VectorY(int, int)] Body Start
LOADD d2,0; InlineFunc[int Sin(int)] Params
SETR d3,d2
SINR d2,d3; InlineFunc[int Sin(int)] Body
PUSHR d2
LOADD d2,1
POP d3
MULTR d2,d3
GOTO 4673
POPARGS d5,0.0002
RETURN; Func[int VectorY(int, int)] Body End
PUSHR d2; Func[void Ghost_MoveTowardLink(int, int)] Body Start
SETR d4,SP
PUSHR d4
PUSHV 0.4700; UsrFunc[int Angle(int, int, int, int)] Return Addr
SETR d2,gd2; UsrFunc[int Angle(int, int, int, int)] Params
PUSHR d2
SETR d2,gd13
MULTV d2,8
POP d3
ADDR d2,d3
PUSHR d2
SETR d2,gd3
PUSHR d2
SETR d2,gd14
MULTV d2,8
POP d3
ADDR d2,d3
PUSHR d2
SETR d2,LINKX
ADDV d2,8
PUSHR d2
SETR d2,LINKY
ADDV d2,8
PUSHR d2
GOTO 98; UsrFunc[int Angle(int, int, int, int)] Call
POP d4
STORED d2,0
PUSHR d4
PUSHV 0.4725; UsrFunc[void Ghost_MoveXY(int, int, int)] Return Addr
PUSHR d4; UsrFunc[void Ghost_MoveXY(int, int, int)] Params
PUSHV 0.4711; UsrFunc[int VectorX(int, int)] Return Addr
LOADD d2,2; UsrFunc[int VectorX(int, int)] Params
PUSHR d2
LOADD d2,0
PUSHR d2
GOTO 4653; UsrFunc[int VectorX(int, int)] Call
POP d4
PUSHR d2
PUSHR d4
PUSHV 0.4720; UsrFunc[int VectorY(int, int)] Return Addr
LOADD d2,2; UsrFunc[int VectorY(int, int)] Params
PUSHR d2
LOADD d2,0
PUSHR d2
GOTO 4664; UsrFunc[int VectorY(int, int)] Call
POP d4
PUSHR d2
LOADD d2,1
PUSHR d2
GOTO 3422; UsrFunc[void Ghost_MoveXY(int, int, int)] Call
POP d4
POPARGS d5,0.0003
RETURN; Func[void Ghost_MoveTowardLink(int, int)] Body End
SETR d4,SP; Func[bool IsSideview()] Body Start
SETV d2,0
PUSHR d2
POP d0
SETR d2,SCREENFLAGSD
ANDV d2,4
PUSHR d2
SETR d2,CURDMAP; InlineFunc[DMapData Game->LoadDMapData(int)] Params
LOADDMAPDATAR d2; InlineFunc[DMapData Game->LoadDMapData(int)] Body Start
SETR d2,REFDMAPDATA; InlineFunc[DMapData Game->LoadDMapData(int)] Body End
PUSHR d2
POP REFDMAPDATA
SETR d2,DMAPDATASIDEVIEW
POP d3
CASTBOOLF d2
CASTBOOLF d3
COMPARER d3,d2
SETFALSEI d2
GOTO 4747
RETURN; Func[bool IsSideview()] Body End
SETR d4,SP; Func[int WrapAngle(int)] Body Start
LOADD d2,0
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4762
LOADD d2,0
SUBV2 0,d2
MODV d2,6.2832
SUBV2 6.2832,d2
STORED d2,0
GOTO 4765
LOADD d2,0
MODV d2,6.2832
STORED d2,0
LOADD d2,0
COMPAREV d2,3.1416
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4775
LOADD d2,0
SUBV d2,6.2832
GOTO 4777
LOADD d2,0
GOTO 4777
POPARGS d5,0.0001
RETURN; Func[int WrapAngle(int)] Body End
PUSHR d2; Func[bool Ghost_Waitframe(FFC, NPC, bool, bool)] Body Start
SETR d4,SP
SETV d2,0
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCJUMP,d2
PUSHR d4
PUSHV 0.4794; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 32; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 4958
PUSHR d4
PUSHV 0.4800; UsrFunc[bool IsSideview()] Return Addr
GOTO 4728; UsrFunc[bool IsSideview()] Call
POP d4
COMPAREV d2,0
GOTOTRUE 4917
SETR d2,gd6
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0.0001
GOTOMORE 4816
PUSHR d4
PUSHV 0.4813; UsrFunc[bool Ghost_CanMove(int, int, int)] Return Addr
PUSHARGSV 1,0.0002; UsrFunc[bool Ghost_CanMove(int, int, int)] Params
PUSHV 2
GOTO 396; UsrFunc[bool Ghost_CanMove(int, int, int)] Call
POP d4
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 4916
PUSHR d4
PUSHV 0.4823; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 64; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
STORED d2,0
PUSHR d4
PUSHV 0.4829; UsrFunc[void Ghost_UnsetFlag(int)] Return Addr
PUSHV 64; UsrFunc[void Ghost_UnsetFlag(int)] Params
GOTO 3395; UsrFunc[void Ghost_UnsetFlag(int)] Call
POP d4
SETR d2,gd6
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4883
PUSHR d4
PUSHV 0.4841; UsrFunc[void Ghost_SetFlag(int)] Return Addr
PUSHV 32; UsrFunc[void Ghost_SetFlag(int)] Params
GOTO 3369; UsrFunc[void Ghost_SetFlag(int)] Call
PEEK d4
PUSHV 0.4847; UsrFunc[void Ghost_Move(int, int, int)] Return Addr
PUSHV 0; UsrFunc[void Ghost_Move(int, int, int)] Params
PUSHR gd6
PUSHV 2
GOTO 4105; UsrFunc[void Ghost_Move(int, int, int)] Call
POP d4
SETR d2,gd6; InlineFunc[untyped Max(untyped, untyped)] Params
SUBV d2,0.1600
PUSHVARGR d2
PUSHVARGV -3.2000
MAXVARG; InlineFunc[untyped Max(untyped, untyped)] Body
SETR gd6,d2
SETR d2,gd6
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4871
PUSHR d4
PUSHV 0.4867; UsrFunc[bool Ghost_CanMove(int, int, int)] Return Addr
PUSHV 0; UsrFunc[bool Ghost_CanMove(int, int, int)] Params
PUSHV 1
PUSHV 2
GOTO 396; UsrFunc[bool Ghost_CanMove(int, int, int)] Call
POP d4
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 4877
SETV d2,0
SETR gd6,d2
PUSHR d4
PUSHV 0.4881; UsrFunc[void Ghost_UnsetFlag(int)] Return Addr
PUSHV 32; UsrFunc[void Ghost_UnsetFlag(int)] Params
GOTO 3395; UsrFunc[void Ghost_UnsetFlag(int)] Call
POP d4
GOTO 4908
PUSHR d4
PUSHV 0.4891; UsrFunc[void Ghost_Move(int, int, int)] Return Addr
PUSHV 1; UsrFunc[void Ghost_Move(int, int, int)] Params
SETR d2,gd6
SUBV2 0,d2
PUSHR d2
PUSHV 2
GOTO 4105; UsrFunc[void Ghost_Move(int, int, int)] Call
PEEK d4
PUSHV 0.4896; UsrFunc[bool Ghost_CanMove(int, int, int)] Return Addr
PUSHARGSV 1,0.0002; UsrFunc[bool Ghost_CanMove(int, int, int)] Params
PUSHV 2
GOTO 396; UsrFunc[bool Ghost_CanMove(int, int, int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 4906
SETR d2,gd6; InlineFunc[untyped Max(untyped, untyped)] Params
SUBV d2,0.1600
PUSHVARGR d2
PUSHVARGV -3.2000
MAXVARG; InlineFunc[untyped Max(untyped, untyped)] Body
SETR gd6,d2
GOTO 4908
SETV d2,0
SETR gd6,d2
LOADD d2,0
COMPAREV d2,0
GOTOTRUE 4916
PUSHR d4
PUSHV 0.4915; UsrFunc[void Ghost_SetFlag(int)] Return Addr
PUSHV 64; UsrFunc[void Ghost_SetFlag(int)] Params
GOTO 3369; UsrFunc[void Ghost_SetFlag(int)] Call
POP d4
GOTO 4958
SETR d2,gd6
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0.0001
GOTOMORE 4929
SETR d2,gd4
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 4958
SETR d2,gd4
PUSHR d2
SETR d2,gd6
POP d3
ADDR d2,d3
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 4946
SETV d2,0
SETR gd4,d2
SETV d2,0
SETR gd6,d2
GOTO 4958
SETR d2,gd4
PUSHR d2
SETR d2,gd6
POP d3
ADDR d2,d3
SETR gd4,d2
SETR d2,gd6; InlineFunc[untyped Max(untyped, untyped)] Params
SUBV d2,0.1600
PUSHVARGR d2
PUSHVARGV -3.2000
MAXVARG; InlineFunc[untyped Max(untyped, untyped)] Body
SETR gd6,d2
SETR d2,gd7
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0.0001
GOTOMORE 4968
SETR d2,gd8
COMPAREV d2,0
SETFALSEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 4976
SETR d2,gd9
COMPAREV d2,0
SETFALSEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 4984
SETR d2,gd10
COMPAREV d2,0
SETFALSEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 5010
SETR d2,gd7
PUSHR d2
SETR d2,gd9
POP d3
ADDR d2,d3
SETR gd7,d2
SETR d2,gd8
PUSHR d2
SETR d2,gd10
POP d3
ADDR d2,d3
SETR gd8,d2
PUSHR d4
PUSHV 0.5005; UsrFunc[void Ghost_MoveXY(int, int, int)] Return Addr
PUSHR gd7; UsrFunc[void Ghost_MoveXY(int, int, int)] Params
PUSHR gd8
PUSHV 2
GOTO 3422; UsrFunc[void Ghost_MoveXY(int, int, int)] Call
PEEK d4
PUSHV 0.5009; UsrFunc[void Ghost_ForceDir(int)] Return Addr
PUSHR gd5; UsrFunc[void Ghost_ForceDir(int)] Params
GOTO 4097; UsrFunc[void Ghost_ForceDir(int)] Call
POP d4
PUSHR d4
PUSHV 0.5017; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Return Addr
LOADD d2,4; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Params
PUSHR d2
LOADD d2,3
PUSHR d2
GOTO 2761; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Call
PEEK d4
PUSHV 0.5025; UsrFunc[void __Ghost_WaitframePart1(FFC, NPC, bool)] Return Addr
LOADD d2,4; UsrFunc[void __Ghost_WaitframePart1(FFC, NPC, bool)] Params
PUSHR d2
LOADD d2,3
PUSHR d2
PUSHV 0
GOTO 5058; UsrFunc[void __Ghost_WaitframePart1(FFC, NPC, bool)] Call
PEEK d4
PUSHV 0.5032; UsrFunc[void __Ghost_UpdateFlashing(FFC, NPC)] Return Addr
LOADD d2,4; UsrFunc[void __Ghost_UpdateFlashing(FFC, NPC)] Params
PUSHR d2
LOADD d2,3
PUSHR d2
GOTO 2066; UsrFunc[void __Ghost_UpdateFlashing(FFC, NPC)] Call
PEEK d4
PUSHV 0.5039; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Return Addr
LOADD d2,4; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Params
PUSHR d2
LOADD d2,3
PUSHR d2
GOTO 2341; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Call
POP d4
SETR d2,gd18
ANDV d2,32
SETR gd18,d2
PUSHR d4
PUSHV 0.5054; UsrFunc[bool __Ghost_WaitframePart2(FFC, NPC, bool, bool)] Return Addr
LOADD d2,4; UsrFunc[bool __Ghost_WaitframePart2(FFC, NPC, bool, bool)] Params
PUSHR d2
LOADD d2,3
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
GOTO 5592; UsrFunc[bool __Ghost_WaitframePart2(FFC, NPC, bool, bool)] Call
POP d4
GOTO 5056
POPARGS d5,0.0005
RETURN; Func[bool Ghost_Waitframe(FFC, NPC, bool, bool)] Body End
PUSHARGSR d2,0.0002; Func[void __Ghost_WaitframePart1(FFC, NPC, bool)] Body Start
SETR d4,SP
SETR d2,gd18
ANDV d2,4
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5076
SETR d2,gd5
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCDIR,d2
GOTO 5191
LOADD d2,2
COMPAREV d2,0
GOTOTRUE 5085
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCDIR
SETR gd5,d2
GOTO 5191
PUSHR d4
PUSHV 0.5089; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 64; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 5110
SETR d2,gd19
PUSHR d2
SETR d2,gd2
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0.0001
GOTOMORE 5108
SETR d2,gd20
PUSHR d2
SETR d2,gd3
POP d3
COMPARER d3,d2
SETFALSEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 5191
SETR d2,gd2
PUSHR d2
SETR d2,gd19
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,1
SETR d2,gd3
PUSHR d2
SETR d2,gd20
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,0
PUSHR d4
PUSHV 0.5132; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 512; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 5154
PUSHR d4
PUSHV 0.5151; UsrFunc[int AngleDir8(int)] Return Addr
PUSHR d4; UsrFunc[int AngleDir8(int)] Params
PUSHV 0.5147; UsrFunc[int WrapAngle(int)] Return Addr
LOADD d2,1; InlineFunc[int ArcTan(int, int)] Params AND UsrFunc[int WrapAngle(int)] Params
PUSHR d2
LOADD d2,0
SETR d1,d2
POP d0; InlineFunc[int ArcTan(int, int)] Body Start
ARCTANR d2; InlineFunc[int ArcTan(int, int)] Body End
PUSHR d2
GOTO 4748; UsrFunc[int WrapAngle(int)] Call
POP d4
MULTV d2,57.2958
PUSHR d2
GOTO 118; UsrFunc[int AngleDir8(int)] Call
POP d4
SETR gd5,d2
GOTO 5191
LOADD d2,1; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
PUSHR d2
LOADD d2,0; InlineFunc[int Abs(int)] Params
ABS d2; InlineFunc[int Abs(int)] Body
POP d3
COMPARER d3,d2
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5179
LOADD d2,1
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5176
SETV d2,2
SETR gd5,d2
GOTO 5178
SETV d2,3
SETR gd5,d2
GOTO 5191
LOADD d2,0
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5189
SETV d2,0
SETR gd5,d2
GOTO 5191
SETV d2,1
SETR gd5,d2
SETR d2,gd5
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCDIR,d2
SETR d2,gd2
SETR gd19,d2
SETR d2,gd3
SETR gd20,d2
SETR d2,gd11
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 5214
SETR d2,gd11
COMPAREV d2,1
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 5238
LOADD d2,4
PUSHR d2
POP REFFFC
SETR d2,DATA
PUSHR d2
SETR d2,gd11
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5237
SETR d2,gd11
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
GOTO 5338
PUSHR d4
PUSHV 0.5242; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 512; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 5278
LOADD d2,4
PUSHR d2
POP REFFFC
SETR d2,DATA
PUSHR d2
SETR d2,gd11
PUSHR d2
SETR d2,gd5
POP d3
ADDR d2,d3
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5277
SETR d2,gd11
PUSHR d2
PUSHR d4
PUSHV 0.5266; UsrFunc[int __NormalizeDir(int)] Return Addr
PUSHR gd5; UsrFunc[int __NormalizeDir(int)] Params
GOTO 482; UsrFunc[int __NormalizeDir(int)] Call
POP d4
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
GOTO 5338
PUSHR d4
PUSHV 0.5282; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 256; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 5318
LOADD d2,4
PUSHR d2
POP REFFFC
SETR d2,DATA
PUSHR d2
SETR d2,gd11
PUSHR d2
SETR d2,gd5
POP d3
ADDR d2,d3
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5317
SETR d2,gd11
PUSHR d2
PUSHR d4
PUSHV 0.5306; UsrFunc[int __NormalizeDir(int)] Return Addr
PUSHR gd5; UsrFunc[int __NormalizeDir(int)] Params
GOTO 482; UsrFunc[int __NormalizeDir(int)] Call
POP d4
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
GOTO 5338
LOADD d2,4
PUSHR d2
POP REFFFC
SETR d2,DATA
PUSHR d2
SETR d2,gd11
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5338
SETR d2,gd11
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
LOADD d2,4
PUSHR d2
POP REFFFC
SETR d2,FFTWIDTH
PUSHR d2
SETR d2,gd13
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5358
SETR d2,gd13
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR FFTWIDTH,d2
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCTXSZ
PUSHR d2
SETR d2,gd13
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5402
SETR d2,gd13
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCTXSZ,d2
SETR d2,gd13
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd13
POP d3
MULTR d2,d3
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCHXSZ,d2
SETV d2,0
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCHXOFS,d2
LOADD d2,4
PUSHR d2
POP REFFFC
SETR d2,FFTHEIGHT
PUSHR d2
SETR d2,gd14
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5422
SETR d2,gd14
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR FFTHEIGHT,d2
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCTYSZ
PUSHR d2
SETR d2,gd14
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5466
SETR d2,gd14
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCTYSZ,d2
SETR d2,gd14
MULTV d2,16
SETV d2,16
PUSHR d2
SETR d2,gd14
POP d3
MULTR d2,d3
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCHYSZ,d2
SETV d2,0
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCHYOFS,d2
PUSHR d4
PUSHV 0.5470; UsrFunc[bool Ghost_FlagIsSet(int)] Return Addr
PUSHV 128; UsrFunc[bool Ghost_FlagIsSet(int)] Params
GOTO 1636; UsrFunc[bool Ghost_FlagIsSet(int)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 5536
SETR d2,gd4
COMPAREV d2,32
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 5488
LOADD d2,4
PUSHR d2
SETV d2,0
PUSHR d2
POP d0
POP REFFFC
SETR d2,FFFLAGSD
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 5505
SETV d2,1
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
SETV d2,0
PUSHR d2
POP d0
POP d2
POP REFFFC
SETR FFFLAGSD,d2
GOTO 5536
SETR d2,gd4
COMPAREV d2,32
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5520
LOADD d2,4
PUSHR d2
SETV d2,0
PUSHR d2
POP d0
POP REFFFC
SETR d2,FFFLAGSD
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 5536
SETV d2,0
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
SETV d2,0
PUSHR d2
POP d0
POP d2
POP REFFFC
SETR FFFLAGSD,d2
SETR d2,gd15
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCHP,d2
SETR d2,gd12
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCCSET,d2
SETR d2,gd18
ANDV d2,8
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5570
SETR d2,gd12
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR CSET,d2
GOTO 5584
SETR d2,gd21
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 5584
SETR d2,gd12
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR CSET,d2
PUSHR d4
PUSHV 0.5589; UsrFunc[void __Ghost_DrawShadow(NPC)] Return Addr
LOADD d2,3; UsrFunc[void __Ghost_DrawShadow(NPC)] Params
PUSHR d2
GOTO 2154; UsrFunc[void __Ghost_DrawShadow(NPC)] Call
POP d4
POPARGS d5,0.0005
RETURN; Func[void __Ghost_WaitframePart1(FFC, NPC, bool)] Body End
PUSHR d2; Func[bool __Ghost_WaitframePart2(FFC, NPC, bool, bool)] Body Start
SETR d4,SP
LOADD d2,3; InlineFunc[bool NPC->isValid()] Params
ISVALIDNPC d2; InlineFunc[bool NPC->isValid()] Body
COMPAREV d2,0
GOTOFALSE 5621
LOADD d2,2
COMPAREV d2,0
GOTOTRUE 5613
PUSHR d4
PUSHV 0.5606; UsrFunc[void __GhCleanUp(FFC)] Return Addr
LOADD d2,4; UsrFunc[void __GhCleanUp(FFC)] Params
PUSHR d2
GOTO 3958; UsrFunc[void __GhCleanUp(FFC)] Call
POP d4
SETV d2,0
SETR gd11,d2
PUSHR d4
PUSHV 0.5612; UsrFunc[void Ghost_ClearCombos()] Return Addr
GOTO 3361; UsrFunc[void Ghost_ClearCombos()] Call
POP d4
LOADD d2,1
COMPAREV d2,0
GOTOTRUE 5617
QUIT; InlineFunc[void Quit()] Body
SETV d2,0
SETR gd15,d2
SETV d2,0
GOTO 5750
SETV d2,0
STORED d2,0
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCHP
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 5633
SETV d2,1
STORED d2,0
LOADD d2,0
COMPAREV d2,0
GOTOFALSE 5654
PUSHR d4
PUSHV 0.5643; UsrFunc[void Ghost_CheckHit(FFC, NPC)] Return Addr
LOADD d2,4; UsrFunc[void Ghost_CheckHit(FFC, NPC)] Params
PUSHR d2
LOADD d2,3
PUSHR d2
GOTO 2897; UsrFunc[void Ghost_CheckHit(FFC, NPC)] Call
PEEK d4
PUSHV 0.5650; UsrFunc[bool Ghost_CheckFreeze(FFC, NPC)] Return Addr
LOADD d2,4; UsrFunc[bool Ghost_CheckFreeze(FFC, NPC)] Params
PUSHR d2
LOADD d2,3
PUSHR d2
GOTO 1775; UsrFunc[bool Ghost_CheckFreeze(FFC, NPC)] Call
POP d4
COMPAREV d2,0
SETTRUEI d2
STORED d2,0
LOADD d2,3
PUSHR d2
POP REFNPC
SETR d2,NPCHP
SETR gd15,d2
LOADD d2,0
COMPAREV d2,0
GOTOTRUE 5748
LOADD d2,2
COMPAREV d2,0
GOTOTRUE 5742
SETV d2,1
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCTXSZ,d2
SETV d2,1
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCTYSZ,d2
SETR d2,gd2
PUSHR d2
SETR d2,gd13
SUBV d2,1
MULTV d2,8
SETV d2,8
PUSHR d2
SETR d2,gd13
SUBV d2,1
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCX,d2
SETR d2,gd3
PUSHR d2
SETR d2,gd14
SUBV d2,1
MULTV d2,8
SETV d2,8
PUSHR d2
SETR d2,gd14
SUBV d2,1
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCY,d2
SETR d2,gd4
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCZ,d2
PUSHR d4
PUSHV 0.5739; UsrFunc[void __GhCleanUp(FFC)] Return Addr
LOADD d2,4; UsrFunc[void __GhCleanUp(FFC)] Params
PUSHR d2
GOTO 3958; UsrFunc[void __GhCleanUp(FFC)] Call
POP d4
SETV d2,0
SETR gd11,d2
LOADD d2,1
COMPAREV d2,0
GOTOTRUE 5746
QUIT; InlineFunc[void Quit()] Body
SETV d2,0
GOTO 5750
SETV d2,1
GOTO 5750
POPARGS d5,0.0005
RETURN; Func[bool __Ghost_WaitframePart2(FFC, NPC, bool, bool)] Body End
PUSHARGSR d2,0.0006; Func[void __SetUpDrawingArray(FFC, NPC, int)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,5
LOADD d2,8
PUSHR d2
SETV d2,0
PUSHR d2
POP d0
POP REFFFC
SETR d2,FFFLAGSD
COMPAREV d2,0
GOTOTRUE 5768
LOADD d2,5
ORV d2,4
STORED d2,5
LOADD d2,8
PUSHR d2
SETV d2,1
PUSHR d2
POP d0
POP REFFFC
SETR d2,FFFLAGSD
COMPAREV d2,0
GOTOTRUE 5780
LOADD d2,5
ORV d2,1
STORED d2,5
PUSHR d4
PUSHV 0.5785; UsrFunc[bool __Ghost_IsFlickering(NPC)] Return Addr
LOADD d2,7; UsrFunc[bool __Ghost_IsFlickering(NPC)] Params
PUSHR d2
GOTO 6110; UsrFunc[bool __Ghost_IsFlickering(NPC)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 5791
LOADD d2,5
ORV d2,2
STORED d2,5
LOADD d2,8
PUSHR d2
POP REFFFC
SETR d2,CSET
PUSHR d2
LOADD d2,6
SETR d0,d2
POP d2
WRITEPODARRAYVR 1,d2
LOADD d2,5
PUSHR d2
LOADD d2,6
SETR d0,d2
POP d2
WRITEPODARRAYVR 2,d2
SETV d2,3
STORED d2,4
SETR d2,gd2
PUSHR d2
LOADD d2,7
PUSHR d2
POP REFNPC
SETR d2,NPCXOFS
POP d3
ADDR d2,d3
STORED d2,3
SETR d2,gd3
PUSHR d2
LOADD d2,7
PUSHR d2
POP REFNPC
SETR d2,NPCYOFS
POP d3
ADDR d2,d3
PUSHR d2
SETR d2,gd4
PUSHR d2
LOADD d2,7
PUSHR d2
POP REFNPC
SETR d2,NPCZOFS
POP d3
ADDR d2,d3
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,2
SETR d2,gd26
PUSHR d2
POP d0
READPODARRAYV d2,0
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5970
SETV d2,1
STORED d2,1
SETV d2,0
STORED d2,0
LOADD d2,0
PUSHR d2
SETR d2,gd26
PUSHR d2
POP d0
READPODARRAYV d2,0
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5970
SETR d2,gd26
PUSHR d2
LOADD d2,1
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,4
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,3
PUSHR d2
SETR d2,gd26
PUSHR d2
LOADD d2,1
ADDV d2,1
POP d0
READPODARRAYR d2,d2
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,4
ADDV d2,1
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,2
PUSHR d2
SETR d2,gd26
PUSHR d2
LOADD d2,1
ADDV d2,2
POP d0
READPODARRAYR d2,d2
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,4
ADDV d2,2
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
SETR d2,gd26
PUSHR d2
LOADD d2,1
ADDV d2,3
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,4
ADDV d2,3
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
SETR d2,gd26
PUSHR d2
LOADD d2,1
ADDV d2,4
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,4
ADDV d2,4
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,4
ADDV d2,6
STORED d2,4
LOADD d2,1
ADDV d2,6
STORED d2,1
LOADD d2,6
PUSHR d2
POP d0
READPODARRAYV d2,0
PUSHR d2
ADDV d2,1
PUSHR d2
LOADD d2,6
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
POP d2
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 5852
LOADD d2,8
PUSHR d2
POP REFFFC
SETR d2,DATA
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,4
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,3
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,4
ADDV d2,1
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,2
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,4
ADDV d2,2
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,8
PUSHR d2
POP REFFFC
SETR d2,FFTWIDTH
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,4
ADDV d2,3
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,8
PUSHR d2
POP REFFFC
SETR d2,FFTHEIGHT
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,4
ADDV d2,4
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,6
PUSHR d2
POP d0
READPODARRAYV d2,0
PUSHR d2
ADDV d2,1
PUSHR d2
LOADD d2,6
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
POP d2
POPARGS d5,0.0009
RETURN; Func[void __SetUpDrawingArray(FFC, NPC, int)] Body End
PUSHR d2; Func[void __HideFFCAndWait(FFC)] Body Start
SETR d4,SP
LOADD d2,1
PUSHR d2
POP REFFFC
SETR d2,DATA
STORED d2,0
SETV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
WAITFRAME; InlineFunc[void Waitframe()] Body
LOADD d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
POPARGS d5,0.0002
RETURN; Func[void __HideFFCAndWait(FFC)] Body End
PUSHR d2; Func[bool IsPit(int)] Body Start
SETR d4,SP
LOADD d2,1
PUSHR d2
POP d0
SETR d2,COMBOTD
STORED d2,0
LOADD d2,0
COMPAREV d2,41
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6084
SETV d2,1
GOTO 6108
LOADD d2,0
COMPAREV d2,93
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6091
SETV d2,1
GOTO 6108
LOADD d2,0
COMPAREV d2,80
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 6100
LOADD d2,0
COMPAREV d2,82
SETLESSI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 6106
SETV d2,1
GOTO 6108
SETV d2,0
GOTO 6108
POPARGS d5,0.0002
RETURN; Func[bool IsPit(int)] Body End
SETR d4,SP; Func[bool __Ghost_IsFlickering(NPC)] Body Start
LOADD d2,0
PUSHR d2
POP REFNPC
SETR d2,NPCMFLAGS
ANDV d2,128
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 6122
SETV d2,1
GOTO 6124
SETV d2,0
GOTO 6124
POPARGS d5,0.0001
RETURN; Func[bool __Ghost_IsFlickering(NPC)] Body End
PUSHARGSR d2,0.0004; Func[void SpawnAnimation(FFC, NPC)] Body Start
SETR d4,SP
LOADD d2,5
PUSHR d2
POP REFFFC
SETR d2,DATA
STORED d2,3
LOADD d2,4
PUSHR d2
POP REFNPC
SETR d2,NPCCOLLDET
STORED d2,2
LOADD d2,4
PUSHR d2
POP REFNPC
SETR d2,NPCXOFS
STORED d2,1
PUSHR d4
PUSHV 0.6150; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Return Addr
LOADD d2,5; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 2761; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Call
POP d4
SETV d2,0
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
CASTBOOLI d2
POP REFNPC
SETR NPCCOLLDET,d2
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,32
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6283
SETV d2,0
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
SETV d2,32768
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCXOFS,d2
PUSHR d4
PUSHV 0.6195; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Return Addr
LOADD d2,5; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 2761; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Call
PEEK d4
PUSHV 0.6202; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Return Addr
LOADD d2,5; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 2341; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Call
POP d4
LOADD d2,3
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
LOADD d2,1
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCXOFS,d2
PUSHR d4
PUSHV 0.6228; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Return Addr
LOADD d2,5; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 2761; UsrFunc[void Ghost_SetPosition(FFC, NPC)] Call
PEEK d4
PUSHV 0.6235; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Return Addr
LOADD d2,5; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
GOTO 2341; UsrFunc[void Ghost_WaitframeLight(FFC, NPC)] Call
POP d4
LOADD d2,0
COMPAREV d2,29
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6277
SETR d2,UNDERCOMBO
PUSHR d2
PUSHR d4
PUSHV 0.6254; UsrFunc[int ComboAt(int, int)] Return Addr
LOADD d2,5; UsrFunc[int ComboAt(int, int)] Params
PUSHR d2
POP REFFFC
PUSHR X
LOADD d2,5
PUSHR d2
POP REFFFC
PUSHR Y
GOTO 280; UsrFunc[int ComboAt(int, int)] Call
POP d4
PUSHR d2
POP d0
POP d2
SETR COMBODD,d2
SETR d2,UNDERCSET
PUSHR d2
PUSHR d4
PUSHV 0.6272; UsrFunc[int ComboAt(int, int)] Return Addr
LOADD d2,5; UsrFunc[int ComboAt(int, int)] Params
PUSHR d2
POP REFFFC
PUSHR X
LOADD d2,5
PUSHR d2
POP REFFFC
PUSHR Y
GOTO 280; UsrFunc[int ComboAt(int, int)] Call
POP d4
PUSHR d2
POP d0
POP d2
SETR COMBOCD,d2
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 6163
LOADD d2,3
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
LOADD d2,2
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
CASTBOOLI d2
POP REFNPC
SETR NPCCOLLDET,d2
LOADD d2,1
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCXOFS,d2
POPARGS d5,0.0006
RETURN; Func[void SpawnAnimation(FFC, NPC)] Body End


PUSHV 0; void run() Body Start
SETR d4,SP
PUSHR d4
PUSHV 0.0006; UsrFunc[void StartGhostZH()] Return Addr
GOTO 2601; UsrFunc[void StartGhostZH()] Call
POP d4
PUSHR d4
PUSHV 0.0010; UsrFunc[void UpdateGhostZH1()] Return Addr
GOTO 9306; UsrFunc[void UpdateGhostZH1()] Call
POP d4
WAITDRAW; InlineFunc[void Waitdraw()] Body
PUSHR d4
PUSHV 0.0015; UsrFunc[void UpdateGhostZH2()] Return Addr
GOTO 9375; UsrFunc[void UpdateGhostZH2()] Call
POP d4
WAITFRAME; InlineFunc[void Waitframe()] Body
GOTO 7
POPARGS d5,0.0001
QUIT; void run() Body End
POP d2; Func[int Distance(int, int, int, int)] Body Start
POP d1
POP d0
POP d6
SETR d2,DISTANCE
RETURN; Func[int Distance(int, int, int, int)] Body End
SETR d4,SP; Func[int RadianAngle(int, int, int, int)] Body Start
LOADD d2,1; InlineFunc[int ArcTan(int, int)] Params
PUSHR d2
LOADD d2,3
POP d3
SUBR d3,d2
PUSHR d3
LOADD d2,0
PUSHR d2
LOADD d2,2
POP d3
SUBR d3,d2
SETR d1,d3
POP d0; InlineFunc[int ArcTan(int, int)] Body Start
ARCTANR d2; InlineFunc[int ArcTan(int, int)] Body End
GOTO 42
POPARGS d5,0.0004
RETURN; Func[int RadianAngle(int, int, int, int)] Body End
SETR d4,SP; Func[int Randf(int)] Body Start
SETV d2,0; InlineFunc[long RNG->LRand(long)] Params
PUSHR d2
LOADD d2,0
POP REFRNG; InlineFunc[long RNG->LRand(long)] Body Start
RNGLRAND2 d2; InlineFunc[long RNG->LRand(long)] Body End
GOTO 51
POPARGS d5,0.0001
RETURN; Func[int Randf(int)] Body End
SETR d4,SP; Func[int Angle(int, int, int, int)] Body Start
LOADD d2,1; InlineFunc[int ArcTan(int, int)] Params AND InlineFunc[int RadtoDeg(int)] Params
PUSHR d2
LOADD d2,3
POP d3
SUBR d3,d2
PUSHR d3
LOADD d2,0
PUSHR d2
LOADD d2,2
POP d3
SUBR d3,d2
SETR d1,d3
POP d0; InlineFunc[int ArcTan(int, int)] Body Start
ARCTANR d2; InlineFunc[int ArcTan(int, int)] Body End
SETR d3,d2
RADTODEG d2,d3; InlineFunc[int RadtoDeg(int)] Body
GOTO 71
POPARGS d5,0.0004
RETURN; Func[int Angle(int, int, int, int)] Body End
PUSHARGSR d2,0.0007; Func[void AutoGhost()] Body Start
SETR d4,SP
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ANDV d2,2
COMPAREV d2,0
GOTOTRUE 83
GOTO 449
SETV d2,0
STORED d2,6
SETV d2,0
STORED d2,5
SETV d2,0
STORED d2,4
SETR d2,NPCCOUNT; InlineFunc[int Screen->NumNPCs()] Body
STORED d2,3
LOADD d2,3
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 449
LOADD d2,3; InlineFunc[NPC Screen->LoadNPC(int)] Params
SUBV d2,1; InlineFunc[NPC Screen->LoadNPC(int)] Body Start
LOADNPCR d2
SETR d2,REFNPC; InlineFunc[NPC Screen->LoadNPC(int)] Body End
STORED d2,6
LOADD d2,6
PUSHR d2
POP REFNPC
SETR d2,NPCID
COMPAREV d2,20
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 114
GOTO 445
LOADD d2,6
PUSHR d2
POP REFNPC
SETR d2,NPCID
COMPAREV d2,511
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 125
GOTO 445
LOADD d2,6
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCMISCD
ANDV d2,65536
COMPAREV d2,0
GOTOTRUE 136
GOTO 445
LOADD d2,6
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCDD
COMPAREV d2,0
GOTOFALSE 146
GOTO 445
LOADD d2,6
PUSHR d2
SETV d2,11
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCDD
COMPAREV d2,0
GOTOFALSE 156
GOTO 445
SETV d2,0
STORED d2,2
SETV d2,0
STORED d2,1
LOADD d2,6
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCDD
STORED d2,1
LOADD d2,6
PUSHR d2
SETV d2,11
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCDD
STORED d2,2
LOADD d2,2
COMPAREV d2,-1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 198
ALLOCATEMEMV d2,2
STORED d2,0
PUSHR d4
PUSHV 0.0190; UsrFunc[int __AutoGhostParseName(NPC, int)] Return Addr
LOADD d2,6; UsrFunc[int __AutoGhostParseName(NPC, int)] Params
PUSHR d2
LOADD d2,0
PUSHR d2
GOTO 451; UsrFunc[int __AutoGhostParseName(NPC, int)] Call
POP d4
LOADD d2,0
PUSHR d2
POP d0
READPODARRAYV d2,0
STORED d2,2
LOADD d3,0
DEALLOCATEMEMR d3
LOADD d2,2
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 210
PUSHR d4
PUSHV 0.0208; UsrFunc[void __AutoGhostKill(NPC)] Return Addr
LOADD d2,6; UsrFunc[void __AutoGhostKill(NPC)] Params
PUSHR d2
GOTO 767; UsrFunc[void __AutoGhostKill(NPC)] Call
POP d4
GOTO 445
LOADD d2,2
COMPAREV d2,511
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 224
PUSHR d4
PUSHV 0.0222; UsrFunc[void __AutoGhostKill(NPC)] Return Addr
LOADD d2,6; UsrFunc[void __AutoGhostKill(NPC)] Params
PUSHR d2
GOTO 767; UsrFunc[void __AutoGhostKill(NPC)] Call
POP d4
GOTO 445
PUSHR d4
PUSHV 0.0229; UsrFunc[int FindUnusedFFC(int)] Return Addr
LOADD d2,5; UsrFunc[int FindUnusedFFC(int)] Params
PUSHR d2
GOTO 818; UsrFunc[int FindUnusedFFC(int)] Call
POP d4
STORED d2,5
LOADD d2,5
COMPAREV d2,0
GOTOFALSE 241
PUSHR d4
PUSHV 0.0239; UsrFunc[void __AutoGhostKill(NPC)] Return Addr
LOADD d2,6; UsrFunc[void __AutoGhostKill(NPC)] Params
PUSHR d2
GOTO 767; UsrFunc[void __AutoGhostKill(NPC)] Call
POP d4
GOTO 445
LOADD d2,5; InlineFunc[FFC Screen->LoadFFC(int)] Params
SUBV d2,1; InlineFunc[FFC Screen->LoadFFC(int)] Body
STORED d2,4
SETV d2,1
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
LOADD d2,6
PUSHR d2
POP REFNPC
SETR d2,NPCCSET
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR CSET,d2
SETV d2,1
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR FFTWIDTH,d2
SETV d2,1
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR FFTHEIGHT,d2
LOADD d2,6
PUSHR d2
POP REFNPC
SETR d2,NPCX
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR X,d2
LOADD d2,6
PUSHR d2
POP REFNPC
SETR d2,NPCY
PUSHR d2
LOADD d2,6
PUSHR d2
POP REFNPC
SETR d2,NPCZ
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR Y,d2
SETV d2,0
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR XD,d2
SETV d2,0
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR YD,d2
SETV d2,0
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR XD2,d2
SETV d2,0
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR YD2,d2
LOADD d2,2
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR FFSCRIPT,d2
LOADD d2,6
PUSHR d2
POP REFNPC
SETR d2,NPCID
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
SETV d2,0
PUSHR d2
POP d0
POP d2
POP REFFFC
SETR FFINITDD,d2
SETV d2,1
PUSHR d2
LOADD d2,4
POP d3
PUSHR d2
PUSHR d3
SETV d2,9
PUSHR d2
POP d0
POP d2
POP REFFFC
SETR FFFLAGSD,d2
LOADD d2,1
COMPAREV d2,1
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 415
LOADD d2,1
COMPAREV d2,-1
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 415
SETV d2,3
PUSHR d2
LOADD d2,6
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCEXTEND,d2
SETV d2,1024
PUSHR d2
LOADD d2,6
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCXOFS,d2
LOADD d2,1
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 433
SETV d2,1
PUSHR d2
LOADD d2,6
POP d3
PUSHR d2
PUSHR d3
SETV d2,15
PUSHR d2
POP d0
POP d2
POP REFNPC
SETR NPCMISCD,d2
GOTO 445
LOADD d2,1
PUSHR d2
LOADD d2,6
POP d3
PUSHR d2
PUSHR d3
SETV d2,15
PUSHR d2
POP d0
POP d2
POP REFNPC
SETR NPCMISCD,d2
LOADD d2,3
SUBV d2,1
STORED d2,3
GOTO 91
POPARGS d5,0.0007
RETURN; Func[void AutoGhost()] Body End
PUSHARGSR d2,0.0009; Func[int __AutoGhostParseName(NPC, int)] Body Start
SETR d4,SP
ALLOCATEMEMV d2,64
STORED d2,8
ALLOCATEMEMV d2,64
STORED d2,7
SETV d2,1
PUSHR d2
LOADD d2,9
SETR d0,d2
POP d2
WRITEPODARRAYVR 1,d2
LOADD d2,10; InlineFunc[void NPC->GetName(int)] Params
PUSHR d2
LOADD d2,8
POP REFNPC; InlineFunc[void NPC->GetName(int)] Body Start
NPCNAME d2; InlineFunc[void NPC->GetName(int)] Body End
SETV d2,0
STORED d2,6
LOADD d2,6
COMPAREV d2,63
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 705
LOADD d2,8
PUSHR d2
LOADD d2,6
POP d0
READPODARRAYR d2,d2
COMPAREV d2,64
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 701
LOADD d2,8
PUSHR d2
LOADD d2,6
ADDV d2,1
POP d0
READPODARRAYR d2,d2
STORED d2,5
PUSHR d4
PUSHV 0.0499; UsrFunc[bool __IsScriptNameChar(int, bool)] Return Addr
LOADD d2,5; UsrFunc[bool __IsScriptNameChar(int, bool)] Params
PUSHR d2
PUSHV 1
GOTO 9504; UsrFunc[bool __IsScriptNameChar(int, bool)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 598
SETV d2,0
STORED d2,4
LOADD d2,6
ADDV d2,1
STORED d2,6
PUSHR d4
PUSHV 0.0517; UsrFunc[bool __IsScriptNameChar(int, bool)] Return Addr
LOADD d2,8; UsrFunc[bool __IsScriptNameChar(int, bool)] Params
PUSHR d2
LOADD d2,6
POP d0
READPODARRAYR d2,d2
PUSHR d2
PUSHV 0
GOTO 9504; UsrFunc[bool __IsScriptNameChar(int, bool)] Call
POP d4
COMPAREV d2,0
GOTOTRUE 540
LOADD d2,8
PUSHR d2
LOADD d2,6
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,4
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,4
ADDV d2,1
STORED d2,4
LOADD d2,6
ADDV d2,1
STORED d2,6
GOTO 507
SETV d2,0
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,4
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,7; InlineFunc[int Game->GetFFCScript(int)] Params
GETFFCSCRIPT d2; InlineFunc[int Game->GetFFCScript(int)] Body
PUSHR d2
LOADD d2,9
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
LOADD d2,6
SUBV d2,1
STORED d2,6
LOADD d2,9
PUSHR d2
POP d0
READPODARRAYV d2,0
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 597
ALLOCATEMEMV d2,59
STORED d2,2
WRITEPODSTRING d2,"ghost.zh: AutoGhost setup failed - script does not exist.\n"
ALLOCATEMEMV d2,80
STORED d2,0
WRITEPODSTRING d2,"  Script name: %s\n"
LOADD d2,2; InlineFunc[void printf(char32)] Params
PUSHR d2
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOADD d2,0; InlineFunc[void printf(char32)] Params
PUSHR d2
LOADD d2,7
PUSHVARGR d2
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
SETV d2,0
LOADD d3,0
DEALLOCATEMEMR d3
LOADD d3,2
DEALLOCATEMEMR d3
LOADD d3,7
DEALLOCATEMEMR d3
LOADD d3,8
DEALLOCATEMEMR d3
GOTO 765
LOADD d3,0
DEALLOCATEMEMR d3
LOADD d3,2
DEALLOCATEMEMR d3
GOTO 701
LOADD d2,5
COMPAREV d2,48
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 607
LOADD d2,5
COMPAREV d2,57
SETLESSI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 616
LOADD d2,5
COMPAREV d2,45
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 701
SETV d2,0
STORED d2,4
LOADD d2,5
COMPAREV d2,45
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 637
SETV d2,45
PUSHR d2
LOADD d2,7
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
SETV d2,1
STORED d2,4
LOADD d2,6
ADDV d2,1
STORED d2,6
LOADD d2,6
ADDV d2,1
STORED d2,6
LOADD d2,8
PUSHR d2
LOADD d2,6
POP d0
READPODARRAYR d2,d2
COMPAREV d2,48
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 657
LOADD d2,8
PUSHR d2
LOADD d2,6
POP d0
READPODARRAYR d2,d2
COMPAREV d2,57
SETLESSI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 681
LOADD d2,8
PUSHR d2
LOADD d2,6
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,4
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,4
ADDV d2,1
STORED d2,4
LOADD d2,6
ADDV d2,1
STORED d2,6
GOTO 640
SETV d2,0
PUSHR d2
LOADD d2,7
PUSHR d2
LOADD d2,4
SETR d3,d2
POP d0
POP d2
WRITEPODARRAYRR d3,d2
LOADD d2,7; InlineFunc[int atoi(int)] Params
SETR d3,d2
ATOI d2,d3; InlineFunc[int atoi(int)] Body
PUSHR d2
LOADD d2,9
SETR d0,d2
POP d2
WRITEPODARRAYVR 1,d2
LOADD d2,6
SUBV d2,1
STORED d2,6
LOADD d2,6
ADDV d2,1
STORED d2,6
GOTO 470
LOADD d2,9
PUSHR d2
POP d0
READPODARRAYV d2,0
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 755
ALLOCATEMEMV d2,54
STORED d2,5
WRITEPODSTRING d2,"ghost.zh: AutoGhost setup failed - script not found.\n"
ALLOCATEMEMV d2,80
STORED d2,3
WRITEPODSTRING d2,"  Enemy name: %s\n"
ALLOCATEMEMV d2,55
STORED d2,1
WRITEPODSTRING d2,"  Script name should start after this character: %c\n"
LOADD d2,5; InlineFunc[void printf(char32)] Params
PUSHR d2
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOADD d2,3; InlineFunc[void printf(char32)] Params
PUSHR d2
LOADD d2,8
PUSHVARGR d2
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOADD d2,1; InlineFunc[void printf(char32)] Params
PUSHR d2
PUSHVARGV 64
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
SETV d2,0
LOADD d3,1
DEALLOCATEMEMR d3
LOADD d3,3
DEALLOCATEMEMR d3
LOADD d3,5
DEALLOCATEMEMR d3
LOADD d3,7
DEALLOCATEMEMR d3
LOADD d3,8
DEALLOCATEMEMR d3
GOTO 765
LOADD d3,1
DEALLOCATEMEMR d3
LOADD d3,3
DEALLOCATEMEMR d3
LOADD d3,5
DEALLOCATEMEMR d3
SETV d2,1
LOADD d3,7
DEALLOCATEMEMR d3
LOADD d3,8
DEALLOCATEMEMR d3
GOTO 765
LOADD d3,7
DEALLOCATEMEMR d3
LOADD d3,8
DEALLOCATEMEMR d3
POPARGS d5,0.0011
RETURN; Func[int __AutoGhostParseName(NPC, int)] Body End
SETR d4,SP; Func[void __AutoGhostKill(NPC)] Body Start
SETV d2,65536
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,15
PUSHR d2
POP d0
POP d2
POP REFNPC
SETR NPCMISCD,d2
SETV d2,1024
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCX,d2
SETV d2,1024
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCY,d2
SETV d2,-1000
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCHP,d2
SETV d2,0
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCITEMSET,d2
POPARGS d5,0.0001
RETURN; Func[void __AutoGhostKill(NPC)] Body End
PUSHARGSR d2,0.0002; Func[int FindUnusedFFC(int)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,1
LOADD d2,2; InlineFunc[untyped Max(untyped, untyped)] Params
ADDV d2,1
PUSHVARGR d2
PUSHVARGV 1
MAXVARG; InlineFunc[untyped Max(untyped, untyped)] Body
STORED d2,0
LOADD d2,0
PUSHR d2
PUSHVARGSV 32,0.0002; InlineFunc[untyped Min(untyped, untyped)] Params
MINVARG; InlineFunc[untyped Min(untyped, untyped)] Body
POP d3
COMPARER d3,d2
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 880
LOADD d2,0; InlineFunc[FFC Screen->LoadFFC(int)] Params
SUBV d2,1; InlineFunc[FFC Screen->LoadFFC(int)] Body
STORED d2,1
LOADD d2,1
PUSHR d2
POP REFFFC
SETR d2,DATA
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 856
LOADD d2,1
PUSHR d2
POP REFFFC
SETR d2,DATA
COMPAREV d2,1
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 876
LOADD d2,1
PUSHR d2
POP REFFFC
SETR d2,FFSCRIPT
COMPAREV d2,0
GOTOFALSE 876
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFFFC
SETR d2,FFFLAGSD
COMPAREV d2,0
GOTOFALSE 876
LOADD d2,0
GOTO 882
LOADD d2,0
ADDV d2,1
STORED d2,0
GOTO 828
SETV d2,0
GOTO 882
POPARGS d5,0.0003
RETURN; Func[int FindUnusedFFC(int)] Body End
SETR d4,SP; Func[int CenterX(EWeapon)] Body Start
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNX
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
MULTV d2,8
SETV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
GOTO 906
POPARGS d5,0.0001
RETURN; Func[int CenterX(EWeapon)] Body End
SETR d4,SP; Func[int CenterY(EWeapon)] Body Start
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNTYSZ
MULTV d2,8
SETV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNTYSZ
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
GOTO 930
POPARGS d5,0.0001
RETURN; Func[int CenterY(EWeapon)] Body End
PUSHARGSR d2,0.0002; Func[void CleanUpGhostFFCs()] Body Start
SETR d4,SP
SETR d2,LINKHP
COMPAREV d2,0
SETLESSI d2
SETV d2,0
COMPAREV d2,0
GOTOTRUE 991
SETV d2,0
STORED d2,1
SETV d2,1
STORED d2,0
LOADD d2,0
COMPAREV d2,32
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 991
LOADD d2,0; InlineFunc[FFC Screen->LoadFFC(int)] Params
SUBV d2,1; InlineFunc[FFC Screen->LoadFFC(int)] Body
STORED d2,1
SETR d2,gd25
PUSHR d2
LOADD d2,1
PUSHR d2
POP REFFFC
SETR d2,FFSCRIPT
RSHIFTV d2,4
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,1
PUSHR d2
POP REFFFC
SETR d2,FFSCRIPT
ANDV d2,15
SETV d3,1
LSHIFTR d3,d2
SETR d2,d3
POP d3
ANDR d2,d3
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 985
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 944
POPARGS d5,0.0002
RETURN; Func[void CleanUpGhostFFCs()] Body End
PUSHARGSR d2,0.0002; Func[void DrawEWeaponShadow(EWeapon)] Body Start
SETR d4,SP
PUSHR d4
PUSHV 0.1000; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,2; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNXOFS
POP d3
ADDR d2,d3
STORED d2,1
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
PUSHR d2
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNTYSZ
SUBV d2,1
MULTV d2,16
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNYOFS
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNZOFS
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,0
PUSHV 1; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,2
ADDV d2,27400
PUSHR d2
PUSHARGSV 1,0.0002
PUSHV 7
PUSHARGSV -1,0.0002
PUSHARGSV 0,0.0004
PUSHV 1
PUSHV 64
DRAWTILE; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0015; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS d5,0.0003
RETURN; Func[void DrawEWeaponShadow(EWeapon)] Body End
PUSHARGSR d2,0.0009; Func[void DrawGhostFFCs()] Body Start
SETR d4,SP
SETV d2,1
PUSHR d2
POP d0
SETR d2,SCREENEFLAGSD
ANDV d2,4
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1078
PUSHR d4
PUSHV 0.1074; UsrFunc[bool __HaveAmulet()] Return Addr
GOTO 1286; UsrFunc[bool __HaveAmulet()] Call
POP d4
COMPAREV d2,0
GOTOFALSE 1078
GOTO 1284
SETV d2,0
STORED d2,8
SETV d2,0
STORED d2,7
SETV d2,0
STORED d2,6
SETV d2,0
STORED d2,5
SETV d2,0
STORED d2,4
SETV d2,0
STORED d2,3
SETV d2,0
STORED d2,2
SETV d2,1
PUSHR d2
POP d0
SETR d2,SCREENFLAGSD
ANDV d2,16
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1104
SETV d2,1
STORED d2,3
GOTO 1106
SETV d2,2
STORED d2,3
SETV d2,4
STORED d2,2
SETV d2,1
STORED d2,1
LOADD d2,1
PUSHR d2
SETR d2,NPCCOUNT; InlineFunc[int Screen->NumNPCs()] Body
POP d3
COMPARER d3,d2
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 1284
LOADD d2,1; InlineFunc[NPC Screen->LoadNPC(int)] Params
SUBV d2,1; InlineFunc[NPC Screen->LoadNPC(int)] Body Start
LOADNPCR d2
SETR d2,REFNPC; InlineFunc[NPC Screen->LoadNPC(int)] Body End
STORED d2,6
PUSHR d4
PUSHV 0.1128; UsrFunc[int __GetDrawingArray(NPC)] Return Addr
LOADD d2,6; UsrFunc[int __GetDrawingArray(NPC)] Params
PUSHR d2
GOTO 1306; UsrFunc[int __GetDrawingArray(NPC)] Call
POP d4
STORED d2,8
LOADD d2,8
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1136
GOTO 1278
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ANDV d2,1
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1155
LOADD d2,8
PUSHR d2
POP d0
READPODARRAYV d2,2
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1155
GOTO 1278
LOADD d2,8
PUSHR d2
POP d0
READPODARRAYV d2,2
ANDV d2,1
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1167
SETV d2,64
STORED d2,5
GOTO 1169
SETV d2,128
STORED d2,5
LOADD d2,8
PUSHR d2
POP d0
READPODARRAYV d2,2
ANDV d2,4
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1181
LOADD d2,2
STORED d2,4
GOTO 1183
LOADD d2,3
STORED d2,4
SETV d2,3
STORED d2,7
SETV d2,0
STORED d2,0
LOADD d2,0
PUSHR d2
LOADD d2,8
PUSHR d2
POP d0
READPODARRAYV d2,0
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1278
LOADD d2,8
PUSHR d2
LOADD d2,7
POP d0
READPODARRAYR d2,d2
COMPAREV d2,1
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1217
LOADD d2,8
PUSHR d2
LOADD d2,7
POP d0
READPODARRAYR d2,d2
COMPAREV d2,0
SETFALSEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1269
LOADD d2,4; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params
PUSHR d2
LOADD d2,8
PUSHR d2
LOADD d2,7
ADDV d2,1
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,8
PUSHR d2
LOADD d2,7
ADDV d2,2
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,8
PUSHR d2
LOADD d2,7
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,8
PUSHR d2
LOADD d2,7
ADDV d2,3
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,8
PUSHR d2
LOADD d2,7
ADDV d2,4
POP d0
READPODARRAYR d2,d2
PUSHR d2
LOADD d2,8
PUSHR d2
POP d0
READPODARRAYV d2,1
PUSHR d2
PUSHARGSV -1,0.0002
PUSHARGSV 0,0.0005
PUSHV 1
LOADD d2,5
PUSHR d2
DRAWCOMBO; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0016; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
LOADD d2,7
ADDV d2,6
STORED d2,7
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 1187
LOADD d2,1
PUSHR d2
ADDV d2,1
STORED d2,1
POP d2
GOTO 1110
POPARGS d5,0.0009
RETURN; Func[void DrawGhostFFCs()] Body End
SETR d4,SP; Func[bool __HaveAmulet()] Body Start
SETV d2,50
PUSHR d2
POP d0
SETR d2,LINKITEMD
COMPAREV d2,0
GOTOTRUE 1295
SETV d2,1
GOTO 1305
SETV d2,63
PUSHR d2
POP d0
SETR d2,LINKITEMD
COMPAREV d2,0
GOTOTRUE 1303
SETV d2,1
GOTO 1305
SETV d2,0
GOTO 1305
RETURN; Func[bool __HaveAmulet()] Body End
PUSHR d2; Func[int __GetDrawingArray(NPC)] Body Start
SETR d4,SP
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCMISCD
ANDV d2,65536
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1322
SETV d2,0
GOTO 1345
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFNPC
SETR d2,NPCMISCD
ANDV d2,65535
STORED d2,0
LOADD d2,0
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1338
SETV d2,0
GOTO 1345
LOADD d2,0
PUSHR d2
POP d0
READPODARRAYV d2,23
STORED d2,0
LOADD d2,0
GOTO 1345
POPARGS d5,0.0002
RETURN; Func[int __GetDrawingArray(NPC)] Body End
PUSHARGSR d2,0.0002; Func[int FindUnusedFFC()] Body Start
SETR d4,SP
SETV d2,0
STORED d2,1
SETV d2,1
STORED d2,0
LOADD d2,0
COMPAREV d2,33
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1403
LOADD d2,0; InlineFunc[FFC Screen->LoadFFC(int)] Params
SUBV d2,1; InlineFunc[FFC Screen->LoadFFC(int)] Body
STORED d2,1
LOADD d2,1
PUSHR d2
POP REFFFC
SETR d2,DATA
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 1379
LOADD d2,1
PUSHR d2
POP REFFFC
SETR d2,DATA
COMPAREV d2,1
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1399
LOADD d2,1
PUSHR d2
POP REFFFC
SETR d2,FFSCRIPT
COMPAREV d2,0
GOTOFALSE 1399
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFFFC
SETR d2,FFFLAGSD
COMPAREV d2,0
GOTOFALSE 1399
LOADD d2,0
GOTO 1405
LOADD d2,0
ADDV d2,1
STORED d2,0
GOTO 1353
SETV d2,0
GOTO 1405
POPARGS d5,0.0002
RETURN; Func[int FindUnusedFFC()] Body End
PUSHR d2; Func[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Body Start
SETR d4,SP
LOADD d2,3
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1423
PUSHR d4
PUSHV 0.1421; UsrFunc[int GetDefaultEWeaponSprite(int)] Return Addr
LOADD d2,9; UsrFunc[int GetDefaultEWeaponSprite(int)] Params
PUSHR d2
GOTO 1575; UsrFunc[int GetDefaultEWeaponSprite(int)] Call
POP d4
STORED d2,3
LOADD d2,2
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1437
PUSHR d4
PUSHV 0.1435; UsrFunc[int GetDefaultEWeaponSound(int)] Return Addr
LOADD d2,9; UsrFunc[int GetDefaultEWeaponSound(int)] Params
PUSHR d2
GOTO 1752; UsrFunc[int GetDefaultEWeaponSound(int)] Call
POP d4
STORED d2,2
LOADD d2,9; InlineFunc[EWeapon Screen->CreateEWeapon(int)] Params
CREATEEWEAPONR d2; InlineFunc[EWeapon Screen->CreateEWeapon(int)] Body Start
SETR d2,REFEWPN; InlineFunc[EWeapon Screen->CreateEWeapon(int)] Body End
STORED d2,0
LOADD d2,8
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNX,d2
LOADD d2,7
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNY,d2
LOADD d2,5
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
LOADD d2,4
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNPOWER,d2
SETV d2,0
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
CASTBOOLI d2
POP REFEWPN
SETR EWPNANGULAR,d2
LOADD d2,1
ANDV d2,1
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1508
PUSHR d4
PUSHV 0.1498; UsrFunc[int __UnblockableDir(int)] Return Addr
LOADD d2,6; UsrFunc[int __UnblockableDir(int)] Params
PUSHR d2
GOTO 2139; UsrFunc[int __UnblockableDir(int)] Call
POP d4
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDIR,d2
GOTO 1517
LOADD d2,6
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDIR,d2
LOADD d2,3
COMPAREV d2,0
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1528
LOADD d2,0; InlineFunc[void EWeapon->UseSprite(int)] Params
PUSHR d2
LOADD d2,3
POP d3; InlineFunc[void EWeapon->UseSprite(int)] Body Start
SETR REFEWPN,d3
EWPNUSESPRITER d2; InlineFunc[void EWeapon->UseSprite(int)] Body End
LOADD d2,1
ANDV d2,32
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1544
SETV d2,0
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
CASTBOOLI d2
POP REFEWPN
SETR EWPNCOLLDET,d2
LOADD d2,1
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1556
PUSHR d4
PUSHV 0.1555; UsrFunc[void SetEWeaponRotation(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[void SetEWeaponRotation(EWeapon)] Params
PUSHR d2
GOTO 1949; UsrFunc[void SetEWeaponRotation(EWeapon)] Call
POP d4
LOADD d2,1
ORV d2,512
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,15
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,2; InlineFunc[void Game->PlaySound(int)] Params
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
LOADD d2,0
GOTO 1573
POPARGS d5,0.0010
RETURN; Func[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Body End
PUSHARGSR d2,0.0003; Func[int GetDefaultEWeaponSprite(int)] Body Start
SETR d4,SP
LOADD d2,3
COMPAREV d2,129
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 1587
LOADD d2,3
COMPAREV d2,145
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1592
SETV d2,17
GOTO 1750
LOADD d2,3
COMPAREV d2,133
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1599
SETV d2,18
GOTO 1750
LOADD d2,3
COMPAREV d2,130
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1606
SETV d2,19
GOTO 1750
LOADD d2,3
COMPAREV d2,140
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1613
SETV d2,35
GOTO 1750
LOADD d2,3
COMPAREV d2,142
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1620
SETV d2,81
GOTO 1750
LOADD d2,3
COMPAREV d2,139
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1627
SETV d2,80
GOTO 1750
LOADD d2,3
COMPAREV d2,134
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1634
SETV d2,21
GOTO 1750
LOADD d2,3
COMPAREV d2,132
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1641
SETV d2,20
GOTO 1750
LOADD d2,3
COMPAREV d2,141
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1648
SETV d2,36
GOTO 1750
LOADD d2,3
COMPAREV d2,137
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1655
SETV d2,76
GOTO 1750
LOADD d2,3
COMPAREV d2,138
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1662
SETV d2,77
GOTO 1750
LOADD d2,3
COMPAREV d2,131
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1748
SETV d2,0
STORED d2,2
SETV d2,0
STORED d2,1
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,256
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1730
LOADD d2,0
PUSHR d2
POP d0
SETR d2,LINKITEMD
COMPAREV d2,0
GOTOFALSE 1687
GOTO 1724
LOADD d2,0; InlineFunc[ItemData Game->LoadItemData(int)] Params
LOADITEMDATAR d2; InlineFunc[ItemData Game->LoadItemData(int)] Body Start
SETR d2,REFITEMCLASS; InlineFunc[ItemData Game->LoadItemData(int)] Body End
STORED d2,1
LOADD d2,1
PUSHR d2
POP REFITEMCLASS
SETR d2,IDATAFAMILY
COMPAREV d2,1
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1700
GOTO 1724
LOADD d2,1
PUSHR d2
POP REFITEMCLASS
SETR d2,IDATALEVEL
PUSHR d2
LOADD d2,2
POP d3
COMPARER d3,d2
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1724
LOADD d2,1
PUSHR d2
POP REFITEMCLASS
SETR d2,IDATALEVEL
STORED d2,2
LOADD d2,2
COMPAREV d2,3
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1724
GOTO 1730
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 1673
LOADD d2,2
COMPAREV d2,1
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 1738
SETV d2,4
GOTO 1750
GOTO 1747
LOADD d2,2
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1746
SETV d2,5
GOTO 1750
GOTO 1747
SETV d2,6
GOTO 1750
SETV d2,0
GOTO 1750
POPARGS d5,0.0004
RETURN; Func[int GetDefaultEWeaponSprite(int)] Body End
SETR d4,SP; Func[int GetDefaultEWeaponSound(int)] Body Start
LOADD d2,0
COMPAREV d2,129
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 1763
LOADD d2,0
COMPAREV d2,145
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1768
SETV d2,40
GOTO 1815
LOADD d2,0
COMPAREV d2,134
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 1778
LOADD d2,0
COMPAREV d2,141
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1783
SETV d2,32
GOTO 1815
LOADD d2,0
COMPAREV d2,140
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 1793
LOADD d2,0
COMPAREV d2,142
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 1801
LOADD d2,0
COMPAREV d2,139
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1806
SETV d2,13
GOTO 1815
LOADD d2,0
COMPAREV d2,133
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1813
SETV d2,51
GOTO 1815
SETV d2,0
GOTO 1815
POPARGS d5,0.0001
RETURN; Func[int GetDefaultEWeaponSound(int)] Body End
PUSHARGSR d2,0.0002; Func[void SetEWeaponDir(EWeapon)] Body Start
SETR d4,SP
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
MODV d2,6.2832
STORED d2,1
SETV d2,0
STORED d2,0
LOADD d2,1
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1837
LOADD d2,1
ADDV d2,6.2832
STORED d2,1
LOADD d2,1
COMPAREV d2,0.3927
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 1851
LOADD d2,1
COMPAREV d2,5.8905
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 1857
SETV d2,3
STORED d2,0
GOTO 1919
LOADD d2,1
COMPAREV d2,1.1781
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1867
SETV d2,7
STORED d2,0
GOTO 1919
LOADD d2,1
COMPAREV d2,1.9635
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1877
SETV d2,1
STORED d2,0
GOTO 1919
LOADD d2,1
COMPAREV d2,2.7489
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1887
SETV d2,6
STORED d2,0
GOTO 1919
LOADD d2,1
COMPAREV d2,3.5343
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1897
SETV d2,2
STORED d2,0
GOTO 1919
LOADD d2,1
COMPAREV d2,4.3197
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1907
SETV d2,4
STORED d2,0
GOTO 1919
LOADD d2,1
COMPAREV d2,5.1051
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1917
SETV d2,0
STORED d2,0
GOTO 1919
SETV d2,5
STORED d2,0
LOADD d2,2
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,1
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 1938
PUSHR d4
PUSHV 0.1936; UsrFunc[int __UnblockableDir(int)] Return Addr
LOADD d2,0; UsrFunc[int __UnblockableDir(int)] Params
PUSHR d2
GOTO 2139; UsrFunc[int __UnblockableDir(int)] Call
POP d4
STORED d2,0
LOADD d2,0
PUSHR d2
LOADD d2,2
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDIR,d2
POPARGS d5,0.0003
RETURN; Func[void SetEWeaponDir(EWeapon)] Body End
PUSHR d2; Func[void SetEWeaponRotation(EWeapon)] Body Start
SETR d4,SP
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGULAR
COMPAREV d2,0
GOTOTRUE 2042
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
MODV d2,6.2832
STORED d2,0
LOADD d2,0
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 1973
LOADD d2,0
ADDV d2,6.2832
STORED d2,0
LOADD d2,0
COMPAREV d2,0.7854
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 1987
LOADD d2,0
COMPAREV d2,5.4978
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 2000
SETV d2,4
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
GOTO 2041
LOADD d2,0
COMPAREV d2,2.3562
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 2015
SETV d2,3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
GOTO 2041
LOADD d2,0
COMPAREV d2,3.9270
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2032
SETV d2,7
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
GOTO 2041
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
GOTO 2137
PUSHR d4
PUSHV 0.2049; UsrFunc[int __NormalizeDir(int)] Return Addr
LOADD d2,1; UsrFunc[int __NormalizeDir(int)] Params
PUSHR d2
POP REFEWPN
PUSHR EWPNDIR
GOTO 2200; UsrFunc[int __NormalizeDir(int)] Call
POP d4
STORED d2,0
LOADD d2,0
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 2061
LOADD d2,0
COMPAREV d2,5
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 2069
LOADD d2,0
COMPAREV d2,4
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 2082
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
GOTO 2137
LOADD d2,0
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 2092
LOADD d2,0
COMPAREV d2,7
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 2100
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 2113
SETV d2,3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
GOTO 2137
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2128
SETV d2,7
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
GOTO 2137
SETV d2,4
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
POPARGS d5,0.0002
RETURN; Func[void SetEWeaponRotation(EWeapon)] Body End
SETR d4,SP; Func[int __UnblockableDir(int)] Body Start
LOADD d2,0
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2147
SETV d2,8
GOTO 2198
LOADD d2,0
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2154
SETV d2,12
GOTO 2198
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2161
SETV d2,14
GOTO 2198
LOADD d2,0
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2168
SETV d2,10
GOTO 2198
LOADD d2,0
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2175
SETV d2,15
GOTO 2198
LOADD d2,0
COMPAREV d2,5
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2182
SETV d2,9
GOTO 2198
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2189
SETV d2,13
GOTO 2198
LOADD d2,0
COMPAREV d2,7
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2196
SETV d2,11
GOTO 2198
LOADD d2,0
GOTO 2198
POPARGS d5,0.0001
RETURN; Func[int __UnblockableDir(int)] Body End
SETR d4,SP; Func[int __NormalizeDir(int)] Body Start
LOADD d2,0
COMPAREV d2,0
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 2210
LOADD d2,0
COMPAREV d2,7
SETLESSI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 2216
LOADD d2,0
GOTO 2274
LOADD d2,0
COMPAREV d2,8
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2223
SETV d2,0
GOTO 2274
LOADD d2,0
COMPAREV d2,9
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2230
SETV d2,5
GOTO 2274
LOADD d2,0
COMPAREV d2,10
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2237
SETV d2,3
GOTO 2274
LOADD d2,0
COMPAREV d2,11
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2244
SETV d2,7
GOTO 2274
LOADD d2,0
COMPAREV d2,12
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2251
SETV d2,1
GOTO 2274
LOADD d2,0
COMPAREV d2,13
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2258
SETV d2,6
GOTO 2274
LOADD d2,0
COMPAREV d2,14
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2265
SETV d2,2
GOTO 2274
LOADD d2,0
COMPAREV d2,15
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2272
SETV d2,4
GOTO 2274
SETV d2,0
GOTO 2274
POPARGS d5,0.0001
RETURN; Func[int __NormalizeDir(int)] Body End
SETR d4,SP; Func[bool IsSideview()] Body Start
SETV d2,0
PUSHR d2
POP d0
SETR d2,SCREENFLAGSD
ANDV d2,4
PUSHR d2
SETR d2,CURDMAP; InlineFunc[DMapData Game->LoadDMapData(int)] Params
LOADDMAPDATAR d2; InlineFunc[DMapData Game->LoadDMapData(int)] Body Start
SETR d2,REFDMAPDATA; InlineFunc[DMapData Game->LoadDMapData(int)] Body End
PUSHR d2
POP REFDMAPDATA
SETR d2,DMAPDATASIDEVIEW
POP d3
CASTBOOLF d2
CASTBOOLF d3
COMPARER d3,d2
SETFALSEI d2
GOTO 2295
RETURN; Func[bool IsSideview()] Body End
SETR d4,SP; Func[void InitializeGhostZHData()] Body Start
SETV d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
SETV d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 1,d2
SETV d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 2,d2
SETV d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 3,d2
SETV d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 4,d2
SETV d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 5,d2
SETV d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 6,d2
RETURN; Func[void InitializeGhostZHData()] Body End
SETR d4,SP; Func[void KillEWeapon(EWeapon)] Body Start
LOADD d2,0
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ORV d2,128
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,15
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POPARGS d5,0.0001
RETURN; Func[void KillEWeapon(EWeapon)] Body End
PUSHARGSR d2,0.0005; Func[int __GetEWeaponThrowHeight(EWeapon)] Body Start
SETR d4,SP
LOADD d2,5
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
STORED d2,4
LOADD d2,4
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 2377
SETV d2,1
GOTO 2480
PUSHR d4
PUSHV 0.2412; Int.Func[int Distance(int, int, int, int)] Return Addr
LOADD d2,5; Int.Func[int Distance(int, int, int, int)] Params
PUSHR d2
POP REFEWPN
SETR d2,EWPNX
PUSHR d2
LOADD d2,5
PUSHR d2
POP REFEWPN
SETR d2,EWPNHXSZ
DIVV d2,2
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,5
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
PUSHR d2
LOADD d2,5
PUSHR d2
POP REFEWPN
SETR d2,EWPNHYSZ
DIVV d2,2
POP d3
ADDR d2,d3
PUSHR d2
SETR d2,LINKX
ADDV d2,8
PUSHR d2
SETR d2,LINKY
ADDV d2,8
PUSHR d2
GOTO 20; Int.Func[int Distance(int, int, int, int)] Call
POP d4
STORED d2,3
LOADD d2,3
COMPAREV d2,1
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2423
SETV d2,1
GOTO 2480
LOADD d2,3
PUSHR d2
LOADD d2,4
POP d3
DIVR d3,d2
SETR d2,d3
STORED d2,2
SETV d2,0
STORED d2,1
LOADD d2,1
COMPAREV d2,3.2000
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 2451
LOADD d2,1
ADDV d2,0.1600
STORED d2,1
LOADD d2,2
SUBV d2,2
STORED d2,2
LOADD d2,2
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 2450
LOADD d2,1
GOTO 2480
GOTO 2432
SETV d2,0
STORED d2,0
LOADD d2,2
PUSHR d2
LOADD d2,0
DIVV d2,3.2000
POP d3
COMPARER d3,d2
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2478
LOADD d2,1
ADDV d2,0.1600
STORED d2,1
LOADD d2,0
PUSHR d2
LOADD d2,1
SUBV d2,3.2000
POP d3
ADDR d2,d3
STORED d2,0
LOADD d2,2
SUBV d2,2
STORED d2,2
GOTO 2453
LOADD d2,1
GOTO 2480
POPARGS d5,0.0006
RETURN; Func[int __GetEWeaponThrowHeight(EWeapon)] Body End
SETR d4,SP; Func[void SetEWeaponRotation(EWeapon, int)] Body Start
PUSHR d4
PUSHV 0.2488; UsrFunc[int __NormalizeDir(int)] Return Addr
LOADD d2,0; UsrFunc[int __NormalizeDir(int)] Params
PUSHR d2
GOTO 2200; UsrFunc[int __NormalizeDir(int)] Call
POP d4
STORED d2,0
LOADD d2,0
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 2500
LOADD d2,0
COMPAREV d2,5
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 2508
LOADD d2,0
COMPAREV d2,4
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 2521
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
GOTO 2576
LOADD d2,0
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 2531
LOADD d2,0
COMPAREV d2,7
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 2539
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 2552
SETV d2,3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
GOTO 2576
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2567
SETV d2,7
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
GOTO 2576
SETV d2,4
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNFLIP,d2
POPARGS d5,0.0002
RETURN; Func[void SetEWeaponRotation(EWeapon, int)] Body End
SETR d4,SP; Func[int Sign(int)] Body Start
LOADD d2,0
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2588
SETV d2,1
GOTO 2599
LOADD d2,0
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2597
SETV d2,-1
GOTO 2599
SETV d2,0
GOTO 2599
POPARGS d5,0.0001
RETURN; Func[int Sign(int)] Body End
SETR d4,SP; Func[void StartGhostZH()] Body Start
PUSHR d4
PUSHV 0.2605; UsrFunc[void InitializeGhostZHData()] Return Addr
GOTO 2296; UsrFunc[void InitializeGhostZHData()] Call
POP d4
RETURN; Func[void StartGhostZH()] Body End
PUSHARGSR d2,0.0007; Func[void UpdateEWeapon(EWeapon)] Body Start
SETR d4,SP
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 2619
GOTO 3801
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNX
STORED d2,6
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
STORED d2,5
SETV d2,1
STORED d2,4
LOADD d2,7
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,128
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3033
LOADD d2,7
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 2876
LOADD d2,7
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,6
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 2744
LOADD d2,7
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2683
PUSHR d4
PUSHV 0.2681; UsrFunc[void __UpdateEWMSineWave(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __UpdateEWMSineWave(EWeapon)] Params
PUSHR d2
GOTO 3803; UsrFunc[void __UpdateEWMSineWave(EWeapon)] Call
POP d4
GOTO 2743
LOADD d2,7
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2701
PUSHR d4
PUSHV 0.2699; UsrFunc[void __UpdateEWMHoming(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __UpdateEWMHoming(EWeapon)] Params
PUSHR d2
GOTO 3986; UsrFunc[void __UpdateEWMHoming(EWeapon)] Call
POP d4
GOTO 2743
LOADD d2,7
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2719
PUSHR d4
PUSHV 0.2717; UsrFunc[void __UpdateEWMHomingReaim(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __UpdateEWMHomingReaim(EWeapon)] Params
PUSHR d2
GOTO 4211; UsrFunc[void __UpdateEWMHomingReaim(EWeapon)] Call
POP d4
GOTO 2743
LOADD d2,7
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,5
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2737
PUSHR d4
PUSHV 0.2735; UsrFunc[void __UpdateEWMRandom(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __UpdateEWMRandom(EWeapon)] Params
PUSHR d2
GOTO 4562; UsrFunc[void __UpdateEWMRandom(EWeapon)] Call
POP d4
GOTO 2743
PUSHR d4
PUSHV 0.2742; UsrFunc[void __UpdateEWMRandomReaim(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __UpdateEWMRandomReaim(EWeapon)] Params
PUSHR d2
GOTO 4690; UsrFunc[void __UpdateEWMRandomReaim(EWeapon)] Call
POP d4
GOTO 2876
LOADD d2,7
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,7
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2780
LOADD d2,7
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,6
LOADD d2,7
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,5
PUSHR d4
PUSHV 0.2776; UsrFunc[void __UpdateEWMVeer(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __UpdateEWMVeer(EWeapon)] Params
PUSHR d2
GOTO 5017; UsrFunc[void __UpdateEWMVeer(EWeapon)] Call
POP d4
SETV d2,0
STORED d2,4
GOTO 2876
LOADD d2,7
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,15
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2798
PUSHR d4
PUSHV 0.2796; UsrFunc[void __UpdateEWMThrow(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __UpdateEWMThrow(EWeapon)] Params
PUSHR d2
GOTO 5549; UsrFunc[void __UpdateEWMThrow(EWeapon)] Call
POP d4
GOTO 2876
LOADD d2,7
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,19
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2816
PUSHR d4
PUSHV 0.2814; UsrFunc[void __UpdateEWMFall(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __UpdateEWMFall(EWeapon)] Params
PUSHR d2
GOTO 5865; UsrFunc[void __UpdateEWMFall(EWeapon)] Call
POP d4
GOTO 2876
LOADD d2,7
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,20
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2852
LOADD d2,7
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,6
LOADD d2,7
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,5
PUSHR d4
PUSHV 0.2848; UsrFunc[void __UpdateEWMDrift(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __UpdateEWMDrift(EWeapon)] Params
PUSHR d2
GOTO 6137; UsrFunc[void __UpdateEWMDrift(EWeapon)] Call
POP d4
SETV d2,0
STORED d2,4
GOTO 2876
LOADD d2,7
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,6
LOADD d2,7
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,5
PUSHR d4
PUSHV 0.2873; UsrFunc[void __UpdateEWMDriftWait(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __UpdateEWMDriftWait(EWeapon)] Params
PUSHR d2
GOTO 6641; UsrFunc[void __UpdateEWMDriftWait(EWeapon)] Call
POP d4
SETV d2,0
STORED d2,4
LOADD d2,7
PUSHR d2
SETV d2,11
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3032
LOADD d2,7
PUSHR d2
SETV d2,11
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2935
LOADD d2,7
PUSHR d2
SETV d2,12
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
SUBV d2,1
PUSHR d2
LOADD d2,7
POP d3
PUSHR d2
PUSHR d3
SETV d2,12
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,7
PUSHR d2
SETV d2,12
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 2934
PUSHR d4
PUSHV 0.2933; UsrFunc[void KillEWeapon(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void KillEWeapon(EWeapon)] Params
PUSHR d2
GOTO 2340; UsrFunc[void KillEWeapon(EWeapon)] Call
POP d4
GOTO 3032
LOADD d2,7
PUSHR d2
SETV d2,11
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2982
PUSHR d4
PUSHV 0.2959; Int.Func[int Distance(int, int, int, int)] Return Addr
LOADD d2,7; Int.Func[int Distance(int, int, int, int)] Params
PUSHR d2
POP REFEWPN
PUSHR EWPNX
LOADD d2,7
PUSHR d2
POP REFEWPN
PUSHR EWPNY
PUSHR LINKX
PUSHR LINKY
GOTO 20; Int.Func[int Distance(int, int, int, int)] Call
POP d4
PUSHR d2
LOADD d2,7
PUSHR d2
SETV d2,12
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 2981
PUSHR d4
PUSHV 0.2980; UsrFunc[void KillEWeapon(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void KillEWeapon(EWeapon)] Params
PUSHR d2
GOTO 2340; UsrFunc[void KillEWeapon(EWeapon)] Call
POP d4
GOTO 3032
LOADD d2,7
PUSHR d2
SETV d2,11
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3032
PUSHVARGV 0; InlineFunc[untyped Max(untyped, untyped)] Params
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
PUSHR d2
LOADD d2,7
PUSHR d2
SETV d2,12
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
SUBR d3,d2
PUSHVARGR d3
MAXVARG; InlineFunc[untyped Max(untyped, untyped)] Body
PUSHR d2
LOADD d2,7
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 3032
PUSHR d4
PUSHV 0.3031; UsrFunc[void KillEWeapon(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void KillEWeapon(EWeapon)] Params
PUSHR d2
GOTO 2340; UsrFunc[void KillEWeapon(EWeapon)] Call
POP d4
GOTO 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3055
LOADD d2,7
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,1024
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3079
PUSHR d4
PUSHV 0.3077; UsrFunc[void __DoEWeaponDeathPrototype(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeathPrototype(EWeapon)] Params
PUSHR d2
GOTO 7178; UsrFunc[void __DoEWeaponDeathPrototype(EWeapon)] Call
POP d4
GOTO 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,8
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3221
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3113
SETV d2,0
PUSHR d2
LOADD d2,7
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
GOTO 3220
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3131
PUSHR d4
PUSHV 0.3129; UsrFunc[void __DoEWeaponDeathAimAtLink(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeathAimAtLink(EWeapon)] Params
PUSHR d2
GOTO 7614; UsrFunc[void __DoEWeaponDeathAimAtLink(EWeapon)] Call
POP d4
GOTO 3220
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3149
PUSHR d4
PUSHV 0.3147; UsrFunc[void __DoEWeaponDeathExplode(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeathExplode(EWeapon)] Params
PUSHR d2
GOTO 7788; UsrFunc[void __DoEWeaponDeathExplode(EWeapon)] Call
POP d4
GOTO 3220
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3167
PUSHR d4
PUSHV 0.3165; UsrFunc[void __DoEWeaponDeathSBombExplode(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeathSBombExplode(EWeapon)] Params
PUSHR d2
GOTO 7835; UsrFunc[void __DoEWeaponDeathSBombExplode(EWeapon)] Call
POP d4
GOTO 3220
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,5
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3185
PUSHR d4
PUSHV 0.3183; UsrFunc[void __DoEWeaponDeath4FireballsHV(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeath4FireballsHV(EWeapon)] Params
PUSHR d2
GOTO 7882; UsrFunc[void __DoEWeaponDeath4FireballsHV(EWeapon)] Call
POP d4
GOTO 3220
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3203
PUSHR d4
PUSHV 0.3201; UsrFunc[void __DoEWeaponDeath4FireballsDiag(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeath4FireballsDiag(EWeapon)] Params
PUSHR d2
GOTO 7948; UsrFunc[void __DoEWeaponDeath4FireballsDiag(EWeapon)] Call
POP d4
GOTO 3220
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,7
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3220
PUSHR d4
PUSHV 0.3219; UsrFunc[void __DoEWeaponDeath4FireballsRand(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeath4FireballsRand(EWeapon)] Params
PUSHR d2
GOTO 8014; UsrFunc[void __DoEWeaponDeath4FireballsRand(EWeapon)] Call
POP d4
GOTO 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,8
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3239
PUSHR d4
PUSHV 0.3237; UsrFunc[void __DoEWeaponDeath8Fireballs(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeath8Fireballs(EWeapon)] Params
PUSHR d2
GOTO 8140; UsrFunc[void __DoEWeaponDeath8Fireballs(EWeapon)] Call
POP d4
GOTO 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,9
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3257
PUSHR d4
PUSHV 0.3255; UsrFunc[void __DoEWeaponDeath4FiresHV(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeath4FiresHV(EWeapon)] Params
PUSHR d2
GOTO 8206; UsrFunc[void __DoEWeaponDeath4FiresHV(EWeapon)] Call
POP d4
GOTO 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,10
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3275
PUSHR d4
PUSHV 0.3273; UsrFunc[void __DoEWeaponDeath4FiresDiag(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeath4FiresDiag(EWeapon)] Params
PUSHR d2
GOTO 8274; UsrFunc[void __DoEWeaponDeath4FiresDiag(EWeapon)] Call
POP d4
GOTO 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,11
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3293
PUSHR d4
PUSHV 0.3291; UsrFunc[void __DoEWeaponDeath4FiresRand(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeath4FiresRand(EWeapon)] Params
PUSHR d2
GOTO 8342; UsrFunc[void __DoEWeaponDeath4FiresRand(EWeapon)] Call
POP d4
GOTO 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,12
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3311
PUSHR d4
PUSHV 0.3309; UsrFunc[void __DoEWeaponDeath8Fires(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeath8Fires(EWeapon)] Params
PUSHR d2
GOTO 8470; UsrFunc[void __DoEWeaponDeath8Fires(EWeapon)] Call
POP d4
GOTO 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,13
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3329
PUSHR d4
PUSHV 0.3327; UsrFunc[void __DoEWeaponDeathSpawnNPC(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeathSpawnNPC(EWeapon)] Params
PUSHR d2
GOTO 8591; UsrFunc[void __DoEWeaponDeathSpawnNPC(EWeapon)] Call
POP d4
GOTO 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,14
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3347
PUSHR d4
PUSHV 0.3345; UsrFunc[void __DoEWeaponDeathSingleFire(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeathSingleFire(EWeapon)] Params
PUSHR d2
GOTO 8638; UsrFunc[void __DoEWeaponDeathSingleFire(EWeapon)] Call
POP d4
GOTO 3364
LOADD d2,7
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,15
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3364
PUSHR d4
PUSHV 0.3363; UsrFunc[void __DoEWeaponDeathRunScript(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void __DoEWeaponDeathRunScript(EWeapon)] Params
PUSHR d2
GOTO 8692; UsrFunc[void __DoEWeaponDeathRunScript(EWeapon)] Call
POP d4
LOADD d2,7
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,8
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3392
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNZ
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3392
PUSHR d4
PUSHV 0.3391; UsrFunc[void DrawEWeaponShadow(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void DrawEWeaponShadow(EWeapon)] Params
PUSHR d2
GOTO 993; UsrFunc[void DrawEWeaponShadow(EWeapon)] Call
POP d4
LOADD d2,7
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,4
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3691
SETV d2,1000
PUSHR d2
LOADD d2,7
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNXOFS,d2
SETR d2,LINKHP
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 3419
GOTO 3801
LOADD d2,7
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,16
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3439
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ANDV d2,1
COMPAREV d2,0
SETFALSEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3444
GOTO 3801
SETV d2,0
STORED d2,3
SETV d2,0
STORED d2,2
SETV d2,0
STORED d2,1
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGULAR
COMPAREV d2,0
GOTOTRUE 3463
LOADD d2,7; InlineFunc[int RadtoDeg(int)] Params
PUSHR d2
POP REFEWPN
SETR d3,EWPNANGLE
RADTODEG d2,d3; InlineFunc[int RadtoDeg(int)] Body
STORED d2,1
GOTO 3530
PUSHR d4
PUSHV 0.3470; UsrFunc[int __NormalizeDir(int)] Return Addr
LOADD d2,7; UsrFunc[int __NormalizeDir(int)] Params
PUSHR d2
POP REFEWPN
PUSHR EWPNDIR
GOTO 2200; UsrFunc[int __NormalizeDir(int)] Call
POP d4
STORED d2,0
LOADD d2,0
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3480
SETV d2,-90
STORED d2,1
GOTO 3530
LOADD d2,0
COMPAREV d2,5
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3488
SETV d2,-45
STORED d2,1
GOTO 3530
LOADD d2,0
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3496
SETV d2,0
STORED d2,1
GOTO 3530
LOADD d2,0
COMPAREV d2,7
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3504
SETV d2,45
STORED d2,1
GOTO 3530
LOADD d2,0
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3512
SETV d2,90
STORED d2,1
GOTO 3530
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3520
SETV d2,135
STORED d2,1
GOTO 3530
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3528
SETV d2,180
STORED d2,1
GOTO 3530
SETV d2,-135
STORED d2,1
LOADD d2,4
COMPAREV d2,0
GOTOTRUE 3572
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNX
PUSHR d2
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
PUSHR d2
LOADD d2,1; InlineFunc[int Cos(int)] Params
SETR d3,d2
COSR d2,d3; InlineFunc[int Cos(int)] Body
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
STORED d2,3
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
PUSHR d2
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
PUSHR d2
LOADD d2,1; InlineFunc[int Sin(int)] Params
SETR d3,d2
SINR d2,d3; InlineFunc[int Sin(int)] Body
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
STORED d2,2
GOTO 3588
LOADD d2,7
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,3
LOADD d2,7
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,2
LOADD d2,6
PUSHR d2
LOADD d2,3
POP d3
COMPARER d3,d2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 3603
LOADD d2,5
PUSHR d2
LOADD d2,2
POP d3
COMPARER d3,d2
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOFALSE 3620
PUSHR d4
PUSHV 0.3618; UsrFunc[int Angle(int, int, int, int)] Return Addr
LOADD d2,6; UsrFunc[int Angle(int, int, int, int)] Params
PUSHR d2
LOADD d2,5
PUSHR d2
LOADD d2,3
PUSHR d2
LOADD d2,2
PUSHR d2
GOTO 53; UsrFunc[int Angle(int, int, int, int)] Call
POP d4
STORED d2,1
SETV d2,0
STORED d2,0
LOADD d2,1
COMPAREV d2,0
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3633
LOADD d2,1
COMPAREV d2,180
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 3640
SETV d2,0
STORED d2,0
GOTO 3642
SETV d2,2
STORED d2,0
PUSHV 4; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params
LOADD d2,3
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNZ
POP d3
SUBR d3,d2
PUSHR d3
LOADD d2,7
PUSHR d2
POP REFEWPN
PUSHR EWPNTILE
LOADD d2,7
PUSHR d2
POP REFEWPN
PUSHR EWPNTXSZ
LOADD d2,7
PUSHR d2
POP REFEWPN
PUSHR EWPNTYSZ
LOADD d2,7
PUSHR d2
POP REFEWPN
PUSHR EWPNCSET
PUSHARGSV -1,0.0002
LOADD d2,3
PUSHR d2
LOADD d2,2
PUSHR d2
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNZ
POP d3
SUBR d3,d2
PUSHR d3
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 1
PUSHV 128
DRAWTILE; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0015; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
GOTO 3749
LOADD d2,7
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,16
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3731
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ANDV d2,1
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3722
SETV d2,1000
PUSHR d2
LOADD d2,7
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNXOFS,d2
GOTO 3731
SETV d2,0
PUSHR d2
LOADD d2,7
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNXOFS,d2
LOADD d2,7
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 3749
PUSHR d4
PUSHV 0.3748; UsrFunc[void SetEWeaponRotation(EWeapon)] Return Addr
LOADD d2,7; UsrFunc[void SetEWeaponRotation(EWeapon)] Params
PUSHR d2
GOTO 1949; UsrFunc[void SetEWeaponRotation(EWeapon)] Call
POP d4
LOADD d2,7
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,64
COMPAREV d2,0
SETFALSEI d2
CASTBOOLI d2
COMPAREV d2,0
GOTOTRUE 3801
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNZ
SUBV2 0,d2
PUSHR d2
LOADD d2,7
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNZOFS,d2
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNZ
SUBV2 0,d2
PUSHR d2
LOADD d2,7
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNHYOFS,d2
LOADD d2,7
PUSHR d2
POP REFEWPN
SETR d2,EWPNZ
SUBV2 0,d2
PUSHR d2
LOADD d2,7
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNYOFS,d2
POPARGS d5,0.0008
RETURN; Func[void UpdateEWeapon(EWeapon)] Body End
PUSHR d2; Func[void __UpdateEWMSineWave(EWeapon)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,0
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1; InlineFunc[int Sin(int)] Params
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d3,EWPNMISCD
SINR d2,d3; InlineFunc[int Sin(int)] Body
POP d3
MULTR d2,d3
STORED d2,0
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
PUSHR d2
LOADD d2,1; InlineFunc[int RadianCos(int)] Params
PUSHR d2
POP REFEWPN
SETR d3,EWPNANGLE
MULTV d3,57.2958; InlineFunc[int RadianCos(int)] Body Start
COSR d2,d3; InlineFunc[int RadianCos(int)] Body End
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
PUSHR d2
LOADD d2,1; InlineFunc[int RadianSin(int)] Params
PUSHR d2
POP REFEWPN
SETR d3,EWPNANGLE
MULTV d3,57.2958; InlineFunc[int RadianSin(int)] Body Start
SINR d2,d3; InlineFunc[int RadianSin(int)] Body End
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,0
PUSHR d2
LOADD d2,1; InlineFunc[int RadianCos(int)] Params
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
ADDV d2,1.5708
SETR d3,d2
MULTV d3,57.2958; InlineFunc[int RadianCos(int)] Body Start
COSR d2,d3; InlineFunc[int RadianCos(int)] Body End
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNX,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,0
PUSHR d2
LOADD d2,1; InlineFunc[int RadianSin(int)] Params
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
ADDV d2,1.5708
SETR d3,d2
MULTV d3,57.2958; InlineFunc[int RadianSin(int)] Body Start
SINR d2,d3; InlineFunc[int RadianSin(int)] Body End
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNY,d2
POPARGS d5,0.0002
RETURN; Func[void __UpdateEWMSineWave(EWeapon)] Body End
PUSHARGSR d2,0.0003; Func[void __UpdateEWMHoming(EWeapon)] Body Start
SETR d4,SP
LOADD d2,3
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
MODV d2,6.2832
STORED d2,2
LOADD d2,2
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4004
LOADD d2,2
ADDV d2,6.2832
STORED d2,2
PUSHR d4
PUSHV 0.4017; UsrFunc[int RadianAngle(int, int, int, int)] Return Addr
LOADD d2,3; UsrFunc[int RadianAngle(int, int, int, int)] Params
PUSHR d2
POP REFEWPN
PUSHR EWPNX
LOADD d2,3
PUSHR d2
POP REFEWPN
PUSHR EWPNY
PUSHR LINKX
PUSHR LINKY
GOTO 26; UsrFunc[int RadianAngle(int, int, int, int)] Call
POP d4
STORED d2,1
LOADD d2,1
COMPAREV d2,0
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4029
LOADD d2,1
ADDV d2,6.2832
STORED d2,1
LOADD d2,2; InlineFunc[int Abs(int)] Params
PUSHR d2
LOADD d2,1
POP d3
SUBR d3,d2
SETR d2,d3
ABS d2; InlineFunc[int Abs(int)] Body
STORED d2,0
LOADD d2,0
PUSHR d2
LOADD d2,3
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 4070
LOADD d2,0
PUSHR d2
LOADD d2,3
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
SUBV2 6.2832,d2
POP d3
COMPARER d3,d2
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 4083
LOADD d2,1
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
GOTO 4152
PUSHR d4
PUSHV 0.4092; UsrFunc[int Sign(int)] Return Addr
LOADD d2,2; UsrFunc[int Sign(int)] Params
PUSHR d2
LOADD d2,1
POP d3
SUBR d3,d2
PUSHR d3
GOTO 2578; UsrFunc[int Sign(int)] Call
POP d4
PUSHR d2
PUSHR d4
PUSHV 0.4100; UsrFunc[int Sign(int)] Return Addr
LOADD d2,0; UsrFunc[int Sign(int)] Params
SUBV d2,3.1416
PUSHR d2
GOTO 2578; UsrFunc[int Sign(int)] Call
POP d4
POP d3
COMPARER d3,d2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4129
LOADD d2,3
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
PUSHR d2
LOADD d2,3
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
GOTO 4152
LOADD d2,3
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
PUSHR d2
LOADD d2,3
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
PUSHR d4
PUSHV 0.4157; UsrFunc[void SetEWeaponDir(EWeapon)] Return Addr
LOADD d2,3; UsrFunc[void SetEWeaponDir(EWeapon)] Params
PUSHR d2
GOTO 1817; UsrFunc[void SetEWeaponDir(EWeapon)] Call
POP d4
LOADD d2,3
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4209
LOADD d2,3
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
SUBV d2,1
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
SETV d2,10
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POP d2
LOADD d2,3
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 4209
PUSHR d4
PUSHV 0.4208; UsrFunc[void KillEWeapon(EWeapon)] Return Addr
LOADD d2,3; UsrFunc[void KillEWeapon(EWeapon)] Params
PUSHR d2
GOTO 2340; UsrFunc[void KillEWeapon(EWeapon)] Call
POP d4
POPARGS d5,0.0004
RETURN; Func[void __UpdateEWMHoming(EWeapon)] Body End
PUSHR d2; Func[void __UpdateEWMHomingReaim(EWeapon)] Body Start
SETR d4,SP
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4242
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4348
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
SUBV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POP d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4347
LOADD d2,1
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 4305
PUSHR d4
PUSHV 0.4303; UsrFunc[void KillEWeapon(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void KillEWeapon(EWeapon)] Params
PUSHR d2
GOTO 2340; UsrFunc[void KillEWeapon(EWeapon)] Call
POP d4
GOTO 4347
LOADD d2,1
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
SUBV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,9
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POP d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
SETV d2,-20
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 4560
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
ADDV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POP d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4453
SETV d2,45
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
PUSHR d4
PUSHV 0.4405; UsrFunc[int RadianAngle(int, int, int, int)] Return Addr
LOADD d2,1; UsrFunc[int RadianAngle(int, int, int, int)] Params
PUSHR d2
POP REFEWPN
PUSHR EWPNX
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNY
PUSHR LINKX
PUSHR LINKY
GOTO 26; UsrFunc[int RadianAngle(int, int, int, int)] Call
POP d4
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
LOADD d2,1
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
PUSHR d4
PUSHV 0.4434; UsrFunc[void SetEWeaponDir(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponDir(EWeapon)] Params
PUSHR d2
GOTO 1817; UsrFunc[void SetEWeaponDir(EWeapon)] Call
POP d4
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4453
PUSHR d4
PUSHV 0.4452; UsrFunc[void SetEWeaponRotation(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon)] Params
PUSHR d2
GOTO 1949; UsrFunc[void SetEWeaponRotation(EWeapon)] Call
POP d4
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,4
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4479
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
ADDV d2,0.3000
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
GOTO 4560
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4560
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
ADDV d2,0.2000
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
SUBV2 0,d2
ANDV d2,6
STORED d2,0
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4527
PUSHR d4
PUSHV 0.4525; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 0
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
GOTO 4560
LOADD d2,0
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4540
PUSHR d4
PUSHV 0.4538; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 3
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
GOTO 4560
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4553
PUSHR d4
PUSHV 0.4551; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 1
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
GOTO 4560
PUSHR d4
PUSHV 0.4559; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 2
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
POPARGS d5,0.0002
RETURN; Func[void __UpdateEWMHomingReaim(EWeapon)] Body End
SETR d4,SP; Func[void __UpdateEWMRandom(EWeapon)] Body Start
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
PUSHR d2
PUSHR d4
PUSHV 0.4591; UsrFunc[int Randf(int)] Return Addr
LOADD d2,0; UsrFunc[int Randf(int)] Params
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,2
SETV d2,2
PUSHR d2
LOADD d2,0
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
MULTR d2,d3
PUSHR d2
GOTO 44; UsrFunc[int Randf(int)] Call
POP d4
PUSHR d2
LOADD d2,0
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
SUBR d3,d2
SETR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
PUSHR d4
PUSHV 0.4618; UsrFunc[void SetEWeaponDir(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[void SetEWeaponDir(EWeapon)] Params
PUSHR d2
GOTO 1817; UsrFunc[void SetEWeaponDir(EWeapon)] Call
POP d4
LOADD d2,0
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4637
PUSHR d4
PUSHV 0.4636; UsrFunc[void SetEWeaponRotation(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[void SetEWeaponRotation(EWeapon)] Params
PUSHR d2
GOTO 1949; UsrFunc[void SetEWeaponRotation(EWeapon)] Call
POP d4
LOADD d2,0
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4688
LOADD d2,0
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
SUBV d2,1
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,10
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POP d2
LOADD d2,0
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 4688
PUSHR d4
PUSHV 0.4687; UsrFunc[void KillEWeapon(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[void KillEWeapon(EWeapon)] Params
PUSHR d2
GOTO 2340; UsrFunc[void KillEWeapon(EWeapon)] Call
POP d4
POPARGS d5,0.0001
RETURN; Func[void __UpdateEWMRandom(EWeapon)] Body End
PUSHR d2; Func[void __UpdateEWMRandomReaim(EWeapon)] Body Start
SETR d4,SP
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4721
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4827
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
SUBV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POP d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4826
LOADD d2,1
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 4784
PUSHR d4
PUSHV 0.4782; UsrFunc[void KillEWeapon(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void KillEWeapon(EWeapon)] Params
PUSHR d2
GOTO 2340; UsrFunc[void KillEWeapon(EWeapon)] Call
POP d4
GOTO 4826
LOADD d2,1
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
SUBV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,9
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POP d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
SETV d2,-20
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 5015
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
ADDV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POP d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4921
SETV d2,45
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
SETV d3,62832; InlineFunc[int Rand(int)] Params
RNDR d2,d3; InlineFunc[int Rand(int)] Body
MULTV d2,0.0001
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
LOADD d2,1
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
PUSHR d4
PUSHV 0.4902; UsrFunc[void SetEWeaponDir(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponDir(EWeapon)] Params
PUSHR d2
GOTO 1817; UsrFunc[void SetEWeaponDir(EWeapon)] Call
POP d4
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4921
PUSHR d4
PUSHV 0.4920; UsrFunc[void SetEWeaponRotation(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon)] Params
PUSHR d2
GOTO 1949; UsrFunc[void SetEWeaponRotation(EWeapon)] Call
POP d4
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,4
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 4947
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
ADDV d2,0.3000
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
GOTO 5015
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 5015
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
SUBV2 0,d2
ANDV d2,6
STORED d2,0
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4982
PUSHR d4
PUSHV 0.4980; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 0
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
GOTO 5015
LOADD d2,0
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 4995
PUSHR d4
PUSHV 0.4993; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 3
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
GOTO 5015
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5008
PUSHR d4
PUSHV 0.5006; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 1
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
GOTO 5015
PUSHR d4
PUSHV 0.5014; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 2
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
POPARGS d5,0.0002
RETURN; Func[void __UpdateEWMRandomReaim(EWeapon)] Body End
PUSHR d2; Func[void __UpdateEWMVeer(EWeapon)] Body Start
SETR d4,SP
LOADD d2,1
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,0
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
PUSHR d2
LOADD d2,1; InlineFunc[int RadianCos(int)] Params
PUSHR d2
POP REFEWPN
SETR d3,EWPNANGLE
MULTV d3,57.2958; InlineFunc[int RadianCos(int)] Body Start
COSR d2,d3; InlineFunc[int RadianCos(int)] Body End
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
PUSHR d2
LOADD d2,1; InlineFunc[int RadianSin(int)] Params
PUSHR d2
POP REFEWPN
SETR d3,EWPNANGLE
MULTV d3,57.2958; InlineFunc[int RadianSin(int)] Body Start
SINR d2,d3; InlineFunc[int RadianSin(int)] Body End
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,0
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5132
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 5489
LOADD d2,0
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5166
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 5489
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5201
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 5489
LOADD d2,0
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5235
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 5489
LOADD d2,0
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5301
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 5489
LOADD d2,0
COMPAREV d2,5
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5366
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 5489
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5431
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 5489
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNX,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNY,d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POPARGS d5,0.0002
RETURN; Func[void __UpdateEWMVeer(EWeapon)] Body End
PUSHR d2; Func[void __UpdateEWMThrow(EWeapon)] Body Start
SETR d4,SP
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNJUMP,d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5581
LOADD d2,1
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETFALSEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 5615
LOADD d2,1
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,9
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1; InlineFunc[untyped Max(untyped, untyped)] Params
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
ADDR d2,d3
PUSHVARGR d2
PUSHVARGV 0
MAXVARG; InlineFunc[untyped Max(untyped, untyped)] Body
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,7
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
PUSHR d4
PUSHV 0.5649; UsrFunc[bool IsSideview()] Return Addr
GOTO 2276; UsrFunc[bool IsSideview()] Call
POP d4
COMPAREV d2,0
GOTOFALSE 5668
LOADD d2,1
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNZ,d2
GOTO 5684
LOADD d2,1
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
SUBV2 176,d2
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNY,d2
LOADD d2,1
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5750
PUSHR d4
PUSHV 0.5724; UsrFunc[bool ghost2__OnSidePlatform(int, int, int, int, int, int)] Return Addr
LOADD d2,1; UsrFunc[bool ghost2__OnSidePlatform(int, int, int, int, int, int)] Params
PUSHR d2
POP REFEWPN
PUSHR EWPNX
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNY
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNHXOFS
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNHYOFS
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNHYSZ
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNHXSZ
GOTO 10057; UsrFunc[bool ghost2__OnSidePlatform(int, int, int, int, int, int)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 5749
LOADD d2,1; InlineFunc[untyped Max(untyped, untyped)] Params
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
SUBV d2,0.1600
PUSHVARGR d2
PUSHVARGV -3.2000
MAXVARG; InlineFunc[untyped Max(untyped, untyped)] Body
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 5863
SETV d2,0
STORED d2,0
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,2
COMPAREV d2,0
GOTOTRUE 5811
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,-0.5000
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 5808
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,-0.5000
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
MULTV d2,0.7500
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
GOTO 5810
SETV d2,1
STORED d2,0
GOTO 5813
SETV d2,1
STORED d2,0
LOADD d2,0
COMPAREV d2,0
GOTOTRUE 5863
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,1
COMPAREV d2,0
GOTOTRUE 5842
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNZ,d2
PUSHR d4
PUSHV 0.5840; UsrFunc[void KillEWeapon(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void KillEWeapon(EWeapon)] Params
PUSHR d2
GOTO 2340; UsrFunc[void KillEWeapon(EWeapon)] Call
POP d4
GOTO 5863
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,8
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
POPARGS d5,0.0002
RETURN; Func[void __UpdateEWMThrow(EWeapon)] Body End
PUSHR d2; Func[void __UpdateEWMFall(EWeapon)] Body Start
SETR d4,SP
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNJUMP,d2
LOADD d2,1
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,7
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
PUSHR d4
PUSHV 0.5908; UsrFunc[bool IsSideview()] Return Addr
GOTO 2276; UsrFunc[bool IsSideview()] Call
POP d4
COMPAREV d2,0
GOTOFALSE 5927
LOADD d2,1
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNZ,d2
GOTO 5957
LOADD d2,1
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNHYOFS,d2
LOADD d2,1
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNYOFS,d2
LOADD d2,1; InlineFunc[untyped Min(untyped, untyped)] Params
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ADDV d2,0.1600
PUSHVARGR d2
PUSHVARGV 3.2000
MINVARG; InlineFunc[untyped Min(untyped, untyped)] Body
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,7
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 6135
PUSHR d4
PUSHV 0.6017; UsrFunc[bool ghost2__OnSidePlatform(int, int, int, int, int, int)] Return Addr
LOADD d2,1; UsrFunc[bool ghost2__OnSidePlatform(int, int, int, int, int, int)] Params
PUSHR d2
POP REFEWPN
PUSHR EWPNX
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNY
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNHXOFS
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNHYOFS
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNHYSZ
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNHXSZ
GOTO 10057; UsrFunc[bool ghost2__OnSidePlatform(int, int, int, int, int, int)] Call
POP d4
COMPAREV d2,0
GOTOFALSE 6135
SETV d2,0
STORED d2,0
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 6083
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,-0.5000
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6080
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,-0.5000
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
MULTV d2,0.7500
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
GOTO 6082
SETV d2,1
STORED d2,0
GOTO 6085
SETV d2,1
STORED d2,0
LOADD d2,0
COMPAREV d2,0
GOTOTRUE 6135
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,1
COMPAREV d2,0
GOTOTRUE 6114
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNZ,d2
PUSHR d4
PUSHV 0.6112; UsrFunc[void KillEWeapon(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void KillEWeapon(EWeapon)] Params
PUSHR d2
GOTO 2340; UsrFunc[void KillEWeapon(EWeapon)] Call
POP d4
GOTO 6135
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,8
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
POPARGS d5,0.0002
RETURN; Func[void __UpdateEWMFall(EWeapon)] Body End
PUSHR d2; Func[void __UpdateEWMDrift(EWeapon)] Body Start
SETR d4,SP
LOADD d2,1
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,0
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
PUSHR d2
LOADD d2,1; InlineFunc[int RadianCos(int)] Params
PUSHR d2
POP REFEWPN
SETR d3,EWPNANGLE
MULTV d3,57.2958; InlineFunc[int RadianCos(int)] Body Start
COSR d2,d3; InlineFunc[int RadianCos(int)] Body End
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
PUSHR d2
LOADD d2,1; InlineFunc[int RadianSin(int)] Params
PUSHR d2
POP REFEWPN
SETR d3,EWPNANGLE
MULTV d3,57.2958; InlineFunc[int RadianSin(int)] Body Start
SINR d2,d3; InlineFunc[int RadianSin(int)] Body End
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,0
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6252
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 6609
LOADD d2,0
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6286
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 6609
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6321
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 6609
LOADD d2,0
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6355
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 6609
LOADD d2,0
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6421
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 6609
LOADD d2,0
COMPAREV d2,5
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6486
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 6609
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6551
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 6609
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNX,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNY,d2
POPARGS d5,0.0002
RETURN; Func[void __UpdateEWMDrift(EWeapon)] Body End
PUSHR d2; Func[void __UpdateEWMDriftWait(EWeapon)] Body Start
SETR d4,SP
LOADD d2,1
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
STORED d2,0
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,16
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 6733
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
PUSHR d2
LOADD d2,1; InlineFunc[int RadianCos(int)] Params
PUSHR d2
POP REFEWPN
SETR d3,EWPNANGLE
MULTV d3,57.2958; InlineFunc[int RadianCos(int)] Body Start
COSR d2,d3; InlineFunc[int RadianCos(int)] Body End
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNSTEP
DIVV d2,100
PUSHR d2
LOADD d2,1; InlineFunc[int RadianSin(int)] Params
PUSHR d2
POP REFEWPN
SETR d3,EWPNANGLE
MULTV d3,57.2958; InlineFunc[int RadianSin(int)] Body Start
SINR d2,d3; InlineFunc[int RadianSin(int)] Body End
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 6754
LOADD d2,1
PUSHR d2
SETV d2,6
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
ADDV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,6
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
POP d2
LOADD d2,0
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6789
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 7146
LOADD d2,0
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6823
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 7146
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6858
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 7146
LOADD d2,0
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6892
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 7146
LOADD d2,0
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 6958
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 7146
LOADD d2,0
COMPAREV d2,5
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7023
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 7146
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7088
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 7146
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MULTV d2,0.7071
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNX,d2
LOADD d2,1
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNY,d2
POPARGS d5,0.0002
RETURN; Func[void __UpdateEWMDriftWait(EWeapon)] Body End
PUSHARGSR d2,0.0011; Func[void __DoEWeaponDeathPrototype(EWeapon)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,10
SETV d2,0
STORED d2,9
SETV d2,0
STORED d2,8
SETV d2,0
STORED d2,7
SETV d2,0
STORED d2,6
SETV d2,0
STORED d2,5
SETV d2,0
STORED d2,4
SETV d2,0
STORED d2,3
SETV d2,0
STORED d2,2
LOADD d2,11; InlineFunc[untyped Floor(untyped)] Params
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
FLOOR d2; InlineFunc[untyped Floor(untyped)] Body
STORED d2,10
SETR d2,EWPNCOUNT; InlineFunc[int Screen->NumEWeapons()] Body
STORED d2,2
LOADD d2,2
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7255
LOADD d2,2; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Params
SUBV d2,1; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Body Start
LOADEWEAPONR d2
SETR d2,REFEWPN; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Body End
STORED d2,9
LOADD d2,9
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,768
COMPAREV d2,768
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 7234
GOTO 7249
LOADD d2,9
PUSHR d2
SETV d2,3
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,10
POP d3
COMPARER d3,d2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7249
GOTO 7255
LOADD d2,2
PUSHR d2
SUBV d2,1
STORED d2,2
POP d2
GOTO 7209
LOADD d2,2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7281
ALLOCATEMEMV d2,43
STORED d2,0
WRITEPODSTRING d2,"ghost.zh: Failed to find prototype eweapon"
LOADD d2,0; InlineFunc[void TraceS(int)] Params
SETR d0,d2
TRACE6 d3; InlineFunc[void TraceS(int)] Body
TRACE3; InlineFunc[void TraceNL()] Body
SETV d2,0
PUSHR d2
LOADD d2,11
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
LOADD d3,0
DEALLOCATEMEMR d3
GOTO 7612
LOADD d3,0
DEALLOCATEMEMR d3
LOADD d2,11
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
MODV d2,10
SUBV d2,6.2832
STORED d2,4
LOADD d2,11
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,10
POP d3
SUBR d3,d2
SETR d2,d3
MULTV d2,10000
STORED d2,3
LOADD d2,11
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,4
POP d3
SUBR d3,d2
SETR d2,d3
DIVV d2,100
RSHIFTV d2,0
STORED d2,7
LOADD d2,11
PUSHR d2
POP REFEWPN
SETR d2,EWPNEXTEND
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7371
LOADD d2,11
PUSHR d2
POP REFEWPN
SETR d2,EWPNX
PUSHR d2
LOADD d2,11
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
MULTV d2,8
SETV d2,8
PUSHR d2
LOADD d2,11
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
STORED d2,6
LOADD d2,11
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
PUSHR d2
LOADD d2,11
PUSHR d2
POP REFEWPN
SETR d2,EWPNTYSZ
MULTV d2,8
SETV d2,8
PUSHR d2
LOADD d2,11
PUSHR d2
POP REFEWPN
SETR d2,EWPNTYSZ
POP d3
MULTR d2,d3
POP d3
ADDR d2,d3
STORED d2,5
GOTO 7383
LOADD d2,11
PUSHR d2
POP REFEWPN
SETR d2,EWPNX
ADDV d2,8
STORED d2,6
LOADD d2,11
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
ADDV d2,8
STORED d2,5
LOADD d2,7
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7442
SETV d2,0
STORED d2,1
LOADD d2,1
PUSHR d2
LOADD d2,3
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7433
PUSHR d4
PUSHV 0.7426; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Return Addr
LOADD d2,9; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Params
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,5
PUSHR d2
LOADD d2,4
PUSHR d2
LOADD d2,1
MULTV d2,6.2832
SETV d2,6.2832
PUSHR d2
LOADD d2,1
POP d3
MULTR d2,d3
PUSHR d2
LOADD d2,3
POP d3
DIVR d3,d2
SETR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
GOTO 9555; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Call
POP d4
LOADD d2,1
PUSHR d2
ADDV d2,1
STORED d2,1
POP d2
GOTO 7390
LOADD d2,9; InlineFunc[void Game->PlaySound(int)] Params
PUSHR d2
SETV d2,2
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
GOTO 7603
LOADD d2,7
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7488
SETV d2,0
STORED d2,1
LOADD d2,1
PUSHR d2
LOADD d2,3
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7479
PUSHR d4
PUSHV 0.7472; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Return Addr
LOADD d2,9; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Params
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,5
PUSHR d2
SETV d3,31416; InlineFunc[int Rand(int)] Params
RNDR d2,d3; InlineFunc[int Rand(int)] Body
DIVV d2,5000
PUSHR d2
GOTO 9555; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Call
POP d4
LOADD d2,1
PUSHR d2
ADDV d2,1
STORED d2,1
POP d2
GOTO 7449
LOADD d2,9; InlineFunc[void Game->PlaySound(int)] Params
PUSHR d2
SETV d2,2
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
GOTO 7603
LOADD d2,3
COMPAREV d2,1
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7563
SETR d2,LINKX; InlineFunc[int ArcTan(int, int)] Params
ADDV d2,8
PUSHR d2
LOADD d2,6
POP d3
SUBR d3,d2
PUSHR d3
SETR d2,LINKY
ADDV d2,8
PUSHR d2
LOADD d2,5
POP d3
SUBR d3,d2
SETR d1,d3
POP d0; InlineFunc[int ArcTan(int, int)] Body Start
ARCTANR d2; InlineFunc[int ArcTan(int, int)] Body End
PUSHR d2
LOADD d2,4
DIVV d2,2
POP d3
SUBR d3,d2
SETR d2,d3
STORED d2,1
SETV d2,0
STORED d2,0
LOADD d2,0
PUSHR d2
LOADD d2,3
POP d3
COMPARER d3,d2
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7562
PUSHR d4
PUSHV 0.7555; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Return Addr
LOADD d2,9; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Params
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,5
PUSHR d2
LOADD d2,1
PUSHR d2
LOADD d2,4
PUSHR d2
LOADD d2,0
POP d3
MULTR d2,d3
PUSHR d2
LOADD d2,3
SUBV d2,1
POP d3
DIVR d3,d2
SETR d2,d3
POP d3
ADDR d2,d3
PUSHR d2
GOTO 9555; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 7520
GOTO 7595
LOADD d2,3
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7595
PUSHR d4
PUSHV 0.7594; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Return Addr
LOADD d2,9; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Params
PUSHR d2
LOADD d2,6
PUSHR d2
LOADD d2,5
PUSHR d2
SETR d2,LINKX; InlineFunc[int ArcTan(int, int)] Params
ADDV d2,8
PUSHR d2
LOADD d2,6
POP d3
SUBR d3,d2
PUSHR d3
SETR d2,LINKY
ADDV d2,8
PUSHR d2
LOADD d2,5
POP d3
SUBR d3,d2
SETR d1,d3
POP d0; InlineFunc[int ArcTan(int, int)] Body Start
ARCTANR d2; InlineFunc[int ArcTan(int, int)] Body End
PUSHR d2
GOTO 9555; UsrFunc[void __CopyEWeapon(EWeapon, int, int, int)] Call
POP d4
LOADD d2,9; InlineFunc[void Game->PlaySound(int)] Params
PUSHR d2
SETV d2,2
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
SETV d2,0
PUSHR d2
LOADD d2,11
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0012
RETURN; Func[void __DoEWeaponDeathPrototype(EWeapon)] Body End
PUSHR d2; Func[void __DoEWeaponDeathAimAtLink(EWeapon)] Body Start
SETR d4,SP
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
SUBV d2,1
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,14
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 7705
PUSHR d4
PUSHV 0.7668; UsrFunc[int RadianAngle(int, int, int, int)] Return Addr
LOADD d2,1; UsrFunc[int RadianAngle(int, int, int, int)] Params
PUSHR d2
POP REFEWPN
PUSHR EWPNX
LOADD d2,1
PUSHR d2
POP REFEWPN
PUSHR EWPNY
PUSHR LINKX
PUSHR LINKY
GOTO 26; UsrFunc[int RadianAngle(int, int, int, int)] Call
POP d4
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
PUSHR d4
PUSHV 0.7682; UsrFunc[void SetEWeaponDir(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponDir(EWeapon)] Params
PUSHR d2
GOTO 1817; UsrFunc[void SetEWeaponDir(EWeapon)] Call
POP d4
SETV d2,300
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
SETV d2,13
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 7786
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGULAR
COMPAREV d2,0
GOTOTRUE 7731
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGLE
ADDV d2,0.3000
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
PUSHR d4
PUSHV 0.7729; UsrFunc[void SetEWeaponDir(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponDir(EWeapon)] Params
PUSHR d2
GOTO 1817; UsrFunc[void SetEWeaponDir(EWeapon)] Call
POP d4
GOTO 7786
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,6
STORED d2,0
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7753
PUSHR d4
PUSHV 0.7751; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 0
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
GOTO 7786
LOADD d2,0
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7766
PUSHR d4
PUSHV 0.7764; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 3
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
GOTO 7786
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7779
PUSHR d4
PUSHV 0.7777; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 1
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
GOTO 7786
PUSHR d4
PUSHV 0.7785; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Return Addr
LOADD d2,1; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Params
PUSHR d2
PUSHV 2
GOTO 2482; UsrFunc[void SetEWeaponRotation(EWeapon, int)] Call
POP d4
POPARGS d5,0.0002
RETURN; Func[void __DoEWeaponDeathAimAtLink(EWeapon)] Body End
SETR d4,SP; Func[void __DoEWeaponDeathExplode(EWeapon)] Body Start
PUSHR d4
PUSHV 0.7823; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 135; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.7797; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.7805; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
PUSHR EWPNDIR
PUSHV 0
LOADD d2,0
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHV -1
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
SETV d2,0
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0001
RETURN; Func[void __DoEWeaponDeathExplode(EWeapon)] Body End
SETR d4,SP; Func[void __DoEWeaponDeathSBombExplode(EWeapon)] Body Start
PUSHR d4
PUSHV 0.7870; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 136; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.7844; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.7852; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
PUSHR EWPNDIR
PUSHV 0
LOADD d2,0
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHV -1
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
SETV d2,0
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0001
RETURN; Func[void __DoEWeaponDeathSBombExplode(EWeapon)] Body End
PUSHR d2; Func[void __DoEWeaponDeath4FireballsHV(EWeapon)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,4
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 7937
PUSHR d4
PUSHV 0.7930; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 129; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.7901; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.7909; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 200
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 7886
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0002
RETURN; Func[void __DoEWeaponDeath4FireballsHV(EWeapon)] Body End
PUSHR d2; Func[void __DoEWeaponDeath4FireballsDiag(EWeapon)] Body Start
SETR d4,SP
SETV d2,4
STORED d2,0
LOADD d2,0
COMPAREV d2,8
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8003
PUSHR d4
PUSHV 0.7996; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 129; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.7967; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.7975; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 200
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 7952
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0002
RETURN; Func[void __DoEWeaponDeath4FireballsDiag(EWeapon)] Body End
PUSHR d2; Func[void __DoEWeaponDeath4FireballsRand(EWeapon)] Body Start
SETR d4,SP
SETV d3,2; InlineFunc[int Rand(int)] Params
RNDR d2,d3; InlineFunc[int Rand(int)] Body
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8076
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,4
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8075
PUSHR d4
PUSHV 0.8068; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 129; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.8039; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.8047; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 200
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 8024
GOTO 8129
SETV d2,4
STORED d2,0
LOADD d2,0
COMPAREV d2,8
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8129
PUSHR d4
PUSHV 0.8122; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 129; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.8093; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.8101; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 200
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 8078
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0002
RETURN; Func[void __DoEWeaponDeath4FireballsRand(EWeapon)] Body End
PUSHR d2; Func[void __DoEWeaponDeath8Fireballs(EWeapon)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,8
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8195
PUSHR d4
PUSHV 0.8188; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 129; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.8159; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.8167; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 200
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 8144
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0002
RETURN; Func[void __DoEWeaponDeath8Fireballs(EWeapon)] Body End
PUSHR d2; Func[void __DoEWeaponDeath4FiresHV(EWeapon)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,4
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8261
PUSHR d4
PUSHV 0.8254; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 140; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.8225; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.8233; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 100
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 8210
SETV d2,13; InlineFunc[void Game->PlaySound(int)] Params
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0002
RETURN; Func[void __DoEWeaponDeath4FiresHV(EWeapon)] Body End
PUSHR d2; Func[void __DoEWeaponDeath4FiresDiag(EWeapon)] Body Start
SETR d4,SP
SETV d2,4
STORED d2,0
LOADD d2,0
COMPAREV d2,8
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8329
PUSHR d4
PUSHV 0.8322; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 140; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.8293; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.8301; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 71
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 8278
SETV d2,13; InlineFunc[void Game->PlaySound(int)] Params
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0002
RETURN; Func[void __DoEWeaponDeath4FiresDiag(EWeapon)] Body End
PUSHR d2; Func[void __DoEWeaponDeath4FiresRand(EWeapon)] Body Start
SETR d4,SP
SETV d3,2; InlineFunc[int Rand(int)] Params
RNDR d2,d3; InlineFunc[int Rand(int)] Body
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8404
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,4
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8403
PUSHR d4
PUSHV 0.8396; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 140; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.8367; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.8375; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 100
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 8352
GOTO 8457
SETV d2,4
STORED d2,0
LOADD d2,0
COMPAREV d2,8
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8457
PUSHR d4
PUSHV 0.8450; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 140; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.8421; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.8429; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 71
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 8406
SETV d2,13; InlineFunc[void Game->PlaySound(int)] Params
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0002
RETURN; Func[void __DoEWeaponDeath4FiresRand(EWeapon)] Body End
PUSHR d2; Func[void __DoEWeaponDeath8Fires(EWeapon)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,0
LOADD d2,0
COMPAREV d2,4
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8525
PUSHR d4
PUSHV 0.8518; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 140; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.8489; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.8497; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 100
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 8474
SETV d2,4
STORED d2,0
LOADD d2,0
COMPAREV d2,8
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8578
PUSHR d4
PUSHV 0.8571; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 140; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.8542; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.8550; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 71
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,1
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
LOADD d2,0
PUSHR d2
ADDV d2,1
STORED d2,0
POP d2
GOTO 8527
SETV d2,13; InlineFunc[void Game->PlaySound(int)] Params
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0002
RETURN; Func[void __DoEWeaponDeath8Fires(EWeapon)] Body End
PUSHR d2; Func[void __DoEWeaponDeathSpawnNPC(EWeapon)] Body Start
SETR d4,SP
LOADD d2,1; InlineFunc[NPC Screen->CreateNPC(int)] Params
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
CREATENPCR d2; InlineFunc[NPC Screen->CreateNPC(int)] Body Start
SETR d2,REFNPC; InlineFunc[NPC Screen->CreateNPC(int)] Body End
STORED d2,0
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNX
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCX,d2
LOADD d2,1
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFNPC
SETR NPCY,d2
SETV d2,0
PUSHR d2
LOADD d2,1
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0002
RETURN; Func[void __DoEWeaponDeathSpawnNPC(EWeapon)] Body End
SETR d4,SP; Func[void __DoEWeaponDeathSingleFire(EWeapon)] Body Start
PUSHR d4
PUSHV 0.8678; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Return Addr
PUSHV 140; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Params
PUSHR d4
PUSHV 0.8647; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
PUSHR d4
PUSHV 0.8655; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
PUSHR EWPNDIR
PUSHV 0
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
DIVV d2,2
PUSHR d2
LOADD d2,0
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
PUSHR EWPNMISCD
PUSHARGSV 0,0.0002
GOTO 1407; UsrFunc[EWeapon FireNonAngularEWeapon(int, int, int, int, int, int, int, int, int)] Call
POP d4
SETV d2,13; InlineFunc[void Game->PlaySound(int)] Params
PLAYSOUNDR d2; InlineFunc[void Game->PlaySound(int)] Body
SETV d2,0
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
POPARGS d5,0.0001
RETURN; Func[void __DoEWeaponDeathSingleFire(EWeapon)] Body End
PUSHARGSR d2,0.0005; Func[void __DoEWeaponDeathRunScript(EWeapon)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,4
SETV d2,0
STORED d2,3
SETV d2,0
STORED d2,2
SETV d2,0
STORED d2,1
PUSHR d4
PUSHV 0.8705; UsrFunc[int FindUnusedFFC()] Return Addr
GOTO 1347; UsrFunc[int FindUnusedFFC()] Call
POP d4
STORED d2,4
LOADD d2,4
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8722
SETV d2,0
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNDEAD,d2
GOTO 8868
LOADD d2,4; InlineFunc[FFC Screen->LoadFFC(int)] Params
SUBV d2,1; InlineFunc[FFC Screen->LoadFFC(int)] Body
STORED d2,3
SETR d2,EWPNCOUNT; InlineFunc[int Screen->NumEWeapons()] Body
STORED d2,0
LOADD d2,0
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8769
LOADD d2,0; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Params
SUBV d2,1; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Body Start
LOADEWEAPONR d2
SETR d2,REFEWPN; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Body End
STORED d2,2
LOADD d2,2
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,768
COMPAREV d2,512
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 8752
GOTO 8763
LOADD d2,1; InlineFunc[untyped Min(untyped, untyped)] Params
PUSHVARGR d2
LOADD d2,2
PUSHR d2
SETV d2,3
PUSHR d2
POP d0
POP REFEWPN
PUSHVARGR EWPNMISCD
MINVARG; InlineFunc[untyped Min(untyped, untyped)] Body
STORED d2,1
LOADD d2,0
PUSHR d2
SUBV d2,1
STORED d2,0
POP d2
GOTO 8727
LOADD d2,1
SUBV d2,1
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
SETV d2,3
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,5
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ORV d2,1024
PUSHR d2
LOADD d2,5
POP d3
PUSHR d2
PUSHR d3
SETV d2,15
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
SETV d2,1
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR DATA,d2
PUSHR d4
PUSHV 0.8815; UsrFunc[int CenterX(EWeapon)] Return Addr
LOADD d2,5; UsrFunc[int CenterX(EWeapon)] Params
PUSHR d2
GOTO 884; UsrFunc[int CenterX(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR X,d2
PUSHR d4
PUSHV 0.8830; UsrFunc[int CenterY(EWeapon)] Return Addr
LOADD d2,5; UsrFunc[int CenterY(EWeapon)] Params
PUSHR d2
GOTO 908; UsrFunc[int CenterY(EWeapon)] Call
POP d4
SUBV d2,8
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR Y,d2
LOADD d2,5
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFFFC
SETR FFSCRIPT,d2
LOADD d2,1
SUBV d2,1
PUSHR d2
LOADD d2,3
POP d3
PUSHR d2
PUSHR d3
SETV d2,0
PUSHR d2
POP d0
POP d2
POP REFFFC
SETR FFINITDD,d2
POPARGS d5,0.0006
RETURN; Func[void __DoEWeaponDeathRunScript(EWeapon)] Body End
PUSHARGSR d2,0.0002; Func[void UpdateEWeapons()] Body Start
SETR d4,SP
SETV d2,0
STORED d2,1
SETR d2,LINKACTION
COMPAREV d2,4
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 8884
SETR d2,LINKACTION
COMPAREV d2,5
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 8892
SETR d2,LINKACTION
COMPAREV d2,14
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0.0001
GOTOMORE 8900
SETR d2,LINKACTION
COMPAREV d2,15
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOFALSE 8958
SETR d2,EWPNCOUNT; InlineFunc[int Screen->NumEWeapons()] Body
STORED d2,0
LOADD d2,0
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 8957
LOADD d2,0; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Params
SUBV d2,1; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Body Start
LOADEWEAPONR d2
SETR d2,REFEWPN; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Body End
STORED d2,1
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,512
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 8941
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,256
COMPAREV d2,0
SETFALSEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 8945
GOTO 8951
PUSHR d4
PUSHV 0.8950; UsrFunc[void UpdateEWeapon(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void UpdateEWeapon(EWeapon)] Params
PUSHR d2
GOTO 2607; UsrFunc[void UpdateEWeapon(EWeapon)] Call
POP d4
LOADD d2,0
PUSHR d2
SUBV d2,1
STORED d2,0
POP d2
GOTO 8905
GOTO 9012
SETR d2,EWPNCOUNT; InlineFunc[int Screen->NumEWeapons()] Body
STORED d2,0
LOADD d2,0
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9012
LOADD d2,0; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Params
SUBV d2,1; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Body Start
LOADEWEAPONR d2
SETR d2,REFEWPN; InlineFunc[EWeapon Screen->LoadEWeapon(int)] Body End
STORED d2,1
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,512
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0.0001
GOTOMORE 8996
LOADD d2,1
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,256
COMPAREV d2,0
SETFALSEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 9000
GOTO 9006
PUSHR d4
PUSHV 0.9005; UsrFunc[void __UpdateEWeaponVisualFlags(EWeapon)] Return Addr
LOADD d2,1; UsrFunc[void __UpdateEWeaponVisualFlags(EWeapon)] Params
PUSHR d2
GOTO 9014; UsrFunc[void __UpdateEWeaponVisualFlags(EWeapon)] Call
POP d4
LOADD d2,0
PUSHR d2
SUBV d2,1
STORED d2,0
POP d2
GOTO 8960
POPARGS d5,0.0002
RETURN; Func[void UpdateEWeapons()] Body End
PUSHARGSR d2,0.0002; Func[void __UpdateEWeaponVisualFlags(EWeapon)] Body Start
SETR d4,SP
LOADD d2,2
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,8
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 9044
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNZ
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9044
PUSHR d4
PUSHV 0.9043; UsrFunc[void DrawEWeaponShadow(EWeapon)] Return Addr
LOADD d2,2; UsrFunc[void DrawEWeaponShadow(EWeapon)] Params
PUSHR d2
GOTO 993; UsrFunc[void DrawEWeaponShadow(EWeapon)] Call
POP d4
LOADD d2,2
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,4
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 9246
SETV d2,1000
PUSHR d2
LOADD d2,2
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNXOFS,d2
LOADD d2,2
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,16
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 9085
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ANDV d2,1
COMPAREV d2,0
SETFALSEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 9090
GOTO 9304
SETV d2,0
STORED d2,1
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNANGULAR
COMPAREV d2,0
GOTOTRUE 9105
LOADD d2,2; InlineFunc[int RadtoDeg(int)] Params
PUSHR d2
POP REFEWPN
SETR d3,EWPNANGLE
RADTODEG d2,d3; InlineFunc[int RadtoDeg(int)] Body
STORED d2,1
GOTO 9172
PUSHR d4
PUSHV 0.9112; UsrFunc[int __NormalizeDir(int)] Return Addr
LOADD d2,2; UsrFunc[int __NormalizeDir(int)] Params
PUSHR d2
POP REFEWPN
PUSHR EWPNDIR
GOTO 2200; UsrFunc[int __NormalizeDir(int)] Call
POP d4
STORED d2,0
LOADD d2,0
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9122
SETV d2,-90
STORED d2,1
GOTO 9172
LOADD d2,0
COMPAREV d2,5
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9130
SETV d2,-45
STORED d2,1
GOTO 9172
LOADD d2,0
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9138
SETV d2,0
STORED d2,1
GOTO 9172
LOADD d2,0
COMPAREV d2,7
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9146
SETV d2,45
STORED d2,1
GOTO 9172
LOADD d2,0
COMPAREV d2,1
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9154
SETV d2,90
STORED d2,1
GOTO 9172
LOADD d2,0
COMPAREV d2,6
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9162
SETV d2,135
STORED d2,1
GOTO 9172
LOADD d2,0
COMPAREV d2,2
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9170
SETV d2,180
STORED d2,1
GOTO 9172
SETV d2,-135
STORED d2,1
SETV d2,0
STORED d2,0
LOADD d2,1
COMPAREV d2,0
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 9185
LOADD d2,1
COMPAREV d2,180
SETMORE d2
COMPAREV d2,0
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 9192
SETV d2,0
STORED d2,0
GOTO 9194
SETV d2,2
STORED d2,0
PUSHV 4; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params
LOADD d2,2
PUSHR d2
POP REFEWPN
PUSHR EWPNX
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
PUSHR d2
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNZ
POP d3
SUBR d3,d2
PUSHR d3
LOADD d2,2
PUSHR d2
POP REFEWPN
PUSHR EWPNTILE
PUSHARGSV 1,0.0002
LOADD d2,2
PUSHR d2
POP REFEWPN
PUSHR EWPNCSET
PUSHARGSV -1,0.0002
LOADD d2,2
PUSHR d2
POP REFEWPN
PUSHR EWPNX
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
PUSHR d2
LOADD d2,2
PUSHR d2
POP REFEWPN
SETR d2,EWPNZ
POP d3
SUBR d3,d2
PUSHR d3
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
PUSHV 1
PUSHV 128
DRAWTILE; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0015; InlineFunc[void Screen->DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
GOTO 9304
LOADD d2,2
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,16
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 9286
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ANDV d2,1
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 9277
SETV d2,1000
PUSHR d2
LOADD d2,2
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNXOFS,d2
GOTO 9286
SETV d2,0
PUSHR d2
LOADD d2,2
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNXOFS,d2
LOADD d2,2
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 9304
PUSHR d4
PUSHV 0.9303; UsrFunc[void SetEWeaponRotation(EWeapon)] Return Addr
LOADD d2,2; UsrFunc[void SetEWeaponRotation(EWeapon)] Params
PUSHR d2
GOTO 1949; UsrFunc[void SetEWeaponRotation(EWeapon)] Call
POP d4
POPARGS d5,0.0003
RETURN; Func[void __UpdateEWeaponVisualFlags(EWeapon)] Body End
SETR d4,SP; Func[void UpdateGhostZH1()] Body Start
PUSHR d4
PUSHV 0.9310; UsrFunc[void UpdateEWeapons()] Return Addr
GOTO 8870; UsrFunc[void UpdateEWeapons()] Call
PEEK d4
PUSHV 0.9313; UsrFunc[void CleanUpGhostFFCs()] Return Addr
GOTO 932; UsrFunc[void CleanUpGhostFFCs()] Call
PEEK d4
PUSHV 0.9316; UsrFunc[void UpdateGhostZHData1()] Return Addr
GOTO 9318; UsrFunc[void UpdateGhostZHData1()] Call
POP d4
RETURN; Func[void UpdateGhostZH1()] Body End
PUSHR d2; Func[void UpdateGhostZHData1()] Body Start
SETR d4,SP
SETR d2,CURDMAP; InlineFunc[int Game->GetCurDMap()] Body
LSHIFTV d2,8
PUSHR d2
SETR d2,CURDSCR; InlineFunc[int Game->GetCurDMapScreen()] Body
POP d3
ADDR d2,d3
STORED d2,0
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,7
PUSHR d2
LOADD d2,0
POP d3
COMPARER d3,d2
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 9351
SETV d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 6,d2
LOADD d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 7,d2
GOTO 9373
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,6
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9373
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,6
PUSHR d2
SUBV d2,1
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 6,d2
POP d2
POPARGS d5,0.0001
RETURN; Func[void UpdateGhostZHData1()] Body End
SETR d4,SP; Func[void UpdateGhostZH2()] Body Start
PUSHR d4
PUSHV 0.9379; UsrFunc[void DrawGhostFFCs()] Return Addr
GOTO 1060; UsrFunc[void DrawGhostFFCs()] Call
PEEK d4
PUSHV 0.9382; UsrFunc[void AutoGhost()] Return Addr
GOTO 73; UsrFunc[void AutoGhost()] Call
PEEK d4
PUSHV 0.9385; UsrFunc[void UpdateGhostZHData2()] Return Addr
GOTO 9387; UsrFunc[void UpdateGhostZHData2()] Call
POP d4
RETURN; Func[void UpdateGhostZH2()] Body End
SETR d4,SP; Func[void UpdateGhostZHData2()] Body Start
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,1
ADDV d2,1
MODV d2,8
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 1,d2
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ANDV d2,1
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9419
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ORV d2,1
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
GOTO 9429
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,0
ANDV d2,-2
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,3
PUSHR d2
ADDV d2,1
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 3,d2
POP d2
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,3
COMPAREV d2,8
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 9466
SETV d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 3,d2
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,2
ADDV d2,1
MODV d2,4
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 2,d2
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,5
PUSHR d2
ADDV d2,1
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 5,d2
POP d2
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,5
COMPAREV d2,8
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 9503
SETV d2,0
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 5,d2
SETR d2,gd27
PUSHR d2
POP d0
READPODARRAYV d2,4
ADDV d2,1
MODV d2,4
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 4,d2
RETURN; Func[void UpdateGhostZHData2()] Body End
SETR d4,SP; Func[bool __IsScriptNameChar(int, bool)] Body Start
LOADD d2,1
COMPAREV d2,97
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 9517
LOADD d2,1
COMPAREV d2,122
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 9517
SETV d2,1
GOTO 9553
LOADD d2,1
COMPAREV d2,65
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 9529
LOADD d2,1
COMPAREV d2,90
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 9529
SETV d2,1
GOTO 9553
LOADD d2,1
COMPAREV d2,95
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9536
SETV d2,1
GOTO 9553
LOADD d2,0
COMPAREV d2,0
GOTOFALSE 9551
LOADD d2,1
COMPAREV d2,48
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 9551
LOADD d2,1
COMPAREV d2,57
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 9551
SETV d2,1
GOTO 9553
SETV d2,0
GOTO 9553
POPARGS d5,0.0002
RETURN; Func[bool __IsScriptNameChar(int, bool)] Body End
PUSHR d2; Func[void __CopyEWeapon(EWeapon, int, int, int)] Body Start
SETR d4,SP
LOADD d2,4; InlineFunc[EWeapon Screen->CreateEWeapon(int)] Params
PUSHR d2
POP REFEWPN
SETR d2,EWPNID
CREATEEWEAPONR d2; InlineFunc[EWeapon Screen->CreateEWeapon(int)] Body Start
SETR d2,REFEWPN; InlineFunc[EWeapon Screen->CreateEWeapon(int)] Body End
STORED d2,0
LOADD d2,4
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,0
SETLESS d2
COMPAREV d2,0
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9589
LOADD d2,0; InlineFunc[void EWeapon->UseSprite(int)] Params
PUSHR d2
LOADD d2,4
PUSHR d2
SETV d2,5
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
POP d3; InlineFunc[void EWeapon->UseSprite(int)] Body Start
SETR REFEWPN,d3
EWPNUSESPRITER d2; InlineFunc[void EWeapon->UseSprite(int)] Body End
LOADD d2,4
PUSHR d2
POP REFEWPN
SETR d2,EWPNEXTEND
COMPAREV d2,3
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9725
SETV d2,3
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNEXTEND,d2
LOADD d2,4
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNTXSZ,d2
LOADD d2,4
PUSHR d2
POP REFEWPN
SETR d2,EWPNTYSZ
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNTYSZ,d2
LOADD d2,4
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
MULTV d2,16
SETV d2,16
PUSHR d2
LOADD d2,4
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
POP d3
MULTR d2,d3
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNHXSZ,d2
LOADD d2,4
PUSHR d2
POP REFEWPN
SETR d2,EWPNTYSZ
MULTV d2,16
SETV d2,16
PUSHR d2
LOADD d2,4
PUSHR d2
POP REFEWPN
SETR d2,EWPNTYSZ
POP d3
MULTR d2,d3
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNHYSZ,d2
LOADD d2,3
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
MULTV d2,8
SETV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
POP d3
MULTR d2,d3
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNX,d2
LOADD d2,2
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
MULTV d2,8
SETV d2,8
PUSHR d2
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNTXSZ
POP d3
MULTR d2,d3
POP d3
SUBR d3,d2
SETR d2,d3
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNY,d2
GOTO 9745
LOADD d2,3
SUBV d2,8
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNX,d2
LOADD d2,2
SUBV d2,8
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNY,d2
LOADD d2,4
PUSHR d2
SETV d2,4
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNSTEP,d2
LOADD d2,4
PUSHR d2
POP REFEWPN
SETR d2,EWPNPOWER
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNPOWER,d2
SETV d2,1
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
CASTBOOLI d2
POP REFEWPN
SETR EWPNANGULAR,d2
LOADD d2,1
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
POP REFEWPN
SETR EWPNANGLE,d2
PUSHR d4
PUSHV 0.9796; UsrFunc[void SetEWeaponDir(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[void SetEWeaponDir(EWeapon)] Params
PUSHR d2
GOTO 1817; UsrFunc[void SetEWeaponDir(EWeapon)] Call
POP d4
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNX
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,4
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,0
PUSHR d2
POP REFEWPN
SETR d2,EWPNY
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,5
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,4
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,8
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,4
PUSHR d2
SETV d2,10
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,10
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,4
PUSHR d2
SETV d2,8
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,15
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 9884
LOADD d2,4
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
COMPAREV d2,-1
SETTRUEI d2
CASTBOOLF d2
COMPAREV d2,0.0001
SETMOREI d2
COMPAREV d2,0
GOTOTRUE 9906
PUSHR d4
PUSHV 0.9893; UsrFunc[int __GetEWeaponThrowHeight(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[int __GetEWeaponThrowHeight(EWeapon)] Params
PUSHR d2
GOTO 2362; UsrFunc[int __GetEWeaponThrowHeight(EWeapon)] Call
POP d4
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,9
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
GOTO 9924
LOADD d2,4
PUSHR d2
SETV d2,9
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,9
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,4
PUSHR d2
SETV d2,11
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,11
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,4
PUSHR d2
SETV d2,12
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,12
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,4
PUSHR d2
SETV d2,13
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,13
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,4
PUSHR d2
SETV d2,14
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,14
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,4
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,-257
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
SETV d2,15
PUSHR d2
POP d0
POP d2
POP REFEWPN
SETR EWPNMISCD,d2
LOADD d2,0
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,32
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 10037
SETV d2,0
PUSHR d2
LOADD d2,0
POP d3
PUSHR d2
PUSHR d3
POP d2
CASTBOOLI d2
POP REFEWPN
SETR EWPNCOLLDET,d2
LOADD d2,0
PUSHR d2
SETV d2,15
PUSHR d2
POP d0
POP REFEWPN
SETR d2,EWPNMISCD
ANDV d2,2
COMPAREV d2,0
SETFALSEI d2
COMPAREV d2,0
GOTOTRUE 10055
PUSHR d4
PUSHV 1.0054; UsrFunc[void SetEWeaponRotation(EWeapon)] Return Addr
LOADD d2,0; UsrFunc[void SetEWeaponRotation(EWeapon)] Params
PUSHR d2
GOTO 1949; UsrFunc[void SetEWeaponRotation(EWeapon)] Call
POP d4
POPARGS d5,0.0005
RETURN; Func[void __CopyEWeapon(EWeapon, int, int, int)] Body End
PUSHR d2; Func[bool ghost2__OnSidePlatform(int, int, int, int, int, int)] Body Start
SETR d4,SP
SETV d2,0
STORED d2,0
LOADD d2,0
PUSHR d2
LOADD d2,1
SUBV d2,1
POP d3
COMPARER d3,d2
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 10107
LOADD d2,6; InlineFunc[bool Screen->isSolid(int, int)] Params
PUSHR d2
LOADD d2,4
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,0
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,5
PUSHR d2
LOADD d2,3
POP d3
ADDR d2,d3
PUSHR d2
LOADD d2,2
POP d3
ADDR d2,d3
SETR d1,d2
POP d0; InlineFunc[bool Screen->isSolid(int, int)] Body Start
ISSOLID d2; InlineFunc[bool Screen->isSolid(int, int)] Body End
COMPAREV d2,0
GOTOTRUE 10103
SETV d2,0
PUSHR d2
POP d0
SETR d2,SCREENFLAGSD
ANDV d2,4
COMPAREV d2,0
GOTOTRUE 10103
SETV d2,1
GOTO 10109
LOADD d2,0
ADDV d2,1
STORED d2,0
GOTO 10061
SETV d2,0
GOTO 10109
POPARGS d5,0.0007
RETURN; Func[bool ghost2__OnSidePlatform(int, int, int, int, int, int)] Body End


PUSHR d0; void run(int) Params
PUSHR REFITEMCLASS; void run(int) Body Start
SETR d4,SP
LOADD d2,1
COMPAREV d2,0
SETLESSI d2
COMPAREV d2,0
GOTOTRUE 16
SETV d2,-1
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 6,d2
GOTO 22
LOADD d2,1
PUSHR d2
SETR d2,gd27
SETR d0,d2
POP d2
WRITEPODARRAYVR 6,d2
POPARGS d5,0.0002
QUIT; void run(int) Body End


SETV gd9,0; void run() Body Start
SETV gd10,0
SETV gd12,0
SETV gd11,0
SETV gd5,0
SETV gd15,0
SETV gd6,0
SETV gd14,0
SETV gd13,0
SETV gd7,0
SETV gd8,0
SETV gd2,0
SETV gd3,0
SETV gd4,0
ALLOCATEGMEMV d2,25
SETR gd26,d2
SETV gd16,0
SETV gd17,0
SETV gd21,0
SETV gd18,0
SETV gd22,0
SETV gd19,0
SETV gd20,0
ALLOCATEGMEMV d2,32
SETR gd25,d2
SETV gd23,0
SETV gd24,0
ALLOCATEGMEMV d2,8
SETR gd27,d2
ALLOCATEGMEMV d2,1000
SETR gd28,d2
ALLOCATEGMEMV d2,4096
SETR gd1,d2
QUIT; void run() Body End

